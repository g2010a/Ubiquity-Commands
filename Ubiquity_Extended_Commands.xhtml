<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>Ubiquity Extended Commands</title>
  <link rel="commands" href="Ubiquity_Extended_Commands.xhtml"/>
</head>
<style>
  div[id] {display: none}
  script {display: block; white-space: pre; font-family: monospace; color:gray;}
  ol item { display: block; white-space:pre; margin-top: 0.5em; margin-left:1em;}
</style>
<body>
<p>This XHTML feed contains extended commands for Mozilla's Ubiquity.</p>
<p>Get Ubiquity here: <a href="https://bitbucket.org/satyr/ubiquity/downloads/tip.xpi">https://bitbucket.org/satyr/ubiquity/downloads/tip.xpi</a></p>
<ol>
    <item>BOOKMARKLETS </item>
    <item>diaspora: Share the current page on Diaspora</item>
    <item>paste_passwords: Attempt to allow pasting into password fields in pages that have programmatically disallowed it</item>
    <item>plus: Share the current page on Google Plus</item>
    <item>textarea2editor: Triple-click a plain textarea to turn it into a Code Editor using the ACE Bookmarklet</item>
    <item>wishlist: Execute the Amazon Universal Wishlist bookmarklet</item>
    <item>COMMANDS </item>
    <item>aarne-thompson: Returns the type of an aarne-thompson number</item>
    <item>Amazon.de: Searches Amazon.de for items matching your words</item>
    <item>beautify_js: Beautifies JavaScript code using the engine behind jsbeautifier.org</item>
    <item>bigpicture: Previews Boston.com's The Big Picture (from RSS Feed)</item>
    <item>calcg: Calculates using Google Calculator</item>
    <item>chart: Turn numeric data into charts using the Google Charts API</item>
    <item>color: Accepts a textual color code and previews it. Pressing enter inserts a small block of that color at the cursor</item>
    <item>datatable: Enhances tables in the page to make them sortable, filterable, etc. using jQuery and the datatables plugin from http://datatables.net. Takes a tableid as argument or applies to all tables if nothing is passed.</item>
    <item>decode: Decodes URL-encoded text</item>
    <item>dict: Searches Dict.cc for a German/English term and loads results in the preview pane</item>
    <item>dictes: Searches Dict.cc for a German/Spanish term and loads the results in the preview pane</item>
    <item>emoji: returns a text emoji (unicode)</item>
    <item>encode: URL-encodes text</item>
    <item>fortune: Retrieves a Unix Fortune from the online service ihearquotes.com</item>
    <item>get-color: Grab colors from web pages</item>
    <item>lds: Searches LDS.org and loads results into the Preview pane</item>
    <item>url parser: Breaks URLS into their components</item>
    <item>qrcode: Generates a QR Code with the specified text encoded</item>
    <item>stock-chart: Displays a stock chart for the given ticker (from Yahoo! finance)</item>
    <item>text2html: Renders plain text as HTML</item>
    <item>wolf: Searches WolframAlpha and loads results in to Preview pane</item>    
    <item>yubnub: Executes YubNub commands and loads results in to Preview pane where possible.</item>    
</ol>
<!-- ============================================ -->
<!--	Template for Amazon Search                -->
<!-- ============================================ -->
<div id="amazon-search">
<style>
  ol, ul {list-style: none; margin: 0; padding: 0}
  img {float: right; margin: 0 0 0.5em 0.5em}
  kbd {vertical-align: middle; text-transform: uppercase}
  kbd:after {content: ":"}
  kbd, .price {font-weight: bolder}
  .item {margin-top: 0.4em; clear: right}
  .feature {margin-top: 0.2em}
  .price, .author, .label, .feature {font-size: 88%}
  .author:before {content: "by "}
  .feature:before {content: "\2022  "}
</style>
${matchMessage}
<ol>
{for item in items}
  <li class="item">
    {if item.image}
      <a href="${item.url}"><img src="${item.image.src}" border="0"
        height="${item.image.height}" width="${item.image.width}"/></a>
    {/if}
    <kbd>${item.key}</kbd>
    <a href="${item.url}" accesskey="${item.key}">${item.title}</a>
    {if item.price}
      <nobr class="price">
        ${item.price.amount} (${item.price.currency})
      </nobr>
    {/if}
    {if item.author}
      <div class="author">${item.author}</div>
    {/if}
    {if item.label}
      <div class="label">${item.label}</div>
    {/if}
    <ul>
    {for feature in item.features}
      <li class="feature">${feature}</li>
    {/for}
    </ul>
  </li>
{/for}
</ol>
</div>

<!-- ============================================ -->
<!--	Template for Big Picture				  -->
<!-- ============================================ -->
<div id="big-picture">
<style>
div.container { 
	font-size: 12px; 
	margin: 5px 0 35px 0;
	max-width: 470px;
}
.header { 
	background-color: #444;
	padding: 10px;
	border-radius: 10px 10px 0 0;
}
span.image {
	display:block;
	margin-top: 5px; 
	background-color: #444;
	border-radius: 0px 10px 10px 10px;
	padding: 10px;
}
img { border-radius: 10px; }
</style>
{for item in items}
    <div class='container'>
		<a href='${item.permalink}'>
			<span class='header'><span class='date'>${item.pubDate}</span> | ${item.title}</span>
			<br/><span class='image'>${item.image}</span>
		</a>
    </div>
{/for}
</div>

<!-- ============================================ -->
<!--	Template for dict.cc					  -->
<!-- ============================================ -->
<div id="dict">
<style>
.entry { padding: 10px; }
.entry h2 {
	font-size: .9rem;
	margin: 0px;
}
.entry div { margin-left: 20px; }
.entry a { text-decoration: none; }
.entry a:hover { text-decoration: underline; }
</style>
{for item in items}
	<div class='entry ${item.class}'>
		<h2>${item.entry}</h2>
		<div>${item.description}</div>
	</div>
{/for}
</div>

<!-- ============================================ -->
<!--	Template for DuckDuckGo 				  -->
<!-- ============================================ -->
<div id="duckduckgo">
<style>
.header:not(:empty) {
    font-weight:800;
    text-transform: uppercase;
}
div.container { 
	max-width: 470px;
}
div {
	display:block;
    padding: 10px 5px 5px 5px; 
    border: 1px solid #666666;
    margin: 10px 0;
    border-radius: 15px;
}
div:empty {
    display: none;
}
a {
    color: #DDEEFF
}
img { border-radius: 10px; }
li {
    list-style: none;
    margin: 3px 0px;
}
</style>
<div>${Image}</div>
<div>${Abstract}</div>
<div>${Answer}</div>
<div>${Definition}</div>
{for item in RelatedTopics}
    <div class='container'>
		${item.Result}<span class='header'>${item.Name}</span>
        <ul>
            {for topic in item.Topics}
                <li>
                    <img src='${topic.Icon.URL}'/>
                    ${topic.Result}
                </li>
            {/for}
        </ul>
    </div>
{/for}
</div>

<!-- ============================================ -->
<!--  Template for emoji                          -->
<!-- ============================================ -->
<div id="emoji">
<style>
.container {
    font-family: "Apple Color Emoji","Segoe UI Emoji","NotoColorEmoji","Segoe UI Symbol","Android Emoji","EmojiSymbols";
}
.emoji {
    list-style: none;
    margin: 3px 0px;
    padding: 10px;
    display: inline-block;
}
</style>
<div class='container'>
    {for emobj in matches}
      <span class='emoji' title='${emobj.title}'>${emobj.s}</span>
    {/for}
</div>
</div>



<script type="?" class="commands">
<![CDATA[
/**
 * Bookmarklets
 * Execute a variety of bookmarklets
 */
CmdUtils.makeBookmarkletCommand({
	names: ["diaspora", "Share on Diaspora"],
	icon: "http://joindiaspora.com/favico.ico",
	description: "Share the current page on Diaspora",
	url: "javascript:(function(){f='https://diasp.org/bookmarklet?url='+encodeURIComponent(window.location.href)+'&title='+encodeURIComponent(document.title)+'&notes='+encodeURIComponent(''+(window.getSelection?window.getSelection():document.getSelection?document.getSelection():document.selection.createRange().text))+'&v=1&';a=function(){if(!window.open(f+'noui=1&jump=doclose','diasporav1','location=yes,links=no,scrollbars=no,toolbar=no,width=620,height=250'))location.href=f+'jump=yes'};if(/Firefox/.test(navigator.userAgent)){setTimeout(a,0)}else{a()}})()"
})

CmdUtils.makeBookmarkletCommand({
	names: ["paste_passwords", "Allow Password Pasting"],
	description: "Attempt to allow pasting into password fields in pages that have programmatically disallowed it",
	url: "javascript:(function(){var%20inputs=document.getElementsByTagName('input');for(var%20i=0;i<inputs.length;i++){if(inputs[i].getAttribute('type').toLowerCase()==='password'){inputs[i].setAttribute('onpaste','');}}})();"
})

CmdUtils.makeBookmarkletCommand({	
	names: ["plus", "Share on Google+"],
	icon: "https://www.gstatic.com/images/icons/gplus-64.png",
	description: "Share the current page on Google Plus",
	url: "javascript:void(window.open('https://plus.google.com/share?ur\l='+encodeURIComponent(location),%20'Share%20to%20Google+','width=600,height=460,menubar=no,location=no,status=no'))"
})

CmdUtils.makeBookmarkletCommand({
	names: ["textarea2editor"],
    icon: "http://ajaxorg.github.com/ace/doc/site/images/ace-tab.png",
	description: "Triple-click a plain textarea to turn it into a Code Editor using the ACE Bookmarklet",
    url: "javascript:(function%20inject(callback)%20{%20var%20baseUrl='https://ajaxorg.github.com/ace-builds/src-noconflict/';%20var%20load%20=%20window.__ace_loader__%20=%20function(path,%20module,%20callback)%20{%20var%20head%20=%20document.getElementsByTagName('head')[0];%20var%20s%20=%20document.createElement('script');%20s.src%20=%20baseUrl%20+%20path;%20head.appendChild(s);%20s.onload%20=%20function()%20{%20window.__ace_shadowed__.require([module],%20callback);%20};%20};%20load('ace-bookmarklet.js',%20'ace/ext/textarea',%20function()%20{%20var%20ace%20=%20window.__ace_shadowed__;%20ace.options%20=%20{mode:'javascript',theme:'twilight',gutter:'false',fontSize:'12px',softWrap:'off',keybindings:'ace',showPrintMargin:'false',useSoftTabs:'true',showInvisibles:'false'%20};%20var%20Event%20=%20ace.require('ace/lib/event');%20var%20areas%20=%20document.getElementsByTagName('textarea');%20for%20(var%20i%20=%200;%20i%20<%20areas.length;%20i++)%20{%20Event.addListener(areas[i],%20'click',%20function(e)%20{%20if%20(e.detail%20==%203)%20{%20ace.transformTextarea(e.target,%20load);%20}%20});%20}%20callback%20&&%20callback();%20});%20})()"
})

CmdUtils.makeBookmarkletCommand({
	names: ["wishlist", "Amazon universal wishlist"],
	description: "Execute the Amazon Universal Wishlist bookmarklet",
	url: "javascript:(function(){var%20w=window,l=w.location,d=w.document,s=d.createElement('script'),e=encodeURIComponent,x='undefined',u='http://www.amazon.com/wishlist/add';if(typeof%20s!='object')l.href=u+'?u='+e(l)+'&t='+e(d.title);function%20g(){if(d.readyState&&d.readyState!='complete'){setTimeout(g,200);}else{if(typeof%20AUWLBook==x)s.setAttribute('src',u+'.js?loc='+e(l)),d.body.appendChild(s);function%20f(){(typeof%20AUWLBook==x)?setTimeout(f,200):AUWLBook.showPopover();}f();}}g();}())"
})

/**
 * Search commands
 */
CmdUtils.makeSearchCommand({
    name: "dhl",
    icon: "http://www.dhl.de/favicon.ico",
    description: "Search dhl.de for a package number",
    url: "http://nolp.dhl.de/nextt-online-public/set_identcodes.do?lang=en&idc={QUERY}&rfn=&extendedSearch=true",
});
 
/** ************************************************************************************************
 * aarne-thompson
 * Returns the type of an aarne-thompson number
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["aarne-thompson", "atnum"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-3875d7/shapecolor-no/shadow-0/border-no/symbolstyle-color/symbolshadowstyle-white/gradient-no/book.png",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Returns the type of an aarne-thompson number. Useful for folklorists (see <a href='http://en.wikipedia.org/wiki/Aarne%E2%80%93Thompson_classification_system'>Wikipedia entry</a>)",
  __db: [{"type":"Wild Animals","min":1,"max":99}, {"type":"The Clever Fox (Other Animal)","min":1,"max":69}, {"type":"Other Wild Animals","min":70,"max":99}, {"type":"Wild Animals and Domestic Animals","min":100,"max":149}, {"type":"Wild Animals and Humans","min":150,"max":199}, {"type":"Domestic Animals","min":200,"max":219}, {"type":"Other Animals and Objects","min":220,"max":299}, {"type":"Supernatural Adversaries","min":300,"max":399}, {"type":"Supernatural or Enchanted Wife (Husband) or Other Relative","min":400,"max":459}, {"type":"Wife","min":400,"max":424}, {"type":"Husband","min":425,"max":449}, {"type":"Brother or Sister","min":450,"max":459}, {"type":"Supernatural Tasks","min":460,"max":499}, {"type":"Supernatural Helpers","min":500,"max":559}, {"type":"Magic Objects","min":560,"max":649}, {"type":"Supernatural Power or Knowledge","min":650,"max":699}, {"type":"Other Tales of the Supernatural","min":700,"max":749}, {"type":"God Rewards and Punishes","min":750,"max":779}, {"type":"The Truth Comes to Light","min":780,"max":799}, {"type":"Heaven","min":800,"max":809}, {"type":"The Devil","min":810,"max":826}, {"type":"Other Religious Tales","min":827,"max":849}, {"type":"The Man Marries the Princess","min":850,"max":869}, {"type":"The Woman Marries the Prince","min":870,"max":879}, {"type":"Proofs of FidelitY and Innocence","min":880,"max":899}, {"type":"The Obstinate Wife Learns to Obey","min":900,"max":909}, {"type":"Good Precepts","min":910,"max":919}, {"type":"Clever Acts and Words","min":920,"max":929}, {"type":"Tales of Fate","min":930,"max":949}, {"type":"Robbers and Murderers","min":950,"max":969}, {"type":"Other Realistic Tales","min":970,"max":999}, {"type":"Labor Contract","min":1000,"max":1029}, {"type":"Partnership between Man and Ogre","min":1030,"max":1059}, {"type":"Contest between Man and Ogre","min":1060,"max":1114}, {"type":"Man Kills (Injures) Ogre","min":1115,"max":1144}, {"type":"Ogre Frightened by Man","min":1145,"max":1154}, {"type":"Man Outwits the Devil","min":1155,"max":1169}, {"type":"Souls Saved from the Devil","min":1170,"max":1199}, {"type":"Stories about a Fool","min":1200,"max":1349}, {"type":"Stories about Married Couples","min":1350,"max":1439}, {"type":"The Foolish Wife and Her Husband","min":1380,"max":1404}, {"type":"The Foolish Husband and His Wife","min":1405,"max":1429}, {"type":"The Foolish Couple","min":1430,"max":1439}, {"type":"Stories about a Woman","min":1440,"max":1524}, {"type":"Looking for a Wife","min":1450,"max":1474}, {"type":"Jokes about Old Maids","min":1475,"max":1499}, {"type":"Other Stories about Women","min":1500,"max":1524}, {"type":"Stories about a Man","min":1525,"max":1724}, {"type":"The Clever Man","min":1525,"max":1639}, {"type":"Lucky Accidents","min":1640,"max":1674}, {"type":"The Stupid Man","min":1675,"max":1724}, {"type":"Jokes about Clergymen and Religious Figures","min":1725,"max":1849}, {"type":"The Clergyman is Tricked","min":1725,"max":1774}, {"type":"Clergyman and Sexton","min":1775,"max":1799}, {"type":"Other Jokes about Religious Figures","min":1800,"max":1849}, {"type":"Anecdotes about Other Groups of People","min":1850,"max":1874}, {"type":"Tall Tales","min":1875,"max":1999}, {"type":"Cumulative Tales","min":2000,"max":2100}, {"type":"Chains Based on Numbers, Objects, Animals, or Names","min":2000,"max":2020}, {"type":"Chains Involving Death","min":2021,"max":2024}, {"type":"Chains Involving Eating","min":2025,"max":2028}, {"type":"Chains Involving Other Events","min":2029,"max":2075}, {"type":"Catch Tales","min":2200,"max":2299}, {"type":"Other Formula Tales","min":2300,"max":2399}],
  preview: function(pblock, input) {
    var input = jQuery.trim(input.object.text).replace(/\D+/, ''),
		results = [],
		types = this.__db
					.filter(function(d){
						return input >= d.min && input <=d.max
					})
					.map(function(d){
						results.push(d.type)
					})
					
		pblock.innerHTML = results.length == 0 ? "No match found" 
								: "<ul><li>" + results.join("</li><li>") + "</li></ul>"
  }
})

/** ************************************************************************************************
 * Amazon.de
 * Search amazon.de
 * *********************************************************************************************** */
// Clone of amazon.com for amazon.de
var AmazonDE = "http://www.amazon.de/";
var AmazDeLink = "Amazon.de".link(AmazonDE);
var noun_type_amazon_de_index = CmdUtils.NounType("index", {
  All: 0,
  Apparel: 15683091,
  Automotive: 15690151,
  Baby: 3760931,
  Beauty: 11055981,
  Books: 1000,
  Classical: 301668,
  DigitalMusic: 301668,
  DVD: 130,
  Electronics: 493964,
  GourmetFood: 3580501,
  Grocery: 10746371,
  HealthPersonalCare: 3760931,
  HomeGarden: 1063498,
  Industrial: 228013,
  Jewelry: 3880591,
  Kitchen: 1063498,
  Magazines: 44264011,
  Merchants: 493964,
  Miscellaneous: 349028011,
  Music: 301668,
  MusicalInstruments: 12923151,
  OfficeProducts: 1084128,
  OutdoorLiving: 1063498,
  PCHardware: 493964,
  PetSupplies: 13900811,
  Photo: 13900861,
  Shoes: 3375301,
  Software: 409488,
  SportingGoods: 1036682,
  Tools: 228013,
  Toys: 130,
  VHS: 404272,
  Video: 130,
  VideoGames: 44263011,
  Watches: 378516011,
  Wireless: 408234,
  WirelessAccessories: 408234,
}, "All");
var AWS_ENDPOINT = "ecs.amazonaws.de";
var AWS_REQUESTURI = "/onca/xml";
// This key is linked to Blair McBride's AWS account - and only free services are enabled.
// Please don't re-use it or abuse it. Instead, get your own AWS key - its free.
var AWS_KEY = "08WX39XKK81ZEWHZ52R2";
var AWS_SECRET = "w0WOQNS+GZcJWjrAmlK885tFi6rcrr9WOgeu6eK3";

function amazon_doEscape(aString) (
  encodeURIComponent(aString)
  .replace(/[!\'()*]+/g, function escape0(s) escape(s, 0)));
function amazon_signRequest(aParams) {
  var key;
  var params = {};
  for (key in aParams)
    params[key] = aParams[key];
  params.Timestamp = new Date().toISOString().slice(0, -5) + "Z";
  params.AWSAccessKeyId = AWS_KEY;
  var paramArray = [];
  for (key in params)
    paramArray.push(amazon_doEscape(key) + "=" + amazon_doEscape(params[key]));
  paramArray.sort();
  var paramString = paramArray.join("&");
  var sigBaseString =
    "GET\n" + AWS_ENDPOINT + "\n" + AWS_REQUESTURI + "\n" + paramString;
  var signature = Utils.signHmac("SHA256", AWS_SECRET, sigBaseString);
  return ("http://" + AWS_ENDPOINT + AWS_REQUESTURI + "?" +
          paramString + "&Signature=" + amazon_doEscape(signature));
}

CmdUtils.CreateCommand({
  names: ["Amazon.de"],
  icon: "chrome://ubiquity/skin/icons/amazon.ico",
  author: {name:"Modified for .de by g2010a"},
  description: "Searches " + AmazDeLink + " for items matching your words.",
  help: '<dl><dt>Available Indices</dt><dd><b>'+
    noun_type_amazon_de_index._list.reduce(function (dd, s) {
      return dd + s.text + ' '
    }, '')
  +'</b></dd></dl>',
  arguments: [
    {role: "object", nountype: noun_arb_text, label: "search term"},
    {role: "format", nountype: noun_type_amazon_de_index}],
  execute: function amazon_execute({object: {text}, format: {data}}) {
    Utils.openUrlInBrowser( 
      AmazonDE + "s/ref=nb_ss_noss" +
      Utils.paramsToString({"__mk_de_DE": "%C3%85M%C3%85Z%C3%95%C3%91", url: "search-alias%3D" + data, "field-keywords": text}))
  },
  preview: function(previewBlock,
                    {object: {text, summary}, format: {text: searchIndex}}) {
    if (!text) return void this.previewDefault(previewBlock);

    var me = this;
    previewBlock.innerHTML =
      _("Searching ${AmazDeLink} for items matching <b>${query}</b>.",
        {AmazDeLink: AmazDeLink, query: summary});
    CmdUtils.previewAjax(previewBlock, {
      url: amazon_signRequest({
        Service: "AWSECommerceService",
        Version: "2008-08-19",
        Operation: "ItemSearch",
        Condition: "All",
        Merchant: "All",
        ResponseGroup: "ItemAttributes,Images",
        AssociateTag: "matyr-22", // required
        SearchIndex: searchIndex,
        Keywords: text,
      }),
      dataType: "xml",
      error: function amazon_error(xhr, info) {
        previewBlock.innerHTML = (
          "<p class='error'>" +
          _("Error searching ${AmazDeLink}.", {AmazDeLink: AmazDeLink}) +
          "<br/><em>" + xhr.status + " " + xhr.statusText +
          " (" + info + ")</em></p>");
        // TODO: think of a better way to localize API errors, if possible.
      },
      success: function amazon_success(responseData) {
        responseData = jQuery(responseData);
        var errorMessage = responseData.find("Error > Message").text();
        if (errorMessage) {
          previewBlock.innerHTML =
            "<p class='error'>" + _(errorMessage) + "</p>";
          return;
        }
        const MAX_RESULTS = 35; // 1 ~ 9, a ~ z
        function iter(itemIndex) {
          var itemDetails = jQuery(this),
          itemAttrs = itemDetails.find("ItemAttributes"),
          listPrice = itemAttrs.find("ListPrice"),
          smallImage = itemDetails.find("SmallImage:first");
          return {
            title: itemAttrs.find("Title").text(),
            url: itemDetails.find("DetailPageURL").text(),
            key: (itemIndex + 1).toString(MAX_RESULTS + 1),
            author: (itemAttrs.find("Author")
                     .map(function() this.textContent).get().join(', ')),
            features: (itemAttrs.find("Feature")
                       .map(function() this.textContent).get()),
            label: itemAttrs.find("Label").text(),
            price: listPrice.length && {
              amount: listPrice.find("FormattedPrice").text(),
              currency: listPrice.find("CurrencyCode").text(),
            },
            image: smallImage.length && {
              src: smallImage.find("URL").text(),
              height: smallImage.find("Height").text(),
              width: smallImage.find("Width").text(),
            }
          };
        }
        previewBlock.innerHTML = CmdUtils.renderTemplate(
          feed.dom.getElementById("amazon-search").innerHTML,
          { items: (responseData.find("Items > Item").slice(0, MAX_RESULTS)
                    .map(iter).get()),
            matchMessage: _(
              ("Found <b>${numitems}</b> item{if numitems > 1}s{/if} on " +
               "<a href='http://www.amazon.de/'>Amazon.de</a> " +
               "matching <b>${query}</b>."),
              { numitems: responseData.find("Items > TotalResults").text(),
                query: text }) });
      }
    });
  }
});

/** *********************************************************
 * Beautifier/formatter for javascript
 * **********************************************************/

CmdUtils.CreateCommand({
    names: ["beautify_js", "format_js"],
    arguments: [{role:"object", label:"input", nountype: noun_arb_text}],
    icon: "http://jsbeautifier.org/favicon.ico",
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:'g2010a'},
    description: "Beautifies (formats) JavaScript code using the engine behind jsbeautifier.org",
    __js_beautify: function (js_source_text, options) {
        "use strict";
        var beautifier = new this.__Beautifier(js_source_text, options)
        return beautifier.beautify()
    },
    __Beautifier: function(e,t){"use strict";function O(e,t){return{mode:t,last_text:e?e.last_text:"",last_word:e?e.last_word:"",var_line:false,var_line_tainted:false,var_line_reindented:false,in_html_comment:false,multiline_array:false,if_block:false,do_block:false,do_while:false,in_case_statement:false,in_case:false,case_body:false,indentation_level:e?e.indentation_level+(e.var_line&&e.var_line_reindented?1:0):0,ternary_depth:0}}function M(e){e=e===undefined?false:e;while(r.length&&(r[r.length-1]===" "||r[r.length-1]===a||r[r.length-1]===A||e&&(r[r.length-1]==="\n"||r[r.length-1]==="\r"))){r.pop()}}function _(e){return e.replace(/^\s\s*|\s\s*$/,"")}function D(e){e=e.replace(/\x0d/g,"");var t=[],n=e.indexOf("\n");while(n!==-1){t.push(e.substring(0,n));e=e.substring(n+1);n=e.indexOf("\n")}if(e.length){t.push(e)}return t}function P(){return r.length&&r[r.length-1]==="\n"}function H(){return P()&&r.length-1>0&&r[r.length-2]==="\n"}function B(e,t){var n=e.length-1;if(n<0){n+=e.length}if(n>e.length-1){n=e.length-1}for(n++;n-->0;){if(n in e&&e[n]===t){return n}}return-1}function j(e){e=e===undefined?false:e;if(L.wrap_line_length&&!e){var t="";var n=0;var s=B(r,"\n")+1;if(s<r.length){t=r.slice(s).join("");n=t.length+i.length+(S?1:0);if(n>=L.wrap_line_length){e=true}}}if((L.preserve_newlines&&w||e)&&!P()){F(false,true);E=true;w=false}}function F(e,t){E=false;S=false;if(!t){if(f.last_text!==";"){while(f.mode===k.Statement&&!f.if_block){$()}}}if(f.mode===k.ArrayLiteral){f.multiline_array=true}if(!r.length){return}if(e||!P()){r.push("\n")}}function I(){if(P()){if(L.keep_array_indentation&&X(f.mode)&&N.length){r.push(N.join("")+"")}else{if(A){r.push(A)}q(f.indentation_level);q(f.var_line&&f.var_line_reindented);q(E)}}}function q(e){if(e===undefined){e=1}else if(typeof e!=="number"){e=e?1:0}if(f.last_text!==""){for(var t=0;t<e;t+=1){r.push(a)}}}function R(){if(S&&r.length){var e=r[r.length-1];if(!P()&&e!==" "&&e!==a){r.push(" ")}}}function U(e){e=e||i;I();E=false;R();S=false;r.push(e)}function z(){f.indentation_level+=1}function W(e){if(f){c.push(f);l=f}else{l=O(null,e)}f=O(l,e)}function X(e){return e===k.ArrayLiteral}function V(e){return G(e,[k.Expression,k.ForInitializer,k.Conditional])}function $(){if(c.length>0){l=f;f=c.pop()}}function J(){if(f.last_text==="do"||f.last_text==="else"&&i!=="if"||o==="TK_END_EXPR"&&(l.mode===k.ForInitializer||l.mode===k.Conditional)){j();W(k.Statement);z();E=false;return true}return false}function K(e,t){for(var n=0;n<e.length;n++){var r=_(e[n]);if(r.charAt(0)!==t){return false}}return true}function Q(e){return G(e,["case","return","do","if","throw","else"])}function G(e,t){for(var n=0;n<t.length;n+=1){if(t[n]===e){return true}}return false}function Y(e){var t=false,n="",r=0,i="",s=0,o;while(t||r<e.length){o=e.charAt(r);r++;if(t){t=false;if(o==="x"){i=e.substr(r,2);r+=2}else if(o==="u"){i=e.substr(r,4);r+=4}else{n+="\\"+o;continue}if(!i.match(/^[0123456789abcdefABCDEF]+$/)){return e}s=parseInt(i,16);if(s>=0&&s<32){if(o==="x"){n+="\\x"+i}else{n+="\\u"+i}continue}else if(s===34||s===39||s===92){n+="\\"+String.fromCharCode(s)}else if(o==="x"&&s>126&&s<=255){return e}else{n+=String.fromCharCode(s)}}else if(o==="\\"){t=true}else{n+=o}}return n}function Z(e){var t=v;var r=n.charAt(t);while(G(r,h)&&r!==e){t++;if(t>=x){return false}r=n.charAt(t)}return r===e}function et(){var e,t;T=0;if(v>=x){return["","TK_EOF"]}w=false;N=[];var i=n.charAt(v);v+=1;while(G(i,h)){if(i==="\n"){T+=1;N=[]}else if(T){if(i===a){N.push(a)}else if(i!=="\r"){N.push(" ")}}if(v>=x){return["","TK_EOF"]}i=n.charAt(v);v+=1}if(G(i,p)){if(v<x){while(G(n.charAt(v),p)){i+=n.charAt(v);v+=1;if(v===x){break}}}if(v!==x&&i.match(/^[0-9]+[Ee]$/)&&(n.charAt(v)==="-"||n.charAt(v)==="+")){var s=n.charAt(v);v+=1;var u=et();i+=s+u[0];return[i,"TK_WORD"]}if(i==="in"){return[i,"TK_OPERATOR"]}return[i,"TK_WORD"]}if(i==="("||i==="["){return[i,"TK_START_EXPR"]}if(i===")"||i==="]"){return[i,"TK_END_EXPR"]}if(i==="{"){return[i,"TK_START_BLOCK"]}if(i==="}"){return[i,"TK_END_BLOCK"]}if(i===";"){return[i,"TK_SEMICOLON"]}if(i==="/"){var c="";var m=true;if(n.charAt(v)==="*"){v+=1;if(v<x){while(v<x&&!(n.charAt(v)==="*"&&n.charAt(v+1)&&n.charAt(v+1)==="/")){i=n.charAt(v);c+=i;if(i==="\n"||i==="\r"){m=false}v+=1;if(v>=x){break}}}v+=2;if(m&&T===0){return["/*"+c+"*/","TK_INLINE_COMMENT"]}else{return["/*"+c+"*/","TK_BLOCK_COMMENT"]}}if(n.charAt(v)==="/"){c=i;while(n.charAt(v)!=="\r"&&n.charAt(v)!=="\n"){c+=n.charAt(v);v+=1;if(v>=x){break}}return[c,"TK_COMMENT"]}}if(i==="'"||i==='"'||(i==="/"||L.e4x&&i==="<"&&n.slice(v-1).match(/^<[a-zA-Z:0-9]+\s*([a-zA-Z:0-9]+="[^"]*"\s*)*\/?\s*>/))&&(o==="TK_WORD"&&Q(f.last_text)||o==="TK_END_EXPR"&&G(l.mode,[k.Conditional,k.ForInitializer])||G(o,["TK_COMMENT","TK_START_EXPR","TK_START_BLOCK","TK_END_BLOCK","TK_OPERATOR","TK_EQUALS","TK_EOF","TK_SEMICOLON","TK_COMMA"]))){var y=i,b=false,E=false;t=i;if(v<x){if(y==="/"){var S=false;while(b||S||n.charAt(v)!==y){t+=n.charAt(v);if(!b){b=n.charAt(v)==="\\";if(n.charAt(v)==="["){S=true}else if(n.charAt(v)==="]"){S=false}}else{b=false}v+=1;if(v>=x){return[t,"TK_STRING"]}}}else if(L.e4x&&y==="<"){var C=/<(\/?)([a-zA-Z:0-9]+)\s*([a-zA-Z:0-9]+="[^"]*"\s*)*(\/?)\s*>/g;var A=n.slice(v-1);var O=C.exec(A);if(O&&O.index===0){var M=O[2];var D=0;while(O){var P=!!O[1];var H=O[2];var B=!!O[O.length-1];if(H===M&&!B){if(P){--D}else{++D}}if(D<=0){break}O=C.exec(A)}var j=O?O.index+O[0].length:A.length;v+=j-1;return[A.slice(0,j),"TK_STRING"]}}else{while(b||n.charAt(v)!==y){t+=n.charAt(v);if(b){if(n.charAt(v)==="x"||n.charAt(v)==="u"){E=true}b=false}else{b=n.charAt(v)==="\\"}v+=1;if(v>=x){return[t,"TK_STRING"]}}}}v+=1;t+=y;if(E&&L.unescape_strings){t=Y(t)}if(y==="/"){while(v<x&&G(n.charAt(v),p)){t+=n.charAt(v);v+=1}}return[t,"TK_STRING"]}if(i==="#"){if(r.length===0&&n.charAt(v)==="!"){t=i;while(v<x&&i!=="\n"){i=n.charAt(v);t+=i;v+=1}return[_(t)+"\n","TK_UNKNOWN"]}var F="#";if(v<x&&G(n.charAt(v),g)){do{i=n.charAt(v);F+=i;v+=1}while(v<x&&i!=="#"&&i!=="=");if(i==="#"){}else if(n.charAt(v)==="["&&n.charAt(v+1)==="]"){F+="[]";v+=2}else if(n.charAt(v)==="{"&&n.charAt(v+1)==="}"){F+="{}";v+=2}return[F,"TK_WORD"]}}if(i==="<"&&n.substring(v-1,v+3)==="<!--"){v+=3;i="<!--";while(n.charAt(v)!=="\n"&&v<x){i+=n.charAt(v);v++}f.in_html_comment=true;return[i,"TK_COMMENT"]}if(i==="-"&&f.in_html_comment&&n.substring(v-1,v+2)==="-->"){f.in_html_comment=false;v+=2;return["-->","TK_COMMENT"]}if(i==="."){return[i,"TK_DOT"]}if(G(i,d)){while(v<x&&G(i+n.charAt(v),d)){i+=n.charAt(v);v+=1;if(v>=x){break}}if(i===","){return[i,"TK_COMMA"]}else if(i==="="){return[i,"TK_EQUALS"]}else{return[i,"TK_OPERATOR"]}}return[i,"TK_UNKNOWN"]}function tt(){if(J()){}if(i==="["){if(o==="TK_WORD"||f.last_text===")"){if(G(f.last_text,m)){S=true}W(k.Expression);U();if(L.space_in_paren){S=true}return}if(X(f.mode)){if(f.last_text==="["||f.last_text===","&&(u==="]"||u==="}")){if(!L.keep_array_indentation){F()}}}}else{if(f.last_text==="for"){W(k.ForInitializer)}else if(G(f.last_text,["if","while"])){W(k.Conditional)}else{W(k.Expression)}}if(f.last_text===";"||o==="TK_START_BLOCK"){F()}else if(o==="TK_END_EXPR"||o==="TK_START_EXPR"||o==="TK_END_BLOCK"||f.last_text==="."){if(w){F()}}else if(o!=="TK_WORD"&&o!=="TK_OPERATOR"){S=true}else if(f.last_word==="function"||f.last_word==="typeof"){if(L.jslint_happy){S=true}}else if(G(f.last_text,m)||f.last_text==="catch"){if(L.space_before_conditional){S=true}}if(i==="("){if(o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}}U();if(L.space_in_paren){S=true}if(i==="["){W(k.ArrayLiteral);z()}if(b){b=false;z()}}function nt(){while(f.mode===k.Statement){$()}if(i==="]"&&X(f.mode)&&f.multiline_array&&!L.keep_array_indentation){F()}$();if(L.space_in_paren){S=true}U();if(f.do_while&&l.mode===k.Conditional){l.mode=k.Expression;f.do_block=false;f.do_while=false}}function rt(){W(k.BlockStatement);var e=Z("}");var t=e&&f.last_word==="function"&&o==="TK_END_EXPR";if(L.brace_style==="expand"){if(o!=="TK_OPERATOR"&&(t||o==="TK_EQUALS"||Q(f.last_text)&&f.last_text!=="else")){S=true}else{F()}}else{if(o!=="TK_OPERATOR"&&o!=="TK_START_EXPR"){if(o==="TK_START_BLOCK"){F()}else{S=true}}else{if(X(l.mode)&&f.last_text===","){if(u==="}"){S=true}else{F()}}}}U();z()}function it(){while(f.mode===k.Statement){$()}$();var e=o==="TK_START_BLOCK";if(L.brace_style==="expand"){if(!e){F()}}else{if(!e){if(X(f.mode)&&L.keep_array_indentation){L.keep_array_indentation=false;F();L.keep_array_indentation=true}else{F()}}}U()}function st(){if(J()){}else if(w&&!V(f.mode)&&(o!=="TK_OPERATOR"||f.last_text==="--"||f.last_text==="++")&&o!=="TK_EQUALS"&&(L.preserve_newlines||f.last_text!=="var")){F()}if(f.do_block&&!f.do_while){if(i==="while"){S=true;U();S=true;f.do_while=true;return}else{F();f.do_block=false}}if(b&&Q(i)){b=false}if(f.if_block){if(i!=="else"){while(f.mode===k.Statement){$()}f.if_block=false}}if(i==="function"){if(f.var_line&&o!=="TK_EQUALS"){f.var_line_reindented=true}if((P()||f.last_text===";"||f.last_text==="}")&&f.last_text!=="{"&&!X(f.mode)){if(!P()){F(true)}if(!H()){F(true)}}if(o==="TK_WORD"){if(f.last_text==="get"||f.last_text==="set"||f.last_text==="new"||f.last_text==="return"){S=true}else{F()}}else if(o==="TK_OPERATOR"||f.last_text==="="){S=true}else if(V(f.mode)){}else{F()}U();f.last_word=i;return}if(i==="case"||i==="default"&&f.in_case_statement){F();if(f.case_body||L.jslint_happy){f.indentation_level--;f.case_body=false}U();f.in_case=true;f.in_case_statement=true;return}y="NONE";if(o==="TK_END_BLOCK"){if(!G(i,["else","catch","finally"])){y="NEWLINE"}else{if(L.brace_style==="expand"||L.brace_style==="end-expand"){y="NEWLINE"}else{y="SPACE";S=true}}}else if(o==="TK_SEMICOLON"&&f.mode===k.BlockStatement){y="NEWLINE"}else if(o==="TK_SEMICOLON"&&V(f.mode)){y="SPACE"}else if(o==="TK_STRING"){y="NEWLINE"}else if(o==="TK_WORD"){y="SPACE"}else if(o==="TK_START_BLOCK"){y="NEWLINE"}else if(o==="TK_END_EXPR"){S=true;y="NEWLINE"}if(G(i,m)&&f.last_text!==")"){if(f.last_text==="else"){y="SPACE"}else{y="NEWLINE"}}if(o==="TK_COMMA"||o==="TK_START_EXPR"||o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}if(G(i,["else","catch","finally"])){if(o!=="TK_END_BLOCK"||L.brace_style==="expand"||L.brace_style==="end-expand"){F()}else{M(true);if(r[r.length-1]!=="}"){F()}S=true}}else if(y==="NEWLINE"){if(Q(f.last_text)){S=true}else if(o!=="TK_END_EXPR"){if((o!=="TK_START_EXPR"||i!=="var")&&f.last_text!==":"){if(i==="if"&&f.last_word==="else"&&f.last_text!=="{"){S=true}else{f.var_line=false;f.var_line_reindented=false;F()}}}else if(G(i,m)&&f.last_text!==")"){f.var_line=false;f.var_line_reindented=false;F()}}else if(X(f.mode)&&f.last_text===","&&u==="}"){F()}else if(y==="SPACE"){S=true}U();f.last_word=i;if(i==="var"){f.var_line=true;f.var_line_reindented=false;f.var_line_tainted=false}if(i==="do"){f.do_block=true}if(i==="if"){f.if_block=true}}function ot(){while(f.mode===k.Statement&&!f.if_block){$()}U();f.var_line=false;f.var_line_reindented=false;if(f.mode===k.ObjectLiteral){f.mode=k.BlockStatement}}function ut(){if(J()){S=true}else if(o==="TK_WORD"){S=true}else if(o==="TK_COMMA"||o==="TK_START_EXPR"||o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}else{F()}U()}function at(){if(f.var_line){f.var_line_tainted=true}S=true;U();S=true}function ft(){if(f.var_line){if(V(f.mode)||o==="TK_END_BLOCK"){f.var_line_tainted=false}if(f.var_line){f.var_line_reindented=true}U();if(f.var_line_tainted){f.var_line_tainted=false;F()}else{S=true}return}if(o==="TK_END_BLOCK"&&f.mode!==k.Expression){U();if(f.mode===k.ObjectLiteral&&f.last_text==="}"){F()}else{S=true}}else{if(f.mode===k.ObjectLiteral){U();F()}else{U();S=true}}}function lt(){var e=true;var t=true;if(Q(f.last_text)){S=true;U();return}if(i==="*"&&o==="TK_DOT"&&!u.match(/^\d+$/)){U();return}if(i===":"&&f.in_case){f.case_body=true;z();U();F();f.in_case=false;return}if(i==="::"){U();return}if(w&&(i==="--"||i==="++")){F()}if(G(i,["--","++","!"])||G(i,["-","+"])&&(G(o,["TK_START_BLOCK","TK_START_EXPR","TK_EQUALS","TK_OPERATOR"])||G(f.last_text,m)||f.last_text===",")){e=false;t=false;if(f.last_text===";"&&V(f.mode)){e=true}if(o==="TK_WORD"&&G(f.last_text,m)){e=true}if((f.mode===k.BlockStatement||f.mode===k.Statement)&&(f.last_text==="{"||f.last_text===";")){F()}}else if(i===":"){if(f.ternary_depth===0){if(f.mode===k.BlockStatement){f.mode=k.ObjectLiteral}e=false}else{f.ternary_depth-=1}}else if(i==="?"){f.ternary_depth+=1}S=S||e;U();S=t}function ct(){var e=D(i);var t;if(K(e.slice(1),"*")){F(false,true);U(e[0]);for(t=1;t<e.length;t++){F(false,true);U(" "+_(e[t]))}}else{if(e.length>1){F(false,true)}else{if(o==="TK_END_BLOCK"){F(false,true)}else{S=true}}U(e[0]);r.push("\n");for(t=1;t<e.length;t++){r.push(e[t]);r.push("\n")}}if(!Z("\n")){F(false,true)}}function ht(){S=true;U();S=true}function pt(){if(w){F(false,true)}else{M(true)}S=true;U();F(false,true)}function dt(){if(Q(f.last_text)){S=true}else{j(f.last_text===")"&&L.break_chained_methods)}if(P()){b=true}U()}function vt(){U();if(i[i.length-1]==="\n"){F()}}var n,r,i,s,o,u,a;var f,l,c;var h,p,d,v,m,g;var y,b;var w;var E,S;var x,T,N;var C,k,L;var A="";h="\n\r	 ".split("");p="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_$".split("");g="0123456789".split("");d="+ - * / % & ++ -- = += -= *= /= %= == === != !== > < >= <= >> << >>> >>>= >>= <<= && &= | || ! !! , : ? ^ ^= |= ::";d+=" <%= <% %> <?= <? ?>";d=d.split(" ");m="continue,try,throw,return,var,if,switch,case,default,for,while,break,function".split(",");k={BlockStatement:"BlockStatement",Statement:"Statement",ObjectLiteral:"ObjectLiteral",ArrayLiteral:"ArrayLiteral",ForInitializer:"ForInitializer",Conditional:"Conditional",Expression:"Expression"};C={TK_START_EXPR:tt,TK_END_EXPR:nt,TK_START_BLOCK:rt,TK_END_BLOCK:it,TK_WORD:st,TK_SEMICOLON:ot,TK_STRING:ut,TK_EQUALS:at,TK_OPERATOR:lt,TK_COMMA:ft,TK_BLOCK_COMMENT:ct,TK_INLINE_COMMENT:ht,TK_COMMENT:pt,TK_DOT:dt,TK_UNKNOWN:vt};t=t?t:{};L={};if(t.space_after_anon_function!==undefined&&t.jslint_happy===undefined){t.jslint_happy=t.space_after_anon_function}if(t.braces_on_own_line!==undefined){L.brace_style=t.braces_on_own_line?"expand":"collapse"}L.brace_style=t.brace_style?t.brace_style:L.brace_style?L.brace_style:"collapse";if(L.brace_style==="expand-strict"){L.brace_style="expand"}L.indent_size=t.indent_size?parseInt(t.indent_size,10):4;L.indent_char=t.indent_char?t.indent_char:" ";L.preserve_newlines=t.preserve_newlines===undefined?true:t.preserve_newlines;L.break_chained_methods=t.break_chained_methods===undefined?false:t.break_chained_methods;L.max_preserve_newlines=t.max_preserve_newlines===undefined?0:parseInt(t.max_preserve_newlines,10);L.space_in_paren=t.space_in_paren===undefined?false:t.space_in_paren;L.jslint_happy=t.jslint_happy===undefined?false:t.jslint_happy;L.keep_array_indentation=t.keep_array_indentation===undefined?false:t.keep_array_indentation;L.space_before_conditional=t.space_before_conditional===undefined?true:t.space_before_conditional;L.unescape_strings=t.unescape_strings===undefined?false:t.unescape_strings;L.wrap_line_length=t.wrap_line_length===undefined?0:parseInt(t.wrap_line_length,10);L.e4x=t.e4x===undefined?false:t.e4x;a="";while(L.indent_size>0){a+=L.indent_char;L.indent_size-=1}while(e&&(e.charAt(0)===" "||e.charAt(0)==="	")){A+=e.charAt(0);e=e.substring(1)}n=e;x=e.length;o="TK_START_BLOCK";u="";r=[];E=false;S=false;N=[];c=[];W(k.BlockStatement);v=0;this.beautify=function(){var e,t,n,a;while(true){e=et();i=e[0];s=e[1];if(s==="TK_EOF"){break}n=L.keep_array_indentation&&X(f.mode);if(n){for(t=0;t<T;t+=1){F(true)}}else{w=T>0;if(L.max_preserve_newlines&&T>L.max_preserve_newlines){T=L.max_preserve_newlines}if(L.preserve_newlines){if(T>1){F();for(t=1;t<T;t+=1){F(true)}}}}C[s]();if(s!=="TK_INLINE_COMMENT"&&s!=="TK_COMMENT"&&s!=="TK_UNKNOWN"){u=f.last_text;o=s;f.last_text=i}}a=A+r.join("").replace(/[\r\n ]+$/,"");return a}},
    preview: function(pblock, args) {
        pblock.innerHTML = "<pre style='font-size:0.7rem'>" + this.__js_beautify(args.object.text) + "</pre>"
    },
    execute: function(args) {
        CmdUtils.setSelection("<pre>" + this.__js_beautify(args.object.text) + "</pre>")
    }
})

/** ************************************************************************************************
 * Big Picture
 * Previews Boston.com's The Big Picture
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ['bigpicture'],
    icon: 'http://www.boston.com/favicon.ico',
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:'g2010a'},
    description: 'Previews Boston.com\'s The Big Picture (from RSS Feed)',
    preview: function(pblock, input){
        var xmlurl = 'http://feeds.boston.com/boston/bigpicture/index'
        CmdUtils.previewGet(pblock, xmlurl, null, 
            function(data) {
                // data is an xml document
                var items = []
                jQuery(data).find('item').map(function(i,d) {
                    var desc = jQuery("<div>").html( jQuery(d).find('description').text() ),
                        imgobj = jQuery( jQuery('.bpImage', desc)[0] )
                        imgobjw = imgobj.width()
                        imgobjh = imgobj.height()
                    items.push({
                        title: jQuery(d).find('title').text(),
                        link: jQuery(d).find('link').text(),
                        description: desc.html(),
                        pubDate: new Date(jQuery(d).find('pubDate').text()).toString('yyyy-MM-dd'),
                        permalink: jQuery(d).find('guid').text(),
                        image: imgobj.width(450).height( imgobjh * 450 / imgobjw )[0].outerHTML
                    })
                })
                
                var html = ""
                pblock.innerHTML = CmdUtils.renderTemplate(
                    feed.dom.getElementById("big-picture").innerHTML,
                    { items: items }
                )
            }
        )
    }
})

/** ************************************************************************************************
 * calcjs
 * Interface to Math.js
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["calcjs", "calculate using math.js"],
    arguments: [{role:"object", label:"expression", nountype: noun_arb_text}],
    description: '\
        Calculates using <a href="http://mathjs.org">Math.js</a>\
        which has all the features of a scientific calculator,\
        and can convert between units.',
    help: ("Try <code>22/7, 25% of 700, sin(sqrt(ln(pi))), (1+i)^3, " +
        "15 mod 9, 3!</code>. Redirects to Google on hitting 'enter', in case more complex operations are executed (e.g. currency conversion)"),
    icon: "chrome://ubiquity/skin/icons/calculator.png",
    author: {name: "g2010a", email: "ubiquity@the.oib.com"},
    license: "Public domain",
    _url: function (q) { return "http://api.mathjs.org/v1/?expr=" + encodeURIComponent(q) },
    preview: function (pblock, args) {
        if (!args.object.text) {
          this.previewDefault(pblock)
          return
        }
        var self = this;
        CmdUtils.previewGet(pblock,
            self._url(args.object.text),
            null,
            function(data){
                pblock.innerHTML = (
                    '<div class="calculate">' +
                        '<b style="font-size:larger">' + data + '</b>' +
                        (typeof data === "string"
                         ? '<p><a href="http://www.googleguide.com/help/calculator.html">Quick Reference</a></p>'
                         : "") +
                    '</div>'
                )
            }
        )
    },
    execute: function (args) {
        var input = $.trim(args.object.text)
        Utils.openUrlInBrowser("https://www.google.de/search?q="+input);
    }
})

/** ************************************************************************************************
 * duckduckgo
 * DuckDuckGo with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["duckduckgo", "duck"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.duckduckgo.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches with <a href='https://duckduckgo.com/'>DuckDuckGo</a> and loads results into the preview pane",

  preview: function(pblock, args) {
    var input = $.trim(args.object.text)
    $.getJSON(
      'http://api.duckduckgo.com/?format=json&t=firefox_ubiquity_extensions&q=' + input,
      function(data){
        if (data.Image) data.Image = "<img src='"+data.Image+"'/>"
        if (data.AbstractURL) data.Abstract = data.Abstract + "<br/><a href='"+data.AbstractURL+"'>"+data.AbstractSource+"</a>"
        if (data.DefinitionURL) data.Definition = data.Definition + "<br/><a href='"+data.DefinitionURL+"'>"+data.DefinitionSource+"</a>"
        pblock.innerHTML = CmdUtils.renderTemplate(
            feed.dom.getElementById("duckduckgo").innerHTML,
            data
        )
      }
    )
  },
  execute: function(args) {
    var input = $.trim(args.object.text)
    Utils.openUrlInBrowser("https://duckduckgo.com/?q="+input);
  }
})


/** ************************************************************************************************
 * Graphs pie, bar, and line charts.
 * Updated to the new parser by Ammad http://github.com/ammad
 * Extended to use different decimal separators by g2010a
 * *********************************************************************************************** */
var decsep = ".";
var colors = "&chco=94B6D2,D6AA20,759E00,D8773A,007777,B53A3A,713871,4A6E21,979000",
    //"&chco=7979B2,C6C6FF,E0E0FF,B2A567,FFF5C6";
    noun_type_chart = new CmdUtils.NounType( "chart",
      ["pie", "bar", "line", "tline"], "pie"
    ),
    noun_type_width_height = new CmdUtils.NounType( "width[xheight]",
      /^\d+(x\d+)?$/, "400x200"
    ),
	noun_type_decimal_separator = new CmdUtils.NounType( "separator",
      [".", ","], "."
    );
 
function to_num(text){
  if(decsep == ",") text = text.replace(".","").replace(",",".");
  return +text.replace(/[^\d\.]/g,"")
}

/**
 * retrieves selected table from DOM
 */
function getTable(selection){
  var table = {
    firstrow: selection.getRangeAt(0).startContainer,
    lastrow: selection.getRangeAt(selection.rangeCount-1).endContainer
  };
  // for single (non-ctrl) selections
  if (selection.rangeCount == 1) {
    table = {
      firstcell: jQuery(table.firstrow).closest("td,th")[0],
      lastcell: jQuery(table.lastrow).closest("td,th")[0],
      firstrow: jQuery(table.firstrow).closest("tr")[0],
      lastrow: jQuery(table.lastrow).closest("tr")[0]
    }
  };
  if (!table.lastrow) return;
  table.rows = table.lastrow.rowIndex - table.firstrow.rowIndex + 1;
  if (selection.rangeCount > 1) {
    table.columns = selection.rangeCount/table.rows;
    var text = selection.getRangeAt(0).toString();
    jQuery(table.firstrow.children).each(
      function(){
        table.firstcell = this;
        return !!this.textContent.search(text)
      });
    text = selection.getRangeAt(selection.rangeCount-1).toString();
    table.lastcell = table.lastrow.children[table.columns + table.firstcell.cellIndex - 1];
    if (table.lastcell.textContent == text) return table;
    jQuery(table.lastrow.children).each(
      function(){
        table.lastcell = this;
        return !!this.textContent.search(text)
      });
  }
  return table;
}

/**
 * Returns an array of the actual text in the cells 
 */
function tableToArray(table){
  if ( table.firstrow ) var info = table;
  var table = $( table.firstrow || table ).closest("table");
  if ( table.length == 0 ) return;
  return table.find("tr").map(
    function(i){
      if ( info && ( i < info.firstrow.rowIndex ||
                     i > info.lastrow.rowIndex )) return null;
      return $(this.children).map(
        function(j){
          if ( info && ( j < info.firstcell.cellIndex ||
                     j > info.lastcell.cellIndex )) return null;
          return $(this).text()
        })
    })
}
 
/**
 * Returns an object with labels and other relevant data; transforms cells into numbers.
 */
function graphObj(tableData){
  var rows = tableData.length;
  var columns = tableData[0].length;
 
  var data = {
    labels: new Array(rows),
    values: new Array(rows),
    min: Number.MAX_VALUE,
    max: Number.MIN_VALUE,
    string: tableData
  }
  
  // copy the first column into a array of labels, rest into 2 dimensional array of values
  for(i=0; i<rows; i++) {
	// create generic labels if only 1 column is selected
	if (columns == 1) {
		data.labels[i] = i;
		data.values[i] = new Array(1)
		data.values[i][0] = to_num(tableData[i][0]);
	    if (data.values[i][0]<data.min) data.min = data.values[i][0];
		if (data.values[i][0]>data.max) data.max = data.values[i][0];

	}
	else {
		data.labels[i] = tableData[i][0];
		data.values[i] = new Array(columns-1);
		for (var j=1;j<columns; j++){
		  data.values[i][j-1] = to_num(tableData[i][j]);
		  if (data.values[i][j-1]<data.min) data.min = data.values[i][j-1];
		  if (data.values[i][j-1]>data.max) data.max = data.values[i][j-1];
		}
	}
  }
 
  return data;
}
 
 
function transposeArray(inArray){
  var rowsIn = inArray.length;
  var columnsIn = inArray[0].length;
  var outArray = new Array(columnsIn);
 
  for(i=0; i<columnsIn; i++) {
    outArray[i] = new Array(rowsIn);
    for (var j=0;j<rowsIn; j++){
      outArray[i][j] = inArray[j][i];
    }
  }
  return outArray;
}
 
function formatValues(valArray) {
  var rows = valArray.length;
  var columns = valArray[0].length;
  var values = "";
 
  //  traverse table by columns to build values: delimit columns with commas, rows with pipes
  for (var i=0; i<columns; i++){
    for (var j=0;j<rows; j++){
      values += (valArray[j][i]);
      if (j<rows-1) values += ",";
    }
    if (i<columns-1) values += "|";
  }
  return values;
}
 
function formatLabels(labArray){
  var rows = labArray.length;
  var labels = "";
  for(var i=0; i<rows; i++){
    // add element to label string
    labels += labArray[i];
    // if not last row, add a pipe delimiter
    if (i<rows-1) labels += "|";
  }
  return labels;
}
  
function scaleTo100(valArray, maxVal){
  var rows = valArray.length;
  var columns = valArray[0].length;
  var rescale = maxVal / 100;
 
  //  traverse table by columns to build values: delimit columns with commas, rows with pipes
  for (var i=0; i<columns; i++){
    for (var j=0;j<rows; j++){
      valArray[j][i] = valArray[j][i] / rescale;
    }
  }
  return valArray;
}
 
function  dataToChart( args ) {
  var data, table = getTable( CmdUtils.getWindow().getSelection() );
  decsep = args.instrument.text;
  if (table)
    data = graphObj(tableToArray(table));
 
  if( !data ) return null;
  
  data.labelquery = formatLabels(data.labels);
  // pie charts only handle values up to 100, so scale them!
  if( args.format.text == "pie" )
    data.values = scaleTo100(data.values, data.max);
  else if ( args.format.text == "tline" ) {
    data.values = transposeArray(data.values);
    args.format.text = "line";
  }
  data.valuequery = formatValues(data.values);
 
  [ graphWidth, graphHeight ] = args.modifier.text.split("x");
 
  var graphWidth = graphWidth || 400,
      graphHeight = graphHeight || graphWidth /2;
 
  if (graphHeight > 387) graphHeight = 387;
  if (graphWidth > 774) graphWidth = 774;
 
  if ( args.format.text == "bar" ) {
    var ymin = (data.min * 0.75);
    if (ymin < 10) ymin = 0;
    if (data.max > 80 && data.max < 100) data.max = 100;
  }else if ( args.format.text == "line" )
    var ymin = (data.min - (data.max - data.min) * .1);
  
  var urlstart = ({ 
        pie:"pc",
        bar:"bvg&chxt=y&chbh=a",
        line:"lc&chxt=y"
      })[args.format.text],
 
      urlend = ({ 
        pie:"",
        bar:colors,
        line:colors
      })[args.format.text];
 
  img = "<img src='http://chart.earth2marsh.apigee.com/chart?cht="+urlstart+"&chs="+graphWidth+"x"+graphHeight+"&chl="+data.labelquery+"&chd=t:"+data.valuequery+"&chds="+ymin+","+data.max+"&chtxt=x,y&chxr=0,"+ymin+","+data.max+urlend+"'/>";
  return img;
 
}
 
CmdUtils.CreateCommand({
  names: ["chart"],
  arguments: [ {role: "object", nountype: noun_arb_text, label: "Column of labels and column(s) of values"},
               {role: "format", nountype: noun_type_chart},
               {role: "modifier", nountype: noun_type_width_height},
			   {role: "instrument", nountype: noun_type_decimal_separator}
             ],
  icon: "chrome://ubiquity/skin/icons/calculator.png",
  description: "Turn numeric data into charts using the Google Charts API.",
  help: "Select a table. Chart types supported: pie, bar, line and tline(transposed line graph). Decimal separators: \".\" and \",\"<p>Example: <em>Chart in Line of 500x500 with ,</em></p>",
  homepage: "http://earth2marsh.com/ubiquity/",
  author: {name: "Marsh Gardiner", email: "ubiquity@earth2marsh.com"},
  license: "MPL",
  preview: function(pblock, args) {
    if (!args.object.html) {
      this.previewDefault(pblock);
      return;
    }
    var img = dataToChart( args );
 
 
    if( !img )
      jQuery(pblock).text( "Requires numbers to graph." );
    else
      jQuery(pblock).empty().append( img ).height( "15px" );
  },
 
  execute: function( args ) {
    var img = dataToChart( args );
    if( img ) CmdUtils.setSelection( img );
  }
})



/** ************************************************************************************************
 * Color
 * Preview a textual color code
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["color", "preview-color"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://kuler.adobe.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Accepts a textual color code and previews it. Pressing enter inserts a small block of that color at the cursor.",
  preview: function(pblock, input) {
		// todo: intelligent recognition of format
		var color = jQuery.trim(input.object.text);
		if (color.length < 7) color = "#"+color;
	    var html = "<div style='width:120px;height:120px;padding:80px;background-color:white'>"
			+ "<div style='width:100%;height:100%;background-color:" + color + "'></div>"
		"</div>"
        pblock.innerHTML = html;
  },
  execute: function(input) {
	var color = input.object.text;
	if (color.length < 7) color = "#"+color;
	CmdUtils.setSelection("<div style='width:12px;height:12px;display:inline-block;background-color:" + color + ";'></div>")
  }
})


/** ************************************************************************************************
 * Datatable
 * Enhance tables with functionality from http://datatables.net
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["datatable", "filter_table", "sort_table", "enhance_table"],
  arguments: [{role:"object", label:"input", nountype: noun_arb_text}],
  icon: "http://datatables.net/favicon.ico",
  author: {name:"g2010a"},
  homepage: "http://github.com/g2010a/Ubiquity-Commands",
  description: "Enhances tables in the page to make them sortable, filterable, etc. using jQuery and the datatables plugin from http://datatables.net. Takes a tableid as argument or applies to all tables if nothing is passed.",
  __colvis_plugin: "                                                                            \
    /*                                                                                          \
     * File:        ColVis.min.js                                                               \
     * Version:     1.0.8                                                                       \
     * Author:      Allan Jardine (www.sprymedia.co.uk)                                         \
     *                                                                                          \
     * Copyright 2010-2012 Allan Jardine, all rights reserved.                                  \
     *                                                                                          \
     * This source file is free software, under either the GPL v2 license or a                  \
     * BSD (3 point) style license, as supplied with this software.                             \
     *                                                                                          \
     * This source file is distributed in the hope that it will be useful, but                  \
     * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY               \
     * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.                  \
     */                                                                                         \
    (function(d){ColVis=function(a,b){(!this.CLASS||\"ColVis\"!=this.CLASS)&&alert(\"Warning: ColVis must be initialised with the keyword 'new'\");\"undefined\"==typeof b&&(b={});this.s={dt:null,oInit:b,fnStateChange:null,activate:\"click\",sAlign:\"left\",buttonText:\"Show / hide columns\",hidden:!0,aiExclude:[],abOriginal:[],bShowAll:!1,sShowAll:\"Show All\",bRestore:!1,sRestore:\"Restore original\",iOverlayFade:500,fnLabel:null,sSize:\"auto\",bCssPosition:!1};this.dom={wrapper:null,button:null,collection:null,background:null,\
    catcher:null,buttons:[],restore:null};ColVis.aInstances.push(this);this.s.dt=a;this._fnConstruct();return this};ColVis.prototype={fnRebuild:function(){for(var a=this.dom.buttons.length-1;0<=a;a--)null!==this.dom.buttons[a]&&this.dom.collection.removeChild(this.dom.buttons[a]);this.dom.buttons.splice(0,this.dom.buttons.length);this.dom.restore&&this.dom.restore.parentNode(this.dom.restore);this._fnAddButtons();this._fnDrawCallback()},_fnConstruct:function(){this._fnApplyCustomisation();var a=this,\
    b,c;this.dom.wrapper=document.createElement(\"div\");this.dom.wrapper.className=\"ColVis TableTools\";this.dom.button=this._fnDomBaseButton(this.s.buttonText);this.dom.button.className+=\" ColVis_MasterButton\";this.dom.wrapper.appendChild(this.dom.button);this.dom.catcher=this._fnDomCatcher();this.dom.collection=this._fnDomCollection();this.dom.background=this._fnDomBackground();this._fnAddButtons();b=0;for(c=this.s.dt.aoColumns.length;b<c;b++)this.s.abOriginal.push(this.s.dt.aoColumns[b].bVisible);this.s.dt.aoDrawCallback.push({fn:function(){a._fnDrawCallback.call(a)},\
    sName:\"ColVis\"});d(this.s.dt.oInstance).bind(\"column-reorder\",function(d,g,f){b=0;for(c=a.s.aiExclude.length;b<c;b++)a.s.aiExclude[b]=f.aiInvertMapping[a.s.aiExclude[b]];d=a.s.abOriginal.splice(f.iFrom,1)[0];a.s.abOriginal.splice(f.iTo,0,d);a.fnRebuild()})},_fnApplyCustomisation:function(){var a=this.s.oInit;\"undefined\"!=typeof a.activate&&(this.s.activate=a.activate);\"undefined\"!=typeof a.buttonText&&(this.s.buttonText=a.buttonText);\"undefined\"!=typeof a.aiExclude&&(this.s.aiExclude=a.aiExclude);\
    \"undefined\"!=typeof a.bRestore&&(this.s.bRestore=a.bRestore);\"undefined\"!=typeof a.sRestore&&(this.s.sRestore=a.sRestore);\"undefined\"!=typeof a.bShowAll&&(this.s.bShowAll=a.bShowAll);\"undefined\"!=typeof a.sShowAll&&(this.s.sShowAll=a.sShowAll);\"undefined\"!=typeof a.sAlign&&(this.s.sAlign=a.sAlign);\"undefined\"!=typeof a.fnStateChange&&(this.s.fnStateChange=a.fnStateChange);\"undefined\"!=typeof a.iOverlayFade&&(this.s.iOverlayFade=a.iOverlayFade);\"undefined\"!=typeof a.fnLabel&&(this.s.fnLabel=a.fnLabel);\
    \"undefined\"!=typeof a.sSize&&(this.s.sSize=a.sSize);\"undefined\"!=typeof a.bCssPosition&&(this.s.bCssPosition=a.bCssPosition)},_fnDrawCallback:function(){for(var a=this.s.dt.aoColumns,b=0,c=a.length;b<c;b++)null!==this.dom.buttons[b]&&(a[b].bVisible?d(\"input\",this.dom.buttons[b]).attr(\"checked\",\"checked\"):d(\"input\",this.dom.buttons[b]).removeAttr(\"checked\"))},_fnAddButtons:function(){for(var a,b=\",\"+this.s.aiExclude.join(\",\")+\",\",c=0,d=this.s.dt.aoColumns.length;c<d;c++)-1==b.indexOf(\",\"+c+\",\")?(a=\
    this._fnDomColumnButton(c),this.dom.buttons.push(a),this.dom.collection.appendChild(a)):this.dom.buttons.push(null);this.s.bRestore&&(a=this._fnDomRestoreButton(),a.className+=\" ColVis_Restore\",this.dom.buttons.push(a),this.dom.collection.appendChild(a));this.s.bShowAll&&(a=this._fnDomShowAllButton(),a.className+=\" ColVis_ShowAll\",this.dom.buttons.push(a),this.dom.collection.appendChild(a))},_fnDomRestoreButton:function(){var a=this,b=document.createElement(\"button\"),c=document.createElement(\"span\");\
    b.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";b.appendChild(c);d(c).html('<span class=\"ColVis_title\">'+this.s.sRestore+\"</span>\");d(b).click(function(){for(var b=0,c=a.s.abOriginal.length;b<c;b++)a.s.dt.oInstance.fnSetColumnVis(b,a.s.abOriginal[b],!1);a._fnAdjustOpenRows();a.s.dt.oInstance.fnAdjustColumnSizing(!1);a.s.dt.oInstance.fnDraw(!1)});return b},_fnDomShowAllButton:function(){var a=this,b=document.createElement(\"button\"),\
    c=document.createElement(\"span\");b.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";b.appendChild(c);d(c).html('<span class=\"ColVis_title\">'+this.s.sShowAll+\"</span>\");d(b).click(function(){for(var b=0,c=a.s.abOriginal.length;b<c;b++)-1===a.s.aiExclude.indexOf(b)&&a.s.dt.oInstance.fnSetColumnVis(b,!0,!1);a._fnAdjustOpenRows();a.s.dt.oInstance.fnAdjustColumnSizing(!1);a.s.dt.oInstance.fnDraw(!1)});return b},_fnDomColumnButton:function(a){var b=\
    this,c=this.s.dt.aoColumns[a],e=document.createElement(\"button\"),g=document.createElement(\"span\"),f=this.s.dt;e.className=!f.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";e.appendChild(g);c=null===this.s.fnLabel?c.sTitle:this.s.fnLabel(a,c.sTitle,c.nTh);d(g).html('<span class=\"ColVis_radio\"><input type=\"checkbox\"/></span><span class=\"ColVis_title\">'+c+\"</span>\");d(e).click(function(c){var e=!d(\"input\",this).is(\":checked\");\"input\"==c.target.nodeName.toLowerCase()&&\
    (e=d(\"input\",this).is(\":checked\"));c=d.fn.dataTableExt.iApiIndex;d.fn.dataTableExt.iApiIndex=b._fnDataTablesApiIndex.call(b);f.oFeatures.bServerSide&&(\"\"!==f.oScroll.sX||\"\"!==f.oScroll.sY)?(b.s.dt.oInstance.fnSetColumnVis(a,e,!1),b.s.dt.oInstance.fnAdjustColumnSizing(!1),b.s.dt.oInstance.oApi._fnScrollDraw(b.s.dt),b._fnDrawCallback()):b.s.dt.oInstance.fnSetColumnVis(a,e);d.fn.dataTableExt.iApiIndex=c;null!==b.s.fnStateChange&&b.s.fnStateChange.call(b,a,e)});return e},_fnDataTablesApiIndex:function(){for(var a=\
    0,b=this.s.dt.oInstance.length;a<b;a++)if(this.s.dt.oInstance[a]==this.s.dt.nTable)return a;return 0},_fnDomBaseButton:function(a){var b=this,c=document.createElement(\"button\"),e=document.createElement(\"span\"),g=\"mouseover\"==this.s.activate?\"mouseover\":\"click\";c.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";c.appendChild(e);e.innerHTML=a;d(c).bind(g,function(a){b._fnCollectionShow();a.preventDefault()});return c},_fnDomCollection:function(){var a=\
    document.createElement(\"div\");a.style.display=\"none\";a.className=!this.s.dt.bJUI?\"ColVis_collection TableTools_collection\":\"ColVis_collection TableTools_collection ui-buttonset ui-buttonset-multi\";this.s.bCssPosition||(a.style.position=\"absolute\");d(a).css(\"opacity\",0);return a},_fnDomCatcher:function(){var a=this,b=document.createElement(\"div\");b.className=\"ColVis_catcher TableTools_catcher\";d(b).click(function(){a._fnCollectionHide.call(a,null,null)});return b},_fnDomBackground:function(){var a=\
    this,b=document.createElement(\"div\");b.style.position=\"absolute\";b.style.left=\"0px\";b.style.top=\"0px\";b.className=\"ColVis_collectionBackground TableTools_collectionBackground\";d(b).css(\"opacity\",0);d(b).click(function(){a._fnCollectionHide.call(a,null,null)});\"mouseover\"==this.s.activate&&d(b).mouseover(function(){a.s.overcollection=!1;a._fnCollectionHide.call(a,null,null)});return b},_fnCollectionShow:function(){var a=this,b,c;b=d(this.dom.button).offset();var e=this.dom.collection,g=this.dom.background,\
    f=parseInt(b.left,10),h=parseInt(b.top+d(this.dom.button).outerHeight(),10);this.s.bCssPosition||(e.style.top=h+\"px\",e.style.left=f+\"px\");e.style.display=\"block\";d(e).css(\"opacity\",0);c=d(window).height();var i=d(document).height(),j=d(window).width(),h=d(document).width();g.style.height=(c>i?c:i)+\"px\";g.style.width=(j<h?j:h)+\"px\";c=this.dom.catcher.style;c.height=d(this.dom.button).outerHeight()+\"px\";c.width=d(this.dom.button).outerWidth()+\"px\";c.top=b.top+\"px\";c.left=f+\"px\";document.body.appendChild(g);\
    document.body.appendChild(e);document.body.appendChild(this.dom.catcher);if(\"auto\"==this.s.sSize){i=[];this.dom.collection.style.width=\"auto\";b=0;for(c=this.dom.buttons.length;b<c;b++)null!==this.dom.buttons[b]&&(this.dom.buttons[b].style.width=\"auto\",i.push(d(this.dom.buttons[b]).outerWidth()));iMax=Math.max.apply(window,i);b=0;for(c=this.dom.buttons.length;b<c;b++)null!==this.dom.buttons[b]&&(this.dom.buttons[b].style.width=iMax+\"px\");this.dom.collection.style.width=iMax+\"px\"}this.s.bCssPosition||\
    (e.style.left=\"left\"==this.s.sAlign?f+\"px\":f-d(e).outerWidth()+d(this.dom.button).outerWidth()+\"px\",b=d(e).outerWidth(),d(e).outerHeight(),f+b>h&&(e.style.left=h-b+\"px\"));setTimeout(function(){d(e).animate({opacity:1},a.s.iOverlayFade);d(g).animate({opacity:0.1},a.s.iOverlayFade,\"linear\",function(){jQuery.browser.msie&&jQuery.browser.version==\"6.0\"&&a._fnDrawCallback()})},10);this.s.hidden=!1},_fnCollectionHide:function(){var a=this;!this.s.hidden&&null!==this.dom.collection&&(this.s.hidden=!0,d(this.dom.collection).animate({opacity:0},\
    a.s.iOverlayFade,function(){this.style.display=\"none\"}),d(this.dom.background).animate({opacity:0},a.s.iOverlayFade,function(){document.body.removeChild(a.dom.background);document.body.removeChild(a.dom.catcher)}))},_fnAdjustOpenRows:function(){for(var a=this.s.dt.aoOpenRows,b=this.s.dt.oApi._fnVisbleColumns(this.s.dt),c=0,d=a.length;c<d;c++)a[c].nTr.getElementsByTagName(\"td\")[0].colSpan=b}};ColVis.fnRebuild=function(a){var b=null;\"undefined\"!=typeof a&&(b=a.fnSettings().nTable);for(var c=0,d=ColVis.aInstances.length;c<\
    d;c++)(\"undefined\"==typeof a||b==ColVis.aInstances[c].s.dt.nTable)&&ColVis.aInstances[c].fnRebuild()};ColVis.aInstances=[];ColVis.prototype.CLASS=\"ColVis\";ColVis.VERSION=\"1.0.8\";ColVis.prototype.VERSION=ColVis.VERSION;\"function\"==typeof d.fn.dataTable&&\"function\"==typeof d.fn.dataTableExt.fnVersionCheck&&d.fn.dataTableExt.fnVersionCheck(\"1.7.0\")?d.fn.dataTableExt.aoFeatures.push({fnInit:function(a){return(new ColVis(a,\"undefined\"==typeof a.oInit.oColVis?{}:a.oInit.oColVis)).dom.wrapper},cFeature:\"C\",\
    sFeature:\"ColVis\"}):alert(\"Warning: ColVis requires DataTables 1.7 or greater - www.datatables.net/download\")})(jQuery);\
  ",
  preview: function(pblock, input) {
        var doc = CmdUtils.getDocument(),
            tableids = [],
            tables = jQuery("table", doc).each(function(i,d){
                // Ensure all tables have an id
               var thisid = jQuery(d).attr("id")
               if (!thisid) jQuery(d).attr("id", "dtindex_" + i)
               tableids.push(jQuery(d).attr("id"))
            })
        pblock.innerHTML = this.description + "<div>Available tables: <ul><li>" + tableids.join("</li><li>") + "</li></div>"
  },
  execute: function(input) {
        var doc = CmdUtils.getDocument(),
            that = this
        
        // Ensure tables have THEAD
        jQuery("table", doc).not(":has(thead)").each(function(i,d) {
            var thistable = jQuery(d),
                toprow = jQuery(jQuery('tr', thistable)[0]),
                toprowhtml = toprow.html()
            
            toprow.remove()
            thistable.prepend("<thead>"+toprowhtml+"</thead>")
        })
        
        // Ensure tables have TBODY
        jQuery("table", doc).not(":has(tbody)").each(function(i,d) {
            var thistable = jQuery(d),
                head = jQuery('thead',d)
                toprow = head.length == 0 ? jQuery(jQuery('tr', thistable)[0]) : null
            if (toprow) toprow.remove()
            else if (head) head.remove()
            
            jQuery("tr", thistable).wrapAll("<tbody></tbody>")
            thistable.prepend(toprow ? toprow : head)
        })
        
        var tableid = jQuery.trim(input.object.text)
        if (tableid[0] !== "#") tableid = "#" + tableid
        
        CmdUtils.injectCss("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css")
        CmdUtils.injectCss("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables_themeroller.css")
		CmdUtils.loadJQuery(function(jqobj){
            CmdUtils.log("Injected jQuery")
            CmdUtils.injectJs("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.js", function(){
                CmdUtils.log("Injected jquery.dataTables.js")
                
                CmdUtils.injectJs(that.__colvis_plugin, function() {
                    CmdUtils.log("Injected colvis plugin")
                    
                    var command = "$('{ID}')"
                                    + ".wrapAll('<div style=\"margin: 20px 0px\"></div>')"  // Give us some room above and below
                                    + ".dataTable({ "
                                        + "'bPaginate': false,"     // Disallow pagination
                                        + "'sDom': 'lfrtip<\"clear\">C',"    // Allow column hiding
                                        + "'oColVis' : { 'activate' : 'mouseover' },"    // Column hiding dialog opens on mouseover
                                    + "})"   
                    command = command.replace("{ID}", (tableid && tableid.length > 1)  
                            ? tableid       // Apply only to a particular table 
                            : 'table')      // Apply to all tables
                            
                    CmdUtils.injectJs(command, function(){
                        CmdUtils.log("Executed " + command)
                    }, doc)
                }, doc)
            }, doc)
        }, doc)
  }
})

/** ************************************************************************************************
 * Decode
 * Decode URLs
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["decode"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://meyerweb.com/favicon.ico",
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  description: "Decodes URL-encoded text",
  preview: function(pblock, input) {
        pblock.innerHTML = decodeURIComponent(input.object.text.replace(/\+/g,  " "));
  },
  execute: function(input) {
		CmdUtils.setSelection(decodeURIComponent(input.object.text.replace(/\+/g,  " ")));
  }
})

/** ************************************************************************************************
 * Dict
 * Translate German / English
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
	names: ["dict"],
	arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
	icon: "http://www.dict.cc/favicon.ico",
	homepage: 'https://github.com/g2010a/Ubiquity-Commands',
	author: {name:"g2010a"},
	description: "Searches Dict.cc for a German/English term and loads results in the preview pane.",
	preview: function(pblock, input) {
		var text = $.trim(input.object.text)
		pblock.innerHTML = this.description + (text ? "<p>... searching for '" + text + "'</p>" : "")
		if (text) {
			CmdUtils.previewGet(pblock,
				'http://pocket.dict.cc/?s=' + text,
				null,
				function(data){
					var items = [],
						entries = $('dl dt', data).each(function(i,dt){
							var dds = $(this).nextUntil('dt')
							items.push({ entry: $(this).html(), description: dds.html(), class: i%2 ? 'odd' : 'even' })
						})
					html = CmdUtils.renderTemplate(
						feed.dom.getElementById("dict").innerHTML,
						{ items: items }
					)
					pblock.innerHTML = CmdUtils.absUrl(html,"http://www.dict.cc/")
				}
			)
		}
	},
	execute: function(args) {
		var input = args.object;
		var url = "http://www.dict.cc/?s={QUERY}"
		var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
		Utils.openUrlInBrowser(urlString);
	}
})

/** ************************************************************************************************
 * Dictes
 * Translate German / Spanish
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
	names: ["dictes","dees"],
	arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
	icon: "http://www.dict.cc/favicon.ico",
	homepage: 'https://github.com/g2010a/Ubiquity-Commands',
	author: {name:"g2010a"},
	description: "Searches Dict.cc for a German/Spanish term and loads the results in the preview pane.",
	preview: function(pblock, input) {
		var text = $.trim(input.object.text)
		pblock.innerHTML = this.description + (text ? "<p>... searching for '" + text + "'</p>" : "")
		if (text) {
			CmdUtils.previewGet(pblock,
				'http://dees.pocket.dict.cc/?s=' + text,
				null,
				function(data){
					var items = [],
						entries = $('dl dt', data).each(function(i,dt){
							var dds = $(this).nextUntil('dt')
							items.push({ entry: $(this).html(), description: dds.html(), class: i%2 ? 'odd' : 'even' })
						})
					html = CmdUtils.renderTemplate(
						feed.dom.getElementById("dict").innerHTML,
						{ items: items }
					)
					pblock.innerHTML = CmdUtils.absUrl(html,"http://dees.dict.cc/")
				}
			)
		}
	},
	execute: function(args) {
		var input = args.object;
		var url = "http://dees.dict.cc/?s={QUERY}"
		var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
		Utils.openUrlInBrowser(urlString);
	}
})

/** ************************************************************************************************
 * Emoji
 * Find a unicode emoji
 * *********************************************************************************************** */
// FUSE: fuzzy matching
!function(t){"use strict";function e(){console.log.apply(console,arguments)}function s(t,e){var s,n,o,i;for(this.list=t,this.options=e=e||{},s=0,i=["sort","shouldSort","verbose","tokenize"],n=i.length;n>s;s++)o=i[s],this.options[o]=o in e?e[o]:r[o];for(s=0,i=["searchFn","sortFn","keys","getFn","include","tokenSeparator"],n=i.length;n>s;s++)o=i[s],this.options[o]=e[o]||r[o]}function n(t,e,s){var i,r,h,a,c,p;if(e){if(h=e.indexOf("."),-1!==h?(i=e.slice(0,h),r=e.slice(h+1)):i=e,a=t[i],null!==a&&void 0!==a)if(r||"string"!=typeof a&&"number"!=typeof a)if(o(a))for(c=0,p=a.length;p>c;c++)n(a[c],r,s);else r&&n(a,r,s);else s.push(a)}else s.push(t);return s}function o(t){return"[object Array]"===Object.prototype.toString.call(t)}function i(t,e){e=e||{},this.options=e,this.options.location=e.location||i.defaultOptions.location,this.options.distance="distance"in e?e.distance:i.defaultOptions.distance,this.options.threshold="threshold"in e?e.threshold:i.defaultOptions.threshold,this.options.maxPatternLength=e.maxPatternLength||i.defaultOptions.maxPatternLength,this.pattern=e.caseSensitive?t:t.toLowerCase(),this.patternLen=t.length,this.patternLen<=this.options.maxPatternLength&&(this.matchmask=1<<this.patternLen-1,this.patternAlphabet=this._calculatePatternAlphabet())}var r={id:null,caseSensitive:!1,include:[],shouldSort:!0,searchFn:i,sortFn:function(t,e){return t.score-e.score},getFn:n,keys:[],verbose:!1,tokenize:!1,matchAllTokens:!1,tokenSeparator:/ +/g};s.VERSION="2.5.0",s.prototype.set=function(t){return this.list=t,t},s.prototype.search=function(t){this.options.verbose&&e("\nSearch term:",t,"\n"),this.pattern=t,this.results=[],this.resultMap={},this._keyMap=null,this._prepareSearchers(),this._startSearch(),this._computeScore(),this._sort();var s=this._format();return s},s.prototype._prepareSearchers=function(){var t=this.options,e=this.pattern,s=t.searchFn,n=e.split(t.tokenSeparator),o=0,i=n.length;if(this.options.tokenize)for(this.tokenSearchers=[];i>o;o++)this.tokenSearchers.push(new s(n[o],t));this.fullSeacher=new s(e,t)},s.prototype._startSearch=function(){var t,e,s,n,o=this.options,i=o.getFn,r=this.list,h=r.length,a=this.options.keys,c=a.length,p=null;if("string"==typeof r[0])for(s=0;h>s;s++)this._analyze("",r[s],s,s);else for(this._keyMap={},s=0;h>s;s++)for(p=r[s],n=0;c>n;n++){if(t=a[n],"string"!=typeof t){if(e=1-t.weight||1,this._keyMap[t.name]={weight:e},t.weight<=0||t.weight>1)throw new Error("Key weight has to be > 0 and <= 1");t=t.name}else this._keyMap[t]={weight:1};this._analyze(t,i(p,t,[]),p,s)}},s.prototype._analyze=function(t,s,n,i){var r,h,a,c,p,l,u,f,d,g,m,y,k,v,S,b=this.options,_=!1;if(void 0!==s&&null!==s){h=[];var M=0;if("string"==typeof s){if(r=s.split(b.tokenSeparator),b.verbose&&e("---------\nKey:",t),this.options.tokenize){for(v=0;v<this.tokenSearchers.length;v++){for(f=this.tokenSearchers[v],b.verbose&&e("Pattern:",f.pattern),d=[],y=!1,S=0;S<r.length;S++){g=r[S],m=f.search(g);var L={};m.isMatch?(L[g]=m.score,_=!0,y=!0,h.push(m.score)):(L[g]=1,this.options.matchAllTokens||h.push(1)),d.push(L)}y&&M++,b.verbose&&e("Token scores:",d)}for(c=h[0],l=h.length,v=1;l>v;v++)c+=h[v];c/=l,b.verbose&&e("Token score average:",c)}u=this.fullSeacher.search(s),b.verbose&&e("Full text score:",u.score),p=u.score,void 0!==c&&(p=(p+c)/2),b.verbose&&e("Score average:",p),k=this.options.tokenize&&this.options.matchAllTokens?M>=this.tokenSearchers.length:!0,b.verbose&&e("Check Matches",k),(_||u.isMatch)&&k&&(a=this.resultMap[i],a?a.output.push({key:t,score:p,matchedIndices:u.matchedIndices}):(this.resultMap[i]={item:n,output:[{key:t,score:p,matchedIndices:u.matchedIndices}]},this.results.push(this.resultMap[i])))}else if(o(s))for(v=0;v<s.length;v++)this._analyze(t,s[v],n,i)}},s.prototype._computeScore=function(){var t,s,n,o,i,r,h,a,c,p=this._keyMap,l=this.results;for(this.options.verbose&&e("\n\nComputing score:\n"),t=0;t<l.length;t++){for(n=0,o=l[t].output,i=o.length,a=1,s=0;i>s;s++)r=o[s].score,h=p?p[o[s].key].weight:1,c=r*h,1!==h?a=Math.min(a,c):(n+=c,o[s].nScore=c);1===a?l[t].score=n/i:l[t].score=a,this.options.verbose&&e(l[t])}},s.prototype._sort=function(){var t=this.options;t.shouldSort&&(t.verbose&&e("\n\nSorting...."),this.results.sort(t.sortFn))},s.prototype._format=function(){var t,s,n,o,i,r=this.options,h=r.getFn,a=[],c=this.results,p=r.include;for(r.verbose&&e("\n\nOutput:\n\n",c),o=r.id?function(t){c[t].item=h(c[t].item,r.id,[])[0]}:function(){},i=function(t){var e,s,n,o,i,r=c[t];if(p.length>0){if(e={item:r.item},-1!==p.indexOf("matches"))for(n=r.output,e.matches=[],s=0;s<n.length;s++)o=n[s],i={indices:o.matchedIndices},o.key&&(i.key=o.key),e.matches.push(i);-1!==p.indexOf("score")&&(e.score=c[t].score)}else e=r.item;return e},s=0,n=c.length;n>s;s++)o(s),t=i(s),a.push(t);return a},i.defaultOptions={location:0,distance:100,threshold:.6,maxPatternLength:32},i.prototype._calculatePatternAlphabet=function(){var t={},e=0;for(e=0;e<this.patternLen;e++)t[this.pattern.charAt(e)]=0;for(e=0;e<this.patternLen;e++)t[this.pattern.charAt(e)]|=1<<this.pattern.length-e-1;return t},i.prototype._bitapScore=function(t,e){var s=t/this.patternLen,n=Math.abs(this.options.location-e);return this.options.distance?s+n/this.options.distance:n?1:s},i.prototype.search=function(t){var e,s,n,o,i,r,h,a,c,p,l,u,f,d,g,m,y,k,v,S,b,_,M=this.options;if(t=M.caseSensitive?t:t.toLowerCase(),this.pattern===t)return{isMatch:!0,score:0,matchedIndices:[[0,t.length-1]]};if(this.patternLen>M.maxPatternLength){if(y=t.match(new RegExp(this.pattern.replace(M.tokenSeparator,"|"))),k=!!y)for(S=[],e=0,b=y.length;b>e;e++)_=y[e],S.push([t.indexOf(_),_.length-1]);return{isMatch:k,score:k?.5:1,matchedIndices:S}}for(o=M.location,n=t.length,i=M.threshold,r=t.indexOf(this.pattern,o),v=[],e=0;n>e;e++)v[e]=0;for(-1!=r&&(i=Math.min(this._bitapScore(0,r),i),r=t.lastIndexOf(this.pattern,o+this.patternLen),-1!=r&&(i=Math.min(this._bitapScore(0,r),i))),r=-1,g=1,m=[],c=this.patternLen+n,e=0;e<this.patternLen;e++){for(h=0,a=c;a>h;)this._bitapScore(e,o+a)<=i?h=a:c=a,a=Math.floor((c-h)/2+h);for(c=a,p=Math.max(1,o-a+1),l=Math.min(o+a,n)+this.patternLen,u=Array(l+2),u[l+1]=(1<<e)-1,s=l;s>=p;s--)if(d=this.patternAlphabet[t.charAt(s-1)],d&&(v[s-1]=1),0===e?u[s]=(u[s+1]<<1|1)&d:u[s]=(u[s+1]<<1|1)&d|((f[s+1]|f[s])<<1|1)|f[s+1],u[s]&this.matchmask&&(g=this._bitapScore(e,s-1),i>=g)){if(i=g,r=s-1,m.push(r),!(r>o))break;p=Math.max(1,2*o-r)}if(this._bitapScore(e+1,o)>i)break;f=u}return S=this._getMatchedIndices(v),{isMatch:r>=0,score:0===g?.001:g,matchedIndices:S}},i.prototype._getMatchedIndices=function(t){for(var e,s=[],n=-1,o=-1,i=0,r=t.length;r>i;i++)e=t[i],e&&-1===n?n=i:e||-1===n||(o=i-1,s.push([n,o]),n=-1);return t[i-1]&&s.push([n,i-1]),s},"object"==typeof exports?module.exports=s:"function"==typeof define&&define.amd?define(function(){return s}):t.Fuse=s}(this);
var emojiFuse = null;
CmdUtils.CreateCommand({
    names: ["emoji", "emoticon"],
    arguments: [{role:"object", label:"input", nountype: noun_arb_text}],
    icon: "http://getemoji.com/assets/ico/favicon.png",
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:'g2010a'},
    description: "Interprets emoji codes into their unicode representation",
    __emojis: (function() { return [{"s":"😀","k":["face","grin","grinning face"]},{"s":"😁","k":["eye","face","grin","smile","grinning face with smiling eyes"]},{"s":"😂","k":["face","joy","laugh","tear","face with tears of joy"]},{"s":"🤣","k":["face","floor","laugh","rolling","rolling on the floor laughing"]},{"s":"😃","k":["face","mouth","open","smile","smiling face with open mouth"]},{"s":"😄","k":["eye","face","mouth","open","smile","smiling face with open mouth & smiling eyes"]},{"s":"😅","k":["cold","face","open","smile","sweat","smiling face with open mouth & cold sweat"]},{"s":"😆","k":["face","laugh","mouth","open","satisfied","smile","smiling face with open mouth & closed eyes"]},{"s":"😉","k":["face","wink","winking face"]},{"s":"😊","k":["blush","eye","face","smile","smiling face with smiling eyes"]},{"s":"😋","k":["delicious","face","savouring","smile","um","yum","face savouring delicious food"]},{"s":"😎","k":["bright","cool","eye","eyewear","face","glasses","smile","sun","sunglasses","smiling face with sunglasses"]},{"s":"😍","k":["eye","face","love","smile","smiling face with heart-eyes"]},{"s":"😘","k":["face","kiss","face blowing a kiss"]},{"s":"😗","k":["face","kiss","kissing face"]},{"s":"😙","k":["eye","face","kiss","smile","kissing face with smiling eyes"]},{"s":"😚","k":["closed","eye","face","kiss","kissing face with closed eyes"]},{"s":"☺","k":["face","outlined","relaxed","smile","smiling face"]},{"s":"🙂","k":["face","smile","slightly smiling face"]},{"s":"🤗","k":["face","hug","hugging","hugging face"]},{"s":"","k":["",""]},{"s":"🤔","k":["face","thinking","thinking face"]},{"s":"😐","k":["deadpan","face","neutral","neutral face"]},{"s":"😑","k":["expressionless","face","inexpressive","unexpressive","expressionless face"]},{"s":"😶","k":["face","mouth","quiet","silent","face without mouth"]},{"s":"🙄","k":["eyes","face","rolling","face with rolling eyes"]},{"s":"😏","k":["face","smirk","smirking face"]},{"s":"😣","k":["face","persevere","persevering face"]},{"s":"😥","k":["disappointed","face","relieved","whew","disappointed but relieved face"]},{"s":"😮","k":["face","mouth","open","sympathy","face with open mouth"]},{"s":"🤐","k":["face","mouth","zipper","zipper-mouth face"]},{"s":"😯","k":["face","hushed","stunned","surprised","hushed face"]},{"s":"😪","k":["face","sleep","sleepy face"]},{"s":"😫","k":["face","tired","tired face"]},{"s":"😴","k":["face","sleep","zzz","sleeping face"]},{"s":"😌","k":["face","relieved","relieved face"]},{"s":"🤓","k":["face","geek","nerd","nerd face"]},{"s":"😛","k":["face","tongue","face with stuck-out tongue"]},{"s":"😜","k":["eye","face","joke","tongue","wink","face with stuck-out tongue & winking eye"]},{"s":"😝","k":["eye","face","horrible","taste","tongue","face with stuck-out tongue & closed eyes"]},{"s":"🤤","k":["drooling","face","drooling face"]},{"s":"","k":["",""]},{"s":"😒","k":["face","unamused","unhappy","unamused face"]},{"s":"😓","k":["cold","face","sweat","face with cold sweat"]},{"s":"😔","k":["dejected","face","pensive","pensive face"]},{"s":"😕","k":["confused","face","confused face"]},{"s":"🙃","k":["face","upside-down","upside-down face"]},{"s":"🤑","k":["face","money","mouth","money-mouth face"]},{"s":"😲","k":["astonished","face","shocked","totally","astonished face"]},{"s":"","k":["",""]},{"s":"☹","k":["face","frown","frowning face"]},{"s":"🙁","k":["face","frown","slightly frowning face"]},{"s":"😖","k":["confounded","face","confounded face"]},{"s":"😞","k":["disappointed","face","disappointed face"]},{"s":"😟","k":["face","worried","worried face"]},{"s":"😤","k":["face","triumph","won","face with steam from nose"]},{"s":"😢","k":["cry","face","sad","tear","crying face"]},{"s":"😭","k":["cry","face","sad","sob","tear","loudly crying face"]},{"s":"😦","k":["face","frown","mouth","open","frowning face with open mouth"]},{"s":"😧","k":["anguished","face","anguished face"]},{"s":"😨","k":["face","fear","fearful","scared","fearful face"]},{"s":"😩","k":["face","tired","weary","weary face"]},{"s":"😬","k":["face","grimace","grimacing face"]},{"s":"😰","k":["blue","cold","face","mouth","open","rushed","sweat","face with open mouth & cold sweat"]},{"s":"😱","k":["face","fear","fearful","munch","scared","scream","face screaming in fear"]},{"s":"😳","k":["dazed","face","flushed","flushed face"]},{"s":"😵","k":["dizzy","face","dizzy face"]},{"s":"😡","k":["angry","face","mad","pouting","rage","red","pouting face"]},{"s":"😠","k":["angry","face","mad","angry face"]},{"s":"","k":["",""]},{"s":"😇","k":["angel","face","fairy tale","fantasy","halo","innocent","smile","smiling face with halo"]},{"s":"🤠","k":["cowboy","cowgirl","face","hat","cowboy hat face"]},{"s":"🤡","k":["clown","face","clown face"]},{"s":"🤥","k":["face","lie","pinocchio","lying face"]},{"s":"","k":["",""]},{"s":"😷","k":["cold","doctor","face","mask","medicine","sick","face with medical mask"]},{"s":"🤒","k":["face","ill","sick","thermometer","face with thermometer"]},{"s":"🤕","k":["bandage","face","hurt","injury","face with head-bandage"]},{"s":"🤢","k":["face","nauseated","vomit","nauseated face"]},{"s":"🤧","k":["face","gesundheit","sneeze","sneezing face"]},{"s":"","k":["",""]},{"s":"😈","k":["face","fairy tale","fantasy","horns","smile","smiling face with horns"]},{"s":"👿","k":["demon","devil","face","fairy tale","fantasy","imp","angry face with horns"]},{"s":"👹","k":["creature","face","fairy tale","fantasy","japanese","monster","ogre"]},{"s":"👺","k":["creature","face","fairy tale","fantasy","japanese","monster","goblin"]},{"s":"💀","k":["death","face","fairy tale","monster","skull"]},{"s":"☠","k":["crossbones","death","face","monster","skull","skull and crossbones"]},{"s":"👻","k":["creature","face","fairy tale","fantasy","monster","ghost"]},{"s":"👽","k":["creature","extraterrestrial","face","fairy tale","fantasy","monster","ufo","alien"]},{"s":"👾","k":["alien","creature","extraterrestrial","face","fairy tale","fantasy","monster","ufo","alien monster"]},{"s":"🤖","k":["face","monster","robot","robot face"]},{"s":"💩","k":["comic","dung","face","monster","poo","poop","pile of poo"]},{"s":"","k":["",""]},{"s":"😺","k":["cat","face","mouth","open","smile","smiling cat face with open mouth"]},{"s":"😸","k":["cat","eye","face","grin","smile","grinning cat face with smiling eyes"]},{"s":"😹","k":["cat","face","joy","tear","cat face with tears of joy"]},{"s":"😻","k":["cat","eye","face","love","smile","smiling cat face with heart-eyes"]},{"s":"😼","k":["cat","face","ironic","smile","wry","cat face with wry smile"]},{"s":"😽","k":["cat","eye","face","kiss","kissing cat face with closed eyes"]},{"s":"🙀","k":["cat","face","oh","surprised","weary","weary cat face"]},{"s":"😿","k":["cat","cry","face","sad","tear","crying cat face"]},{"s":"😾","k":["cat","face","pouting","pouting cat face"]},{"s":"","k":["",""]},{"s":"🙈","k":["evil","face","forbidden","gesture","monkey","no","not","prohibited","see","see-no-evil monkey"]},{"s":"🙉","k":["evil","face","forbidden","gesture","hear","monkey","no","not","prohibited","hear-no-evil monkey"]},{"s":"🙊","k":["evil","face","forbidden","gesture","monkey","no","not","prohibited","speak","speak-no-evil monkey"]},{"s":"","k":["",""]},{"s":"👦","k":["boy","young","boy"]},{"s":"👦🏻","k":["boy","light skin tone","young","boy: light skin tone"]},{"s":"👦🏼","k":["boy","medium-light skin tone","young","boy: medium-light skin tone"]},{"s":"👦🏽","k":["boy","medium skin tone","young","boy: medium skin tone"]},{"s":"👦🏾","k":["boy","medium-dark skin tone","young","boy: medium-dark skin tone"]},{"s":"👦🏿","k":["boy","dark skin tone","young","boy: dark skin tone"]},{"s":"👧","k":["virgo","young","zodiac","girl"]},{"s":"👧🏻","k":["light skin tone","virgo","young","zodiac","girl: light skin tone"]},{"s":"👧🏼","k":["medium-light skin tone","virgo","young","zodiac","girl: medium-light skin tone"]},{"s":"👧🏽","k":["medium skin tone","virgo","young","zodiac","girl: medium skin tone"]},{"s":"👧🏾","k":["medium-dark skin tone","virgo","young","zodiac","girl: medium-dark skin tone"]},{"s":"👧🏿","k":["dark skin tone","virgo","young","zodiac","girl: dark skin tone"]},{"s":"👨","k":["man","man"]},{"s":"👨🏻","k":["light skin tone","man","man: light skin tone"]},{"s":"👨🏼","k":["man","medium-light skin tone","man: medium-light skin tone"]},{"s":"👨🏽","k":["man","medium skin tone","man: medium skin tone"]},{"s":"👨🏾","k":["man","medium-dark skin tone","man: medium-dark skin tone"]},{"s":"👨🏿","k":["dark skin tone","man","man: dark skin tone"]},{"s":"👩","k":["woman","woman"]},{"s":"👩🏻","k":["light skin tone","woman","woman: light skin tone"]},{"s":"","k":["",""]},{"s":"👩🏼","k":["medium-light skin tone","woman","woman: medium-light skin tone"]},{"s":"👩🏽","k":["medium skin tone","woman","woman: medium skin tone"]},{"s":"👩🏾","k":["medium-dark skin tone","woman","woman: medium-dark skin tone"]},{"s":"👩🏿","k":["dark skin tone","woman","woman: dark skin tone"]},{"s":"👴","k":["man","old","old man"]},{"s":"👴🏻","k":["light skin tone","man","old","old man: light skin tone"]},{"s":"👴🏼","k":["man","medium-light skin tone","old","old man: medium-light skin tone"]},{"s":"👴🏽","k":["man","medium skin tone","old","old man: medium skin tone"]},{"s":"👴🏾","k":["man","medium-dark skin tone","old","old man: medium-dark skin tone"]},{"s":"👴🏿","k":["dark skin tone","man","old","old man: dark skin tone"]},{"s":"👵","k":["old","woman","old woman"]},{"s":"👵🏻","k":["light skin tone","old","woman","old woman: light skin tone"]},{"s":"👵🏼","k":["medium-light skin tone","old","woman","old woman: medium-light skin tone"]},{"s":"👵🏽","k":["medium skin tone","old","woman","old woman: medium skin tone"]},{"s":"👵🏾","k":["medium-dark skin tone","old","woman","old woman: medium-dark skin tone"]},{"s":"👵🏿","k":["dark skin tone","old","woman","old woman: dark skin tone"]},{"s":"👶","k":["baby","young","baby"]},{"s":"👶🏻","k":["baby","light skin tone","young","baby: light skin tone"]},{"s":"👶🏼","k":["baby","medium-light skin tone","young","baby: medium-light skin tone"]},{"s":"👶🏽","k":["baby","medium skin tone","young","baby: medium skin tone"]},{"s":"","k":["",""]},{"s":"👶🏾","k":["baby","medium-dark skin tone","young","baby: medium-dark skin tone"]},{"s":"👶🏿","k":["baby","dark skin tone","young","baby: dark skin tone"]},{"s":"👼","k":["angel","baby","face","fairy tale","fantasy","baby angel"]},{"s":"👼🏻","k":["angel","baby","face","fairy tale","fantasy","light skin tone","baby angel: light skin tone"]},{"s":"👼🏼","k":["angel","baby","face","fairy tale","fantasy","medium-light skin tone","baby angel: medium-light skin tone"]},{"s":"👼🏽","k":["angel","baby","face","fairy tale","fantasy","medium skin tone","baby angel: medium skin tone"]},{"s":"👼🏾","k":["angel","baby","face","fairy tale","fantasy","medium-dark skin tone","baby angel: medium-dark skin tone"]},{"s":"👼🏿","k":["angel","baby","dark skin tone","face","fairy tale","fantasy","baby angel: dark skin tone"]},{"s":"","k":["",""]},{"s":"👮","k":["cop","officer","police","police officer"]},{"s":"👮🏻","k":["cop","light skin tone","officer","police","police officer: light skin tone"]},{"s":"👮🏼","k":["cop","medium-light skin tone","officer","police","police officer: medium-light skin tone"]},{"s":"👮🏽","k":["cop","medium skin tone","officer","police","police officer: medium skin tone"]},{"s":"👮🏾","k":["cop","medium-dark skin tone","officer","police","police officer: medium-dark skin tone"]},{"s":"👮🏿","k":["cop","dark skin tone","officer","police","police officer: dark skin tone"]},{"s":"🕵","k":["detective","sleuth","spy","detective"]},{"s":"🕵🏻","k":["detective","light skin tone","sleuth","spy","detective: light skin tone"]},{"s":"🕵🏼","k":["detective","medium-light skin tone","sleuth","spy","detective: medium-light skin tone"]},{"s":"🕵🏽","k":["detective","medium skin tone","sleuth","spy","detective: medium skin tone"]},{"s":"🕵🏾","k":["detective","medium-dark skin tone","sleuth","spy","detective: medium-dark skin tone"]},{"s":"🕵🏿","k":["dark skin tone","detective","sleuth","spy","detective: dark skin tone"]},{"s":"💂","k":["guard","guard"]},{"s":"💂🏻","k":["guard","light skin tone","guard: light skin tone"]},{"s":"💂🏼","k":["guard","medium-light skin tone","guard: medium-light skin tone"]},{"s":"💂🏽","k":["guard","medium skin tone","guard: medium skin tone"]},{"s":"💂🏾","k":["guard","medium-dark skin tone","guard: medium-dark skin tone"]},{"s":"💂🏿","k":["dark skin tone","guard","guard: dark skin tone"]},{"s":"👷","k":["construction","hat","worker","construction worker"]},{"s":"👷🏻","k":["construction","hat","light skin tone","worker","construction worker: light skin tone"]},{"s":"","k":["",""]},{"s":"👷🏼","k":["construction","hat","medium-light skin tone","worker","construction worker: medium-light skin tone"]},{"s":"👷🏽","k":["construction","hat","medium skin tone","worker","construction worker: medium skin tone"]},{"s":"👷🏾","k":["construction","hat","medium-dark skin tone","worker","construction worker: medium-dark skin tone"]},{"s":"👷🏿","k":["construction","dark skin tone","hat","worker","construction worker: dark skin tone"]},{"s":"👳","k":["turban","person wearing turban"]},{"s":"👳🏻","k":["light skin tone","turban","person wearing turban: light skin tone"]},{"s":"👳🏼","k":["medium-light skin tone","turban","person wearing turban: medium-light skin tone"]},{"s":"👳🏽","k":["medium skin tone","turban","person wearing turban: medium skin tone"]},{"s":"👳🏾","k":["medium-dark skin tone","turban","person wearing turban: medium-dark skin tone"]},{"s":"👳🏿","k":["dark skin tone","turban","person wearing turban: dark skin tone"]},{"s":"👱","k":["blond","blond-haired person"]},{"s":"👱🏻","k":["blond","light skin tone","blond-haired person: light skin tone"]},{"s":"👱🏼","k":["blond","medium-light skin tone","blond-haired person: medium-light skin tone"]},{"s":"👱🏽","k":["blond","medium skin tone","blond-haired person: medium skin tone"]},{"s":"👱🏾","k":["blond","medium-dark skin tone","blond-haired person: medium-dark skin tone"]},{"s":"👱🏿","k":["blond","dark skin tone","blond-haired person: dark skin tone"]},{"s":"🎅","k":["celebration","christmas","claus","father","santa","santa claus"]},{"s":"🎅🏻","k":["celebration","christmas","claus","father","light skin tone","santa","santa claus: light skin tone"]},{"s":"🎅🏼","k":["celebration","christmas","claus","father","medium-light skin tone","santa","santa claus: medium-light skin tone"]},{"s":"🎅🏽","k":["celebration","christmas","claus","father","medium skin tone","santa","santa claus: medium skin tone"]},{"s":"","k":["",""]},{"s":"🎅🏾","k":["celebration","christmas","claus","father","medium-dark skin tone","santa","santa claus: medium-dark skin tone"]},{"s":"🎅🏿","k":["celebration","christmas","claus","dark skin tone","father","santa","santa claus: dark skin tone"]},{"s":"🤶","k":["celebration","christmas","claus","mother","mrs.","mrs. claus"]},{"s":"🤶🏻","k":["celebration","christmas","claus","light skin tone","mother","mrs.","mrs. claus: light skin tone"]},{"s":"🤶🏼","k":["celebration","christmas","claus","medium-light skin tone","mother","mrs.","mrs. claus: medium-light skin tone"]},{"s":"🤶🏽","k":["celebration","christmas","claus","medium skin tone","mother","mrs.","mrs. claus: medium skin tone"]},{"s":"🤶🏾","k":["celebration","christmas","claus","medium-dark skin tone","mother","mrs.","mrs. claus: medium-dark skin tone"]},{"s":"🤶🏿","k":["celebration","christmas","claus","dark skin tone","mother","mrs.","mrs. claus: dark skin tone"]},{"s":"👸","k":["fairy tale","fantasy","princess"]},{"s":"👸🏻","k":["fairy tale","fantasy","light skin tone","princess: light skin tone"]},{"s":"👸🏼","k":["fairy tale","fantasy","medium-light skin tone","princess: medium-light skin tone"]},{"s":"👸🏽","k":["fairy tale","fantasy","medium skin tone","princess: medium skin tone"]},{"s":"👸🏾","k":["fairy tale","fantasy","medium-dark skin tone","princess: medium-dark skin tone"]},{"s":"👸🏿","k":["dark skin tone","fairy tale","fantasy","princess: dark skin tone"]},{"s":"🤴","k":["prince","prince"]},{"s":"🤴🏻","k":["light skin tone","prince","prince: light skin tone"]},{"s":"🤴🏼","k":["medium-light skin tone","prince","prince: medium-light skin tone"]},{"s":"🤴🏽","k":["medium skin tone","prince","prince: medium skin tone"]},{"s":"🤴🏾","k":["medium-dark skin tone","prince","prince: medium-dark skin tone"]},{"s":"🤴🏿","k":["dark skin tone","prince","prince: dark skin tone"]},{"s":"","k":["",""]},{"s":"👰","k":["bride","veil","wedding","bride with veil"]},{"s":"👰🏻","k":["bride","light skin tone","veil","wedding","bride with veil: light skin tone"]},{"s":"👰🏼","k":["bride","medium-light skin tone","veil","wedding","bride with veil: medium-light skin tone"]},{"s":"👰🏽","k":["bride","medium skin tone","veil","wedding","bride with veil: medium skin tone"]},{"s":"👰🏾","k":["bride","medium-dark skin tone","veil","wedding","bride with veil: medium-dark skin tone"]},{"s":"👰🏿","k":["bride","dark skin tone","veil","wedding","bride with veil: dark skin tone"]},{"s":"🤵","k":["groom","man","tuxedo","man in tuxedo"]},{"s":"🤵🏻","k":["groom","light skin tone","man","tuxedo","man in tuxedo: light skin tone"]},{"s":"🤵🏼","k":["groom","man","medium-light skin tone","tuxedo","man in tuxedo: medium-light skin tone"]},{"s":"🤵🏽","k":["groom","man","medium skin tone","tuxedo","man in tuxedo: medium skin tone"]},{"s":"🤵🏾","k":["groom","man","medium-dark skin tone","tuxedo","man in tuxedo: medium-dark skin tone"]},{"s":"🤵🏿","k":["dark skin tone","groom","man","tuxedo","man in tuxedo: dark skin tone"]},{"s":"🤰","k":["pregnant","woman","pregnant woman"]},{"s":"🤰🏻","k":["light skin tone","pregnant","woman","pregnant woman: light skin tone"]},{"s":"🤰🏼","k":["medium-light skin tone","pregnant","woman","pregnant woman: medium-light skin tone"]},{"s":"🤰🏽","k":["medium skin tone","pregnant","woman","pregnant woman: medium skin tone"]},{"s":"🤰🏾","k":["medium-dark skin tone","pregnant","woman","pregnant woman: medium-dark skin tone"]},{"s":"🤰🏿","k":["dark skin tone","pregnant","woman","pregnant woman: dark skin tone"]},{"s":"👲","k":["gua pi mao","hat","man","man with chinese cap"]},{"s":"👲🏻","k":["gua pi mao","hat","light skin tone","man","man with chinese cap: light skin tone"]},{"s":"","k":["",""]},{"s":"👲🏼","k":["gua pi mao","hat","man","medium-light skin tone","man with chinese cap: medium-light skin tone"]},{"s":"👲🏽","k":["gua pi mao","hat","man","medium skin tone","man with chinese cap: medium skin tone"]},{"s":"👲🏾","k":["gua pi mao","hat","man","medium-dark skin tone","man with chinese cap: medium-dark skin tone"]},{"s":"👲🏿","k":["dark skin tone","gua pi mao","hat","man","man with chinese cap: dark skin tone"]},{"s":"","k":["",""]},{"s":"🙍","k":["frown","gesture","person frowning"]},{"s":"🙍🏻","k":["frown","gesture","light skin tone","person frowning: light skin tone"]},{"s":"🙍🏼","k":["frown","gesture","medium-light skin tone","person frowning: medium-light skin tone"]},{"s":"🙍🏽","k":["frown","gesture","medium skin tone","person frowning: medium skin tone"]},{"s":"🙍🏾","k":["frown","gesture","medium-dark skin tone","person frowning: medium-dark skin tone"]},{"s":"🙍🏿","k":["dark skin tone","frown","gesture","person frowning: dark skin tone"]},{"s":"🙎","k":["gesture","pouting","person pouting"]},{"s":"🙎🏻","k":["gesture","light skin tone","pouting","person pouting: light skin tone"]},{"s":"🙎🏼","k":["gesture","medium-light skin tone","pouting","person pouting: medium-light skin tone"]},{"s":"🙎🏽","k":["gesture","medium skin tone","pouting","person pouting: medium skin tone"]},{"s":"🙎🏾","k":["gesture","medium-dark skin tone","pouting","person pouting: medium-dark skin tone"]},{"s":"🙎🏿","k":["dark skin tone","gesture","pouting","person pouting: dark skin tone"]},{"s":"🙅","k":["forbidden","gesture","hand","no","not","prohibited","person gesturing no"]},{"s":"🙅🏻","k":["forbidden","gesture","hand","light skin tone","no","not","prohibited","person gesturing no: light skin tone"]},{"s":"🙅🏼","k":["forbidden","gesture","hand","medium-light skin tone","no","not","prohibited","person gesturing no: medium-light skin tone"]},{"s":"🙅🏽","k":["forbidden","gesture","hand","medium skin tone","no","not","prohibited","person gesturing no: medium skin tone"]},{"s":"🙅🏾","k":["forbidden","gesture","hand","medium-dark skin tone","no","not","prohibited","person gesturing no: medium-dark skin tone"]},{"s":"🙅🏿","k":["dark skin tone","forbidden","gesture","hand","no","not","prohibited","person gesturing no: dark skin tone"]},{"s":"🙆","k":["gesture","hand","ok","person gesturing ok"]},{"s":"🙆🏻","k":["gesture","hand","light skin tone","ok","person gesturing ok: light skin tone"]},{"s":"","k":["",""]},{"s":"🙆🏼","k":["gesture","hand","medium-light skin tone","ok","person gesturing ok: medium-light skin tone"]},{"s":"🙆🏽","k":["gesture","hand","medium skin tone","ok","person gesturing ok: medium skin tone"]},{"s":"🙆🏾","k":["gesture","hand","medium-dark skin tone","ok","person gesturing ok: medium-dark skin tone"]},{"s":"🙆🏿","k":["dark skin tone","gesture","hand","ok","person gesturing ok: dark skin tone"]},{"s":"💁","k":["hand","help","information","sassy","tipping","person tipping hand"]},{"s":"💁🏻","k":["hand","help","information","light skin tone","sassy","tipping","person tipping hand: light skin tone"]},{"s":"💁🏼","k":["hand","help","information","medium-light skin tone","sassy","tipping","person tipping hand: medium-light skin tone"]},{"s":"💁🏽","k":["hand","help","information","medium skin tone","sassy","tipping","person tipping hand: medium skin tone"]},{"s":"💁🏾","k":["hand","help","information","medium-dark skin tone","sassy","tipping","person tipping hand: medium-dark skin tone"]},{"s":"💁🏿","k":["dark skin tone","hand","help","information","sassy","tipping","person tipping hand: dark skin tone"]},{"s":"🙋","k":["gesture","hand","happy","raised","person raising hand"]},{"s":"🙋🏻","k":["gesture","hand","happy","light skin tone","raised","person raising hand: light skin tone"]},{"s":"🙋🏼","k":["gesture","hand","happy","medium-light skin tone","raised","person raising hand: medium-light skin tone"]},{"s":"🙋🏽","k":["gesture","hand","happy","medium skin tone","raised","person raising hand: medium skin tone"]},{"s":"🙋🏾","k":["gesture","hand","happy","medium-dark skin tone","raised","person raising hand: medium-dark skin tone"]},{"s":"🙋🏿","k":["dark skin tone","gesture","hand","happy","raised","person raising hand: dark skin tone"]},{"s":"🙇","k":["apology","bow","gesture","sorry","person bowing"]},{"s":"🙇🏻","k":["apology","bow","gesture","light skin tone","sorry","person bowing: light skin tone"]},{"s":"🙇🏼","k":["apology","bow","gesture","medium-light skin tone","sorry","person bowing: medium-light skin tone"]},{"s":"🙇🏽","k":["apology","bow","gesture","medium skin tone","sorry","person bowing: medium skin tone"]},{"s":"","k":["",""]},{"s":"🙇🏾","k":["apology","bow","gesture","medium-dark skin tone","sorry","person bowing: medium-dark skin tone"]},{"s":"🙇🏿","k":["apology","bow","dark skin tone","gesture","sorry","person bowing: dark skin tone"]},{"s":"🤦","k":["disbelief","exasperation","face","palm","person facepalming"]},{"s":"🤦🏻","k":["disbelief","exasperation","face","light skin tone","palm","person facepalming: light skin tone"]},{"s":"🤦🏼","k":["disbelief","exasperation","face","medium-light skin tone","palm","person facepalming: medium-light skin tone"]},{"s":"🤦🏽","k":["disbelief","exasperation","face","medium skin tone","palm","person facepalming: medium skin tone"]},{"s":"🤦🏾","k":["disbelief","exasperation","face","medium-dark skin tone","palm","person facepalming: medium-dark skin tone"]},{"s":"🤦🏿","k":["dark skin tone","disbelief","exasperation","face","palm","person facepalming: dark skin tone"]},{"s":"🤷","k":["doubt","ignorance","indifference","shrug","person shrugging"]},{"s":"🤷🏻","k":["doubt","ignorance","indifference","light skin tone","shrug","person shrugging: light skin tone"]},{"s":"🤷🏼","k":["doubt","ignorance","indifference","medium-light skin tone","shrug","person shrugging: medium-light skin tone"]},{"s":"🤷🏽","k":["doubt","ignorance","indifference","medium skin tone","shrug","person shrugging: medium skin tone"]},{"s":"🤷🏾","k":["doubt","ignorance","indifference","medium-dark skin tone","shrug","person shrugging: medium-dark skin tone"]},{"s":"🤷🏿","k":["dark skin tone","doubt","ignorance","indifference","shrug","person shrugging: dark skin tone"]},{"s":"","k":["",""]},{"s":"💆","k":["face","massage","salon","person getting massage"]},{"s":"💆🏻","k":["face","light skin tone","massage","salon","person getting massage: light skin tone"]},{"s":"💆🏼","k":["face","massage","medium-light skin tone","salon","person getting massage: medium-light skin tone"]},{"s":"💆🏽","k":["face","massage","medium skin tone","salon","person getting massage: medium skin tone"]},{"s":"💆🏾","k":["face","massage","medium-dark skin tone","salon","person getting massage: medium-dark skin tone"]},{"s":"💆🏿","k":["dark skin tone","face","massage","salon","person getting massage: dark skin tone"]},{"s":"💇","k":["barber","beauty","haircut","parlor","person getting haircut"]},{"s":"💇🏻","k":["barber","beauty","haircut","light skin tone","parlor","person getting haircut: light skin tone"]},{"s":"💇🏼","k":["barber","beauty","haircut","medium-light skin tone","parlor","person getting haircut: medium-light skin tone"]},{"s":"💇🏽","k":["barber","beauty","haircut","medium skin tone","parlor","person getting haircut: medium skin tone"]},{"s":"💇🏾","k":["barber","beauty","haircut","medium-dark skin tone","parlor","person getting haircut: medium-dark skin tone"]},{"s":"💇🏿","k":["barber","beauty","dark skin tone","haircut","parlor","person getting haircut: dark skin tone"]},{"s":"🚶","k":["hike","walk","walking","person walking"]},{"s":"🚶🏻","k":["hike","light skin tone","walk","walking","person walking: light skin tone"]},{"s":"🚶🏼","k":["hike","medium-light skin tone","walk","walking","person walking: medium-light skin tone"]},{"s":"🚶🏽","k":["hike","medium skin tone","walk","walking","person walking: medium skin tone"]},{"s":"🚶🏾","k":["hike","medium-dark skin tone","walk","walking","person walking: medium-dark skin tone"]},{"s":"🚶🏿","k":["dark skin tone","hike","walk","walking","person walking: dark skin tone"]},{"s":"🏃","k":["marathon","running","person running"]},{"s":"🏃🏻","k":["light skin tone","marathon","running","person running: light skin tone"]},{"s":"","k":["",""]},{"s":"🏃🏼","k":["marathon","medium-light skin tone","running","person running: medium-light skin tone"]},{"s":"🏃🏽","k":["marathon","medium skin tone","running","person running: medium skin tone"]},{"s":"🏃🏾","k":["marathon","medium-dark skin tone","running","person running: medium-dark skin tone"]},{"s":"🏃🏿","k":["dark skin tone","marathon","running","person running: dark skin tone"]},{"s":"💃","k":["dancing","woman","woman dancing"]},{"s":"💃🏻","k":["dancing","light skin tone","woman","woman dancing: light skin tone"]},{"s":"💃🏼","k":["dancing","medium-light skin tone","woman","woman dancing: medium-light skin tone"]},{"s":"💃🏽","k":["dancing","medium skin tone","woman","woman dancing: medium skin tone"]},{"s":"💃🏾","k":["dancing","medium-dark skin tone","woman","woman dancing: medium-dark skin tone"]},{"s":"💃🏿","k":["dancing","dark skin tone","woman","woman dancing: dark skin tone"]},{"s":"🕺","k":["dance","man","man dancing"]},{"s":"🕺🏻","k":["dance","light skin tone","man","man dancing: light skin tone"]},{"s":"🕺🏼","k":["dance","man","medium-light skin tone","man dancing: medium-light skin tone"]},{"s":"🕺🏽","k":["dance","man","medium skin tone","man dancing: medium skin tone"]},{"s":"🕺🏾","k":["dance","man","medium-dark skin tone","man dancing: medium-dark skin tone"]},{"s":"🕺🏿","k":["dance","dark skin tone","man","man dancing: dark skin tone"]},{"s":"👯","k":["bunny ear","dancer","partying","people with bunny ears partying"]},{"s":"🕴","k":["business","man","suit","man in business suit levitating"]},{"s":"🗣","k":["face","head","silhouette","speak","speaking","speaking head"]},{"s":"👤","k":["bust","silhouette","bust in silhouette"]},{"s":"","k":["",""]},{"s":"👥","k":["bust","silhouette","busts in silhouette"]},{"s":"","k":["",""]},{"s":"🤺","k":["fencer","fencing","sword","person fencing"]},{"s":"🏇","k":["horse","jockey","racehorse","racing","horse racing"]},{"s":"⛷","k":["ski","snow","skier"]},{"s":"🏂","k":["ski","snow","snowboard","snowboarder"]},{"s":"🏌","k":["ball","golf","person golfing"]},{"s":"🏄","k":["surfing","person surfing"]},{"s":"🏄🏻","k":["light skin tone","surfing","person surfing: light skin tone"]},{"s":"🏄🏼","k":["medium-light skin tone","surfing","person surfing: medium-light skin tone"]},{"s":"🏄🏽","k":["medium skin tone","surfing","person surfing: medium skin tone"]},{"s":"🏄🏾","k":["medium-dark skin tone","surfing","person surfing: medium-dark skin tone"]},{"s":"🏄🏿","k":["dark skin tone","surfing","person surfing: dark skin tone"]},{"s":"🚣","k":["boat","rowboat","person rowing boat"]},{"s":"🚣🏻","k":["boat","light skin tone","rowboat","person rowing boat: light skin tone"]},{"s":"🚣🏼","k":["boat","medium-light skin tone","rowboat","person rowing boat: medium-light skin tone"]},{"s":"🚣🏽","k":["boat","medium skin tone","rowboat","person rowing boat: medium skin tone"]},{"s":"🚣🏾","k":["boat","medium-dark skin tone","rowboat","person rowing boat: medium-dark skin tone"]},{"s":"🚣🏿","k":["boat","dark skin tone","rowboat","person rowing boat: dark skin tone"]},{"s":"🏊","k":["swim","person swimming"]},{"s":"🏊🏻","k":["light skin tone","swim","person swimming: light skin tone"]},{"s":"🏊🏼","k":["medium-light skin tone","swim","person swimming: medium-light skin tone"]},{"s":"","k":["",""]},{"s":"🏊🏽","k":["medium skin tone","swim","person swimming: medium skin tone"]},{"s":"🏊🏾","k":["medium-dark skin tone","swim","person swimming: medium-dark skin tone"]},{"s":"🏊🏿","k":["dark skin tone","swim","person swimming: dark skin tone"]},{"s":"⛹","k":["ball","person bouncing ball"]},{"s":"⛹🏻","k":["ball","light skin tone","person bouncing ball: light skin tone"]},{"s":"⛹🏼","k":["ball","medium-light skin tone","person bouncing ball: medium-light skin tone"]},{"s":"⛹🏽","k":["ball","medium skin tone","person bouncing ball: medium skin tone"]},{"s":"⛹🏾","k":["ball","medium-dark skin tone","person bouncing ball: medium-dark skin tone"]},{"s":"⛹🏿","k":["ball","dark skin tone","person bouncing ball: dark skin tone"]},{"s":"🏋","k":["lifter","weight","person lifting weights"]},{"s":"🏋🏻","k":["lifter","light skin tone","weight","person lifting weights: light skin tone"]},{"s":"🏋🏼","k":["lifter","medium-light skin tone","weight","person lifting weights: medium-light skin tone"]},{"s":"🏋🏽","k":["lifter","medium skin tone","weight","person lifting weights: medium skin tone"]},{"s":"🏋🏾","k":["lifter","medium-dark skin tone","weight","person lifting weights: medium-dark skin tone"]},{"s":"🏋🏿","k":["dark skin tone","lifter","weight","person lifting weights: dark skin tone"]},{"s":"🚴","k":["bicycle","biking","cyclist","person biking"]},{"s":"🚴🏻","k":["bicycle","biking","cyclist","light skin tone","person biking: light skin tone"]},{"s":"🚴🏼","k":["bicycle","biking","cyclist","medium-light skin tone","person biking: medium-light skin tone"]},{"s":"🚴🏽","k":["bicycle","biking","cyclist","medium skin tone","person biking: medium skin tone"]},{"s":"🚴🏾","k":["bicycle","biking","cyclist","medium-dark skin tone","person biking: medium-dark skin tone"]},{"s":"","k":["",""]},{"s":"🚴🏿","k":["bicycle","biking","cyclist","dark skin tone","person biking: dark skin tone"]},{"s":"🚵","k":["bicycle","bicyclist","bike","cyclist","mountain","person mountain biking"]},{"s":"🚵🏻","k":["bicycle","bicyclist","bike","cyclist","light skin tone","mountain","person mountain biking: light skin tone"]},{"s":"🚵🏼","k":["bicycle","bicyclist","bike","cyclist","medium-light skin tone","mountain","person mountain biking: medium-light skin tone"]},{"s":"🚵🏽","k":["bicycle","bicyclist","bike","cyclist","medium skin tone","mountain","person mountain biking: medium skin tone"]},{"s":"🚵🏾","k":["bicycle","bicyclist","bike","cyclist","medium-dark skin tone","mountain","person mountain biking: medium-dark skin tone"]},{"s":"🚵🏿","k":["bicycle","bicyclist","bike","cyclist","dark skin tone","mountain","person mountain biking: dark skin tone"]},{"s":"🏎","k":["car","racing","racing car"]},{"s":"🏍","k":["racing","motorcycle"]},{"s":"🤸","k":["cartwheel","gymnastics","person cartwheeling"]},{"s":"🤸🏻","k":["cartwheel","gymnastics","light skin tone","person cartwheeling: light skin tone"]},{"s":"🤸🏼","k":["cartwheel","gymnastics","medium-light skin tone","person cartwheeling: medium-light skin tone"]},{"s":"🤸🏽","k":["cartwheel","gymnastics","medium skin tone","person cartwheeling: medium skin tone"]},{"s":"🤸🏾","k":["cartwheel","gymnastics","medium-dark skin tone","person cartwheeling: medium-dark skin tone"]},{"s":"🤸🏿","k":["cartwheel","dark skin tone","gymnastics","person cartwheeling: dark skin tone"]},{"s":"🤼","k":["wrestle","wrestler","people wrestling"]},{"s":"🤼🏻","k":["light skin tone","wrestle","wrestler","people wrestling: light skin tone"]},{"s":"🤼🏼","k":["medium-light skin tone","wrestle","wrestler","people wrestling: medium-light skin tone"]},{"s":"🤼🏽","k":["medium skin tone","wrestle","wrestler","people wrestling: medium skin tone"]},{"s":"🤼🏾","k":["medium-dark skin tone","wrestle","wrestler","people wrestling: medium-dark skin tone"]},{"s":"","k":["",""]},{"s":"🤼🏿","k":["dark skin tone","wrestle","wrestler","people wrestling: dark skin tone"]},{"s":"🤽","k":["polo","water","person playing water polo"]},{"s":"🤽🏻","k":["light skin tone","polo","water","person playing water polo: light skin tone"]},{"s":"🤽🏼","k":["medium-light skin tone","polo","water","person playing water polo: medium-light skin tone"]},{"s":"🤽🏽","k":["medium skin tone","polo","water","person playing water polo: medium skin tone"]},{"s":"🤽🏾","k":["medium-dark skin tone","polo","water","person playing water polo: medium-dark skin tone"]},{"s":"🤽🏿","k":["dark skin tone","polo","water","person playing water polo: dark skin tone"]},{"s":"🤾","k":["ball","handball","person playing handball"]},{"s":"🤾🏻","k":["ball","handball","light skin tone","person playing handball: light skin tone"]},{"s":"🤾🏼","k":["ball","handball","medium-light skin tone","person playing handball: medium-light skin tone"]},{"s":"🤾🏽","k":["ball","handball","medium skin tone","person playing handball: medium skin tone"]},{"s":"🤾🏾","k":["ball","handball","medium-dark skin tone","person playing handball: medium-dark skin tone"]},{"s":"🤾🏿","k":["ball","dark skin tone","handball","person playing handball: dark skin tone"]},{"s":"🤹","k":["balance","juggle","multitask","skill","person juggling"]},{"s":"🤹🏻","k":["balance","juggle","light skin tone","multitask","skill","person juggling: light skin tone"]},{"s":"🤹🏼","k":["balance","juggle","medium-light skin tone","multitask","skill","person juggling: medium-light skin tone"]},{"s":"🤹🏽","k":["balance","juggle","medium skin tone","multitask","skill","person juggling: medium skin tone"]},{"s":"🤹🏾","k":["balance","juggle","medium-dark skin tone","multitask","skill","person juggling: medium-dark skin tone"]},{"s":"🤹🏿","k":["balance","dark skin tone","juggle","multitask","skill","person juggling: dark skin tone"]},{"s":"","k":["",""]},{"s":"👫","k":["couple","hand","hold","man","woman","man and woman holding hands"]},{"s":"👬","k":["couple","gemini","hand","hold","man","twins","zodiac","two men holding hands"]},{"s":"👭","k":["couple","hand","hold","woman","two women holding hands"]},{"s":"💏","k":["couple","kiss"]},{"s":"👩‍❤️‍💋‍👨","k":["couple","man","woman","kiss: woman, man"]},{"s":"👨‍❤️‍💋‍👨","k":["couple","man","kiss: man, man"]},{"s":"👩‍❤️‍💋‍👩","k":["couple","woman","kiss: woman, woman"]},{"s":"💑","k":["couple","love","couple with heart"]},{"s":"👩‍❤️‍👨","k":["couple","love","man","woman","couple with heart: woman, man"]},{"s":"👨‍❤️‍👨","k":["couple","love","man","couple with heart: man, man"]},{"s":"👩‍❤️‍👩","k":["couple","love","woman","couple with heart: woman, woman"]},{"s":"👪","k":["family","family"]},{"s":"👨‍👩‍👦","k":["boy","family","man","woman","family: man, woman, boy"]},{"s":"👨‍👩‍👧","k":["family","girl","man","woman","family: man, woman, girl"]},{"s":"👨‍👩‍👧‍👦","k":["boy","family","girl","man","woman","family: man, woman, girl, boy"]},{"s":"👨‍👩‍👦‍👦","k":["boy","family","man","woman","family: man, woman, boy, boy"]},{"s":"👨‍👩‍👧‍👧","k":["family","girl","man","woman","family: man, woman, girl, girl"]},{"s":"👨‍👨‍👦","k":["boy","family","man","family: man, man, boy"]},{"s":"👨‍👨‍👧","k":["family","girl","man","family: man, man, girl"]},{"s":"👨‍👨‍👧‍👦","k":["boy","family","girl","man","family: man, man, girl, boy"]},{"s":"","k":["",""]},{"s":"👨‍👨‍👦‍👦","k":["boy","family","man","family: man, man, boy, boy"]},{"s":"👨‍👨‍👧‍👧","k":["family","girl","man","family: man, man, girl, girl"]},{"s":"👩‍👩‍👦","k":["boy","family","woman","family: woman, woman, boy"]},{"s":"👩‍👩‍👧","k":["family","girl","woman","family: woman, woman, girl"]},{"s":"👩‍👩‍👧‍👦","k":["boy","family","girl","woman","family: woman, woman, girl, boy"]},{"s":"👩‍👩‍👦‍👦","k":["boy","family","woman","family: woman, woman, boy, boy"]},{"s":"👩‍👩‍👧‍👧","k":["family","girl","woman","family: woman, woman, girl, girl"]},{"s":"","k":["",""]},{"s":"🏻","k":["skin tone","type 1–2","light skin tone"]},{"s":"🏼","k":["skin tone","type 3","medium-light skin tone"]},{"s":"🏽","k":["skin tone","type 4","medium skin tone"]},{"s":"🏾","k":["skin tone","type 5","medium-dark skin tone"]},{"s":"🏿","k":["skin tone","type 6","dark skin tone"]},{"s":"","k":["",""]},{"s":"💪","k":["biceps","comic","flex","muscle","flexed biceps"]},{"s":"💪🏻","k":["biceps","comic","flex","light skin tone","muscle","flexed biceps: light skin tone"]},{"s":"💪🏼","k":["biceps","comic","flex","medium-light skin tone","muscle","flexed biceps: medium-light skin tone"]},{"s":"💪🏽","k":["biceps","comic","flex","medium skin tone","muscle","flexed biceps: medium skin tone"]},{"s":"💪🏾","k":["biceps","comic","flex","medium-dark skin tone","muscle","flexed biceps: medium-dark skin tone"]},{"s":"💪🏿","k":["biceps","comic","dark skin tone","flex","muscle","flexed biceps: dark skin tone"]},{"s":"🤳","k":["camera","phone","selfie","selfie"]},{"s":"🤳🏻","k":["camera","light skin tone","phone","selfie","selfie: light skin tone"]},{"s":"🤳🏼","k":["camera","medium-light skin tone","phone","selfie","selfie: medium-light skin tone"]},{"s":"🤳🏽","k":["camera","medium skin tone","phone","selfie","selfie: medium skin tone"]},{"s":"🤳🏾","k":["camera","medium-dark skin tone","phone","selfie","selfie: medium-dark skin tone"]},{"s":"🤳🏿","k":["camera","dark skin tone","phone","selfie","selfie: dark skin tone"]},{"s":"👈","k":["backhand","finger","hand","index","point","backhand index pointing left"]},{"s":"👈🏻","k":["backhand","finger","hand","index","light skin tone","point","backhand index pointing left: light skin tone"]},{"s":"👈🏼","k":["backhand","finger","hand","index","medium-light skin tone","point","backhand index pointing left: medium-light skin tone"]},{"s":"👈🏽","k":["backhand","finger","hand","index","medium skin tone","point","backhand index pointing left: medium skin tone"]},{"s":"👈🏾","k":["backhand","finger","hand","index","medium-dark skin tone","point","backhand index pointing left: medium-dark skin tone"]},{"s":"👈🏿","k":["backhand","dark skin tone","finger","hand","index","point","backhand index pointing left: dark skin tone"]},{"s":"👉","k":["backhand","finger","hand","index","point","backhand index pointing right"]},{"s":"👉🏻","k":["backhand","finger","hand","index","light skin tone","point","backhand index pointing right: light skin tone"]},{"s":"","k":["",""]},{"s":"👉🏼","k":["backhand","finger","hand","index","medium-light skin tone","point","backhand index pointing right: medium-light skin tone"]},{"s":"👉🏽","k":["backhand","finger","hand","index","medium skin tone","point","backhand index pointing right: medium skin tone"]},{"s":"👉🏾","k":["backhand","finger","hand","index","medium-dark skin tone","point","backhand index pointing right: medium-dark skin tone"]},{"s":"👉🏿","k":["backhand","dark skin tone","finger","hand","index","point","backhand index pointing right: dark skin tone"]},{"s":"☝","k":["finger","hand","index","point","up","index pointing up"]},{"s":"☝🏻","k":["finger","hand","index","light skin tone","point","up","index pointing up: light skin tone"]},{"s":"☝🏼","k":["finger","hand","index","medium-light skin tone","point","up","index pointing up: medium-light skin tone"]},{"s":"☝🏽","k":["finger","hand","index","medium skin tone","point","up","index pointing up: medium skin tone"]},{"s":"☝🏾","k":["finger","hand","index","medium-dark skin tone","point","up","index pointing up: medium-dark skin tone"]},{"s":"☝🏿","k":["dark skin tone","finger","hand","index","point","up","index pointing up: dark skin tone"]},{"s":"👆","k":["backhand","finger","hand","index","point","up","backhand index pointing up"]},{"s":"👆🏻","k":["backhand","finger","hand","index","light skin tone","point","up","backhand index pointing up: light skin tone"]},{"s":"👆🏼","k":["backhand","finger","hand","index","medium-light skin tone","point","up","backhand index pointing up: medium-light skin tone"]},{"s":"👆🏽","k":["backhand","finger","hand","index","medium skin tone","point","up","backhand index pointing up: medium skin tone"]},{"s":"👆🏾","k":["backhand","finger","hand","index","medium-dark skin tone","point","up","backhand index pointing up: medium-dark skin tone"]},{"s":"👆🏿","k":["backhand","dark skin tone","finger","hand","index","point","up","backhand index pointing up: dark skin tone"]},{"s":"🖕","k":["finger","hand","middle finger"]},{"s":"🖕🏻","k":["finger","hand","light skin tone","middle finger: light skin tone"]},{"s":"🖕🏼","k":["finger","hand","medium-light skin tone","middle finger: medium-light skin tone"]},{"s":"🖕🏽","k":["finger","hand","medium skin tone","middle finger: medium skin tone"]},{"s":"","k":["",""]},{"s":"🖕🏾","k":["finger","hand","medium-dark skin tone","middle finger: medium-dark skin tone"]},{"s":"🖕🏿","k":["dark skin tone","finger","hand","middle finger: dark skin tone"]},{"s":"👇","k":["backhand","down","finger","hand","index","point","backhand index pointing down"]},{"s":"👇🏻","k":["backhand","down","finger","hand","index","light skin tone","point","backhand index pointing down: light skin tone"]},{"s":"👇🏼","k":["backhand","down","finger","hand","index","medium-light skin tone","point","backhand index pointing down: medium-light skin tone"]},{"s":"👇🏽","k":["backhand","down","finger","hand","index","medium skin tone","point","backhand index pointing down: medium skin tone"]},{"s":"👇🏾","k":["backhand","down","finger","hand","index","medium-dark skin tone","point","backhand index pointing down: medium-dark skin tone"]},{"s":"👇🏿","k":["backhand","dark skin tone","down","finger","hand","index","point","backhand index pointing down: dark skin tone"]},{"s":"✌","k":["hand","v","victory","victory hand"]},{"s":"✌🏻","k":["hand","light skin tone","v","victory","victory hand: light skin tone"]},{"s":"✌🏼","k":["hand","medium-light skin tone","v","victory","victory hand: medium-light skin tone"]},{"s":"✌🏽","k":["hand","medium skin tone","v","victory","victory hand: medium skin tone"]},{"s":"✌🏾","k":["hand","medium-dark skin tone","v","victory","victory hand: medium-dark skin tone"]},{"s":"✌🏿","k":["dark skin tone","hand","v","victory","victory hand: dark skin tone"]},{"s":"🤞","k":["cross","finger","hand","luck","crossed fingers"]},{"s":"🤞🏻","k":["cross","finger","hand","light skin tone","luck","crossed fingers: light skin tone"]},{"s":"🤞🏼","k":["cross","finger","hand","luck","medium-light skin tone","crossed fingers: medium-light skin tone"]},{"s":"🤞🏽","k":["cross","finger","hand","luck","medium skin tone","crossed fingers: medium skin tone"]},{"s":"🤞🏾","k":["cross","finger","hand","luck","medium-dark skin tone","crossed fingers: medium-dark skin tone"]},{"s":"🤞🏿","k":["cross","dark skin tone","finger","hand","luck","crossed fingers: dark skin tone"]},{"s":"","k":["",""]},{"s":"🖖","k":["finger","hand","spock","vulcan","vulcan salute"]},{"s":"🖖🏻","k":["finger","hand","light skin tone","spock","vulcan","vulcan salute: light skin tone"]},{"s":"🖖🏼","k":["finger","hand","medium-light skin tone","spock","vulcan","vulcan salute: medium-light skin tone"]},{"s":"🖖🏽","k":["finger","hand","medium skin tone","spock","vulcan","vulcan salute: medium skin tone"]},{"s":"🖖🏾","k":["finger","hand","medium-dark skin tone","spock","vulcan","vulcan salute: medium-dark skin tone"]},{"s":"🖖🏿","k":["dark skin tone","finger","hand","spock","vulcan","vulcan salute: dark skin tone"]},{"s":"🤘","k":["finger","hand","horns","rock-on","sign of the horns"]},{"s":"🤘🏻","k":["finger","hand","horns","light skin tone","rock-on","sign of the horns: light skin tone"]},{"s":"🤘🏼","k":["finger","hand","horns","medium-light skin tone","rock-on","sign of the horns: medium-light skin tone"]},{"s":"🤘🏽","k":["finger","hand","horns","medium skin tone","rock-on","sign of the horns: medium skin tone"]},{"s":"🤘🏾","k":["finger","hand","horns","medium-dark skin tone","rock-on","sign of the horns: medium-dark skin tone"]},{"s":"🤘🏿","k":["dark skin tone","finger","hand","horns","rock-on","sign of the horns: dark skin tone"]},{"s":"🤙","k":["call","hand","call me hand"]},{"s":"🤙🏻","k":["call","hand","light skin tone","call me hand: light skin tone"]},{"s":"🤙🏼","k":["call","hand","medium-light skin tone","call me hand: medium-light skin tone"]},{"s":"🤙🏽","k":["call","hand","medium skin tone","call me hand: medium skin tone"]},{"s":"🤙🏾","k":["call","hand","medium-dark skin tone","call me hand: medium-dark skin tone"]},{"s":"🤙🏿","k":["call","dark skin tone","hand","call me hand: dark skin tone"]},{"s":"🖐","k":["finger","hand","splayed","raised hand with fingers splayed"]},{"s":"🖐🏻","k":["finger","hand","light skin tone","splayed","raised hand with fingers splayed: light skin tone"]},{"s":"","k":["",""]},{"s":"🖐🏼","k":["finger","hand","medium-light skin tone","splayed","raised hand with fingers splayed: medium-light skin tone"]},{"s":"🖐🏽","k":["finger","hand","medium skin tone","splayed","raised hand with fingers splayed: medium skin tone"]},{"s":"🖐🏾","k":["finger","hand","medium-dark skin tone","splayed","raised hand with fingers splayed: medium-dark skin tone"]},{"s":"🖐🏿","k":["dark skin tone","finger","hand","splayed","raised hand with fingers splayed: dark skin tone"]},{"s":"✋","k":["hand","raised hand"]},{"s":"✋🏻","k":["hand","light skin tone","raised hand: light skin tone"]},{"s":"✋🏼","k":["hand","medium-light skin tone","raised hand: medium-light skin tone"]},{"s":"✋🏽","k":["hand","medium skin tone","raised hand: medium skin tone"]},{"s":"✋🏾","k":["hand","medium-dark skin tone","raised hand: medium-dark skin tone"]},{"s":"✋🏿","k":["dark skin tone","hand","raised hand: dark skin tone"]},{"s":"👌","k":["hand","ok","ok hand"]},{"s":"👌🏻","k":["hand","light skin tone","ok","ok hand: light skin tone"]},{"s":"👌🏼","k":["hand","medium-light skin tone","ok","ok hand: medium-light skin tone"]},{"s":"👌🏽","k":["hand","medium skin tone","ok","ok hand: medium skin tone"]},{"s":"👌🏾","k":["hand","medium-dark skin tone","ok","ok hand: medium-dark skin tone"]},{"s":"👌🏿","k":["dark skin tone","hand","ok","ok hand: dark skin tone"]},{"s":"👍","k":["+1","hand","thumb","up","thumbs up"]},{"s":"👍🏻","k":["+1","hand","light skin tone","thumb","up","thumbs up: light skin tone"]},{"s":"👍🏼","k":["+1","hand","medium-light skin tone","thumb","up","thumbs up: medium-light skin tone"]},{"s":"👍🏽","k":["+1","hand","medium skin tone","thumb","up","thumbs up: medium skin tone"]},{"s":"","k":["",""]},{"s":"👍🏾","k":["+1","hand","medium-dark skin tone","thumb","up","thumbs up: medium-dark skin tone"]},{"s":"👍🏿","k":["+1","dark skin tone","hand","thumb","up","thumbs up: dark skin tone"]},{"s":"👎","k":["-1","down","hand","thumb","thumbs down"]},{"s":"👎🏻","k":["-1","down","hand","light skin tone","thumb","thumbs down: light skin tone"]},{"s":"👎🏼","k":["-1","down","hand","medium-light skin tone","thumb","thumbs down: medium-light skin tone"]},{"s":"👎🏽","k":["-1","down","hand","medium skin tone","thumb","thumbs down: medium skin tone"]},{"s":"👎🏾","k":["-1","down","hand","medium-dark skin tone","thumb","thumbs down: medium-dark skin tone"]},{"s":"👎🏿","k":["-1","dark skin tone","down","hand","thumb","thumbs down: dark skin tone"]},{"s":"✊","k":["clenched","fist","hand","punch","raised fist"]},{"s":"✊🏻","k":["clenched","fist","hand","light skin tone","punch","raised fist: light skin tone"]},{"s":"✊🏼","k":["clenched","fist","hand","medium-light skin tone","punch","raised fist: medium-light skin tone"]},{"s":"✊🏽","k":["clenched","fist","hand","medium skin tone","punch","raised fist: medium skin tone"]},{"s":"✊🏾","k":["clenched","fist","hand","medium-dark skin tone","punch","raised fist: medium-dark skin tone"]},{"s":"✊🏿","k":["clenched","dark skin tone","fist","hand","punch","raised fist: dark skin tone"]},{"s":"👊","k":["clenched","fist","hand","punch","oncoming fist"]},{"s":"👊🏻","k":["clenched","fist","hand","light skin tone","punch","oncoming fist: light skin tone"]},{"s":"👊🏼","k":["clenched","fist","hand","medium-light skin tone","punch","oncoming fist: medium-light skin tone"]},{"s":"👊🏽","k":["clenched","fist","hand","medium skin tone","punch","oncoming fist: medium skin tone"]},{"s":"👊🏾","k":["clenched","fist","hand","medium-dark skin tone","punch","oncoming fist: medium-dark skin tone"]},{"s":"👊🏿","k":["clenched","dark skin tone","fist","hand","punch","oncoming fist: dark skin tone"]},{"s":"","k":["",""]},{"s":"🤛","k":["fist","leftwards","left-facing fist"]},{"s":"🤛🏻","k":["fist","leftwards","light skin tone","left-facing fist: light skin tone"]},{"s":"🤛🏼","k":["fist","leftwards","medium-light skin tone","left-facing fist: medium-light skin tone"]},{"s":"🤛🏽","k":["fist","leftwards","medium skin tone","left-facing fist: medium skin tone"]},{"s":"🤛🏾","k":["fist","leftwards","medium-dark skin tone","left-facing fist: medium-dark skin tone"]},{"s":"🤛🏿","k":["dark skin tone","fist","leftwards","left-facing fist: dark skin tone"]},{"s":"🤜","k":["fist","rightwards","right-facing fist"]},{"s":"🤜🏻","k":["fist","light skin tone","rightwards","right-facing fist: light skin tone"]},{"s":"🤜🏼","k":["fist","medium-light skin tone","rightwards","right-facing fist: medium-light skin tone"]},{"s":"🤜🏽","k":["fist","medium skin tone","rightwards","right-facing fist: medium skin tone"]},{"s":"🤜🏾","k":["fist","medium-dark skin tone","rightwards","right-facing fist: medium-dark skin tone"]},{"s":"🤜🏿","k":["dark skin tone","fist","rightwards","right-facing fist: dark skin tone"]},{"s":"🤚","k":["backhand","raised","raised back of hand"]},{"s":"🤚🏻","k":["backhand","light skin tone","raised","raised back of hand: light skin tone"]},{"s":"🤚🏼","k":["backhand","medium-light skin tone","raised","raised back of hand: medium-light skin tone"]},{"s":"🤚🏽","k":["backhand","medium skin tone","raised","raised back of hand: medium skin tone"]},{"s":"🤚🏾","k":["backhand","medium-dark skin tone","raised","raised back of hand: medium-dark skin tone"]},{"s":"🤚🏿","k":["backhand","dark skin tone","raised","raised back of hand: dark skin tone"]},{"s":"👋","k":["hand","wave","waving","waving hand"]},{"s":"👋🏻","k":["hand","light skin tone","wave","waving","waving hand: light skin tone"]},{"s":"","k":["",""]},{"s":"👋🏼","k":["hand","medium-light skin tone","wave","waving","waving hand: medium-light skin tone"]},{"s":"👋🏽","k":["hand","medium skin tone","wave","waving","waving hand: medium skin tone"]},{"s":"👋🏾","k":["hand","medium-dark skin tone","wave","waving","waving hand: medium-dark skin tone"]},{"s":"👋🏿","k":["dark skin tone","hand","wave","waving","waving hand: dark skin tone"]},{"s":"👏","k":["clap","hand","clapping hands"]},{"s":"👏🏻","k":["clap","hand","light skin tone","clapping hands: light skin tone"]},{"s":"👏🏼","k":["clap","hand","medium-light skin tone","clapping hands: medium-light skin tone"]},{"s":"👏🏽","k":["clap","hand","medium skin tone","clapping hands: medium skin tone"]},{"s":"👏🏾","k":["clap","hand","medium-dark skin tone","clapping hands: medium-dark skin tone"]},{"s":"👏🏿","k":["clap","dark skin tone","hand","clapping hands: dark skin tone"]},{"s":"✍","k":["hand","write","writing hand"]},{"s":"✍🏻","k":["hand","light skin tone","write","writing hand: light skin tone"]},{"s":"✍🏼","k":["hand","medium-light skin tone","write","writing hand: medium-light skin tone"]},{"s":"✍🏽","k":["hand","medium skin tone","write","writing hand: medium skin tone"]},{"s":"✍🏾","k":["hand","medium-dark skin tone","write","writing hand: medium-dark skin tone"]},{"s":"✍🏿","k":["dark skin tone","hand","write","writing hand: dark skin tone"]},{"s":"👐","k":["hand","open","open hands"]},{"s":"👐🏻","k":["hand","light skin tone","open","open hands: light skin tone"]},{"s":"👐🏼","k":["hand","medium-light skin tone","open","open hands: medium-light skin tone"]},{"s":"👐🏽","k":["hand","medium skin tone","open","open hands: medium skin tone"]},{"s":"","k":["",""]},{"s":"👐🏾","k":["hand","medium-dark skin tone","open","open hands: medium-dark skin tone"]},{"s":"👐🏿","k":["dark skin tone","hand","open","open hands: dark skin tone"]},{"s":"🙌","k":["celebration","gesture","hand","hooray","raised","raising hands"]},{"s":"🙌🏻","k":["celebration","gesture","hand","hooray","light skin tone","raised","raising hands: light skin tone"]},{"s":"🙌🏼","k":["celebration","gesture","hand","hooray","medium-light skin tone","raised","raising hands: medium-light skin tone"]},{"s":"🙌🏽","k":["celebration","gesture","hand","hooray","medium skin tone","raised","raising hands: medium skin tone"]},{"s":"🙌🏾","k":["celebration","gesture","hand","hooray","medium-dark skin tone","raised","raising hands: medium-dark skin tone"]},{"s":"🙌🏿","k":["celebration","dark skin tone","gesture","hand","hooray","raised","raising hands: dark skin tone"]},{"s":"🙏","k":["ask","bow","folded","gesture","hand","please","pray","thanks","folded hands"]},{"s":"🙏🏻","k":["ask","bow","folded","gesture","hand","light skin tone","please","pray","thanks","folded hands: light skin tone"]},{"s":"🙏🏼","k":["ask","bow","folded","gesture","hand","medium-light skin tone","please","pray","thanks","folded hands: medium-light skin tone"]},{"s":"🙏🏽","k":["ask","bow","folded","gesture","hand","medium skin tone","please","pray","thanks","folded hands: medium skin tone"]},{"s":"🙏🏾","k":["ask","bow","folded","gesture","hand","medium-dark skin tone","please","pray","thanks","folded hands: medium-dark skin tone"]},{"s":"🙏🏿","k":["ask","bow","dark skin tone","folded","gesture","hand","please","pray","thanks","folded hands: dark skin tone"]},{"s":"🤝","k":["agreement","hand","handshake","meeting","shake","handshake"]},{"s":"🤝🏻","k":["agreement","hand","handshake","light skin tone","meeting","shake","handshake: light skin tone"]},{"s":"🤝🏼","k":["agreement","hand","handshake","medium-light skin tone","meeting","shake","handshake: medium-light skin tone"]},{"s":"🤝🏽","k":["agreement","hand","handshake","medium skin tone","meeting","shake","handshake: medium skin tone"]},{"s":"🤝🏾","k":["agreement","hand","handshake","medium-dark skin tone","meeting","shake","handshake: medium-dark skin tone"]},{"s":"🤝🏿","k":["agreement","dark skin tone","hand","handshake","meeting","shake","handshake: dark skin tone"]},{"s":"","k":["",""]},{"s":"💅","k":["care","cosmetics","manicure","nail","polish","nail polish"]},{"s":"💅🏻","k":["care","cosmetics","light skin tone","manicure","nail","polish","nail polish: light skin tone"]},{"s":"💅🏼","k":["care","cosmetics","manicure","medium-light skin tone","nail","polish","nail polish: medium-light skin tone"]},{"s":"💅🏽","k":["care","cosmetics","manicure","medium skin tone","nail","polish","nail polish: medium skin tone"]},{"s":"💅🏾","k":["care","cosmetics","manicure","medium-dark skin tone","nail","polish","nail polish: medium-dark skin tone"]},{"s":"💅🏿","k":["care","cosmetics","dark skin tone","manicure","nail","polish","nail polish: dark skin tone"]},{"s":"👂","k":["body","ear"]},{"s":"👂🏻","k":["body","light skin tone","ear: light skin tone"]},{"s":"👂🏼","k":["body","medium-light skin tone","ear: medium-light skin tone"]},{"s":"👂🏽","k":["body","medium skin tone","ear: medium skin tone"]},{"s":"👂🏾","k":["body","medium-dark skin tone","ear: medium-dark skin tone"]},{"s":"👂🏿","k":["body","dark skin tone","ear: dark skin tone"]},{"s":"👃","k":["body","nose"]},{"s":"👃🏻","k":["body","light skin tone","nose: light skin tone"]},{"s":"👃🏼","k":["body","medium-light skin tone","nose: medium-light skin tone"]},{"s":"👃🏽","k":["body","medium skin tone","nose: medium skin tone"]},{"s":"👃🏾","k":["body","medium-dark skin tone","nose: medium-dark skin tone"]},{"s":"👃🏿","k":["body","dark skin tone","nose: dark skin tone"]},{"s":"👣","k":["clothing","footprint","print","footprints"]},{"s":"👀","k":["eye","face","eyes"]},{"s":"","k":["",""]},{"s":"👁","k":["body","eye"]},{"s":"👁‍🗨","k":["eye","speech bubble","witness","eye in speech bubble"]},{"s":"👅","k":["body","tongue"]},{"s":"👄","k":["lips","mouth"]},{"s":"","k":["",""]},{"s":"💋","k":["kiss","lips","kiss mark"]},{"s":"💘","k":["arrow","cupid","heart with arrow"]},{"s":"❤","k":["heart","red heart"]},{"s":"💓","k":["beating","heartbeat","pulsating","beating heart"]},{"s":"💔","k":["break","broken","broken heart"]},{"s":"💕","k":["love","two hearts"]},{"s":"💖","k":["excited","sparkle","sparkling heart"]},{"s":"💗","k":["excited","growing","nervous","pulse","growing heart"]},{"s":"💙","k":["blue","blue heart"]},{"s":"💚","k":["green","green heart"]},{"s":"💛","k":["yellow","yellow heart"]},{"s":"💜","k":["purple","purple heart"]},{"s":"🖤","k":["black","evil","wicked","black heart"]},{"s":"💝","k":["ribbon","valentine","heart with ribbon"]},{"s":"💞","k":["revolving","revolving hearts"]},{"s":"💟","k":["heart","heart decoration"]},{"s":"❣","k":["exclamation","mark","punctuation","heavy heart exclamation"]},{"s":"💌","k":["heart","letter","love","mail","love letter"]},{"s":"💤","k":["comic","sleep","zzz"]},{"s":"💢","k":["angry","comic","mad","anger symbol"]},{"s":"","k":["",""]},{"s":"💣","k":["comic","bomb"]},{"s":"💥","k":["boom","comic","collision"]},{"s":"💦","k":["comic","splashing","sweat","sweat droplets"]},{"s":"💨","k":["comic","dash","running","dashing away"]},{"s":"💫","k":["comic","star","dizzy"]},{"s":"💬","k":["balloon","bubble","comic","dialog","speech","speech balloon"]},{"s":"🗨","k":["dialog","speech","left speech bubble"]},{"s":"🗯","k":["angry","balloon","bubble","mad","right anger bubble"]},{"s":"💭","k":["balloon","bubble","comic","thought","thought balloon"]},{"s":"🕳","k":["hole","hole"]},{"s":"","k":["",""]},{"s":"👓","k":["clothing","eye","eyeglasses","eyewear","glasses"]},{"s":"🕶","k":["dark","eye","eyewear","glasses","sunglasses"]},{"s":"👔","k":["clothing","necktie"]},{"s":"👕","k":["clothing","shirt","tshirt","t-shirt"]},{"s":"👖","k":["clothing","pants","trousers","jeans"]},{"s":"👗","k":["clothing","dress"]},{"s":"👘","k":["clothing","kimono"]},{"s":"👙","k":["clothing","swim","bikini"]},{"s":"👚","k":["clothing","woman","woman’s clothes"]},{"s":"👛","k":["clothing","coin","purse"]},{"s":"👜","k":["bag","clothing","purse","handbag"]},{"s":"👝","k":["bag","clothing","pouch","clutch bag"]},{"s":"🛍","k":["bag","hotel","shopping","shopping bags"]},{"s":"🎒","k":["bag","satchel","school","school backpack"]},{"s":"👞","k":["clothing","man","shoe","man’s shoe"]},{"s":"👟","k":["athletic","clothing","shoe","sneaker","running shoe"]},{"s":"👠","k":["clothing","heel","shoe","woman","high-heeled shoe"]},{"s":"👡","k":["clothing","sandal","shoe","woman","woman’s sandal"]},{"s":"👢","k":["boot","clothing","shoe","woman","woman’s boot"]},{"s":"👑","k":["clothing","king","queen","crown"]},{"s":"","k":["",""]},{"s":"👒","k":["clothing","hat","woman","woman’s hat"]},{"s":"🎩","k":["clothing","hat","top","tophat","top hat"]},{"s":"🎓","k":["cap","celebration","clothing","graduation","hat","graduation cap"]},{"s":"⛑","k":["aid","cross","face","hat","helmet","rescue worker’s helmet"]},{"s":"📿","k":["beads","clothing","necklace","prayer","religion","prayer beads"]},{"s":"💄","k":["cosmetics","makeup","lipstick"]},{"s":"💍","k":["diamond","ring"]},{"s":"💎","k":["diamond","gem","jewel","gem stone"]},{"s":"","k":["",""]},{"s":"🐵","k":["face","monkey","monkey face"]},{"s":"🐒","k":["monkey","monkey"]},{"s":"🦍","k":["gorilla","gorilla"]},{"s":"🐶","k":["dog","face","pet","dog face"]},{"s":"🐕","k":["pet","dog"]},{"s":"🐩","k":["dog","poodle"]},{"s":"🐺","k":["face","wolf","wolf face"]},{"s":"🦊","k":["face","fox","fox face"]},{"s":"🐱","k":["cat","face","pet","cat face"]},{"s":"🐈","k":["pet","cat"]},{"s":"🦁","k":["face","leo","lion","zodiac","lion face"]},{"s":"🐯","k":["face","tiger","tiger face"]},{"s":"🐅","k":["tiger","tiger"]},{"s":"🐆","k":["leopard","leopard"]},{"s":"🐴","k":["face","horse","horse face"]},{"s":"🐎","k":["equestrian","racehorse","racing","horse"]},{"s":"🦌","k":["deer","deer"]},{"s":"🦄","k":["face","unicorn","unicorn face"]},{"s":"🐮","k":["cow","face","cow face"]},{"s":"🐂","k":["bull","taurus","zodiac","ox"]},{"s":"","k":["",""]},{"s":"🐃","k":["buffalo","water","water buffalo"]},{"s":"🐄","k":["cow","cow"]},{"s":"🐷","k":["face","pig","pig face"]},{"s":"🐖","k":["sow","pig"]},{"s":"🐗","k":["pig","boar"]},{"s":"🐽","k":["face","nose","pig","pig nose"]},{"s":"🐏","k":["aries","sheep","zodiac","ram"]},{"s":"🐑","k":["ewe","sheep"]},{"s":"🐐","k":["capricorn","zodiac","goat"]},{"s":"🐪","k":["dromedary","hump","camel"]},{"s":"🐫","k":["bactrian","camel","hump","two-hump camel"]},{"s":"🐘","k":["elephant","elephant"]},{"s":"🦏","k":["rhinoceros","rhinoceros"]},{"s":"🐭","k":["face","mouse","mouse face"]},{"s":"🐁","k":["mouse","mouse"]},{"s":"🐀","k":["rat","rat"]},{"s":"🐹","k":["face","hamster","pet","hamster face"]},{"s":"🐰","k":["bunny","face","pet","rabbit","rabbit face"]},{"s":"🐇","k":["bunny","pet","rabbit"]},{"s":"🐿","k":["chipmunk","chipmunk"]},{"s":"","k":["",""]},{"s":"🦇","k":["bat","vampire","bat"]},{"s":"🐻","k":["bear","face","bear face"]},{"s":"🐨","k":["bear","koala"]},{"s":"🐼","k":["face","panda","panda face"]},{"s":"🐾","k":["feet","paw","print","paw prints"]},{"s":"","k":["",""]},{"s":"🦃","k":["turkey","turkey"]},{"s":"🐔","k":["chicken","chicken"]},{"s":"🐓","k":["rooster","rooster"]},{"s":"🐣","k":["baby","chick","hatching","hatching chick"]},{"s":"🐤","k":["baby","chick","baby chick"]},{"s":"🐥","k":["baby","chick","front-facing baby chick"]},{"s":"🐦","k":["bird","bird"]},{"s":"🐧","k":["penguin","penguin"]},{"s":"🕊","k":["bird","fly","peace","dove"]},{"s":"🦅","k":["bird","eagle","eagle"]},{"s":"🦆","k":["bird","duck","duck"]},{"s":"🦉","k":["bird","owl","wise","owl"]},{"s":"","k":["",""]},{"s":"🐸","k":["face","frog","frog face"]},{"s":"","k":["",""]},{"s":"🐊","k":["crocodile","crocodile"]},{"s":"🐢","k":["terrapin","tortoise","turtle","turtle"]},{"s":"🦎","k":["lizard","reptile","lizard"]},{"s":"🐍","k":["bearer","ophiuchus","serpent","zodiac","snake"]},{"s":"🐲","k":["dragon","face","fairy tale","dragon face"]},{"s":"🐉","k":["fairy tale","dragon"]},{"s":"","k":["",""]},{"s":"🐳","k":["face","spouting","whale","spouting whale"]},{"s":"🐋","k":["whale","whale"]},{"s":"🐬","k":["flipper","dolphin"]},{"s":"🐟","k":["pisces","zodiac","fish"]},{"s":"🐠","k":["fish","tropical","tropical fish"]},{"s":"🐡","k":["fish","blowfish"]},{"s":"🦈","k":["fish","shark","shark"]},{"s":"🐙","k":["octopus","octopus"]},{"s":"🐚","k":["shell","spiral","spiral shell"]},{"s":"🦀","k":["cancer","zodiac","crab"]},{"s":"🦐","k":["food","shellfish","shrimp","small","shrimp"]},{"s":"🦑","k":["food","molusc","squid","squid"]},{"s":"","k":["",""]},{"s":"🦋","k":["butterfly","insect","pretty","butterfly"]},{"s":"🐌","k":["snail","snail"]},{"s":"🐛","k":["insect","bug"]},{"s":"🐜","k":["insect","ant"]},{"s":"🐝","k":["bee","insect","honeybee"]},{"s":"🐞","k":["beetle","insect","ladybird","ladybug","lady beetle"]},{"s":"🕷","k":["insect","spider"]},{"s":"🕸","k":["spider","web","spider web"]},{"s":"🦂","k":["scorpio","scorpius","zodiac","scorpion"]},{"s":"","k":["",""]},{"s":"💐","k":["flower","bouquet"]},{"s":"🌸","k":["blossom","cherry","flower","cherry blossom"]},{"s":"💮","k":["flower","white flower"]},{"s":"🏵","k":["plant","rosette"]},{"s":"🌹","k":["flower","rose"]},{"s":"🥀","k":["flower","wilted","wilted flower"]},{"s":"🌺","k":["flower","hibiscus"]},{"s":"🌻","k":["flower","sun","sunflower"]},{"s":"🌼","k":["flower","blossom"]},{"s":"🌷","k":["flower","tulip"]},{"s":"","k":["",""]},{"s":"🌱","k":["young","seedling"]},{"s":"🌲","k":["tree","evergreen tree"]},{"s":"🌳","k":["deciduous","shedding","tree","deciduous tree"]},{"s":"🌴","k":["palm","tree","palm tree"]},{"s":"🌵","k":["plant","cactus"]},{"s":"🌾","k":["ear","grain","rice","sheaf of rice"]},{"s":"🌿","k":["leaf","herb"]},{"s":"☘","k":["plant","shamrock"]},{"s":"🍀","k":["4","clover","four","leaf","four leaf clover"]},{"s":"🍁","k":["falling","leaf","maple","maple leaf"]},{"s":"🍂","k":["falling","leaf","fallen leaf"]},{"s":"🍃","k":["blow","flutter","leaf","wind","leaf fluttering in wind"]},{"s":"","k":["",""]},{"s":"🍇","k":["fruit","grape","grapes"]},{"s":"🍈","k":["fruit","melon"]},{"s":"🍉","k":["fruit","watermelon"]},{"s":"🍊","k":["fruit","orange","tangerine"]},{"s":"🍋","k":["citrus","fruit","lemon"]},{"s":"🍌","k":["fruit","banana"]},{"s":"🍍","k":["fruit","pineapple"]},{"s":"🍎","k":["apple","fruit","red","red apple"]},{"s":"🍏","k":["apple","fruit","green","green apple"]},{"s":"🍐","k":["fruit","pear"]},{"s":"🍑","k":["fruit","peach"]},{"s":"🍒","k":["cherry","fruit","cherries"]},{"s":"🍓","k":["berry","fruit","strawberry"]},{"s":"🥝","k":["food","fruit","kiwi","kiwi fruit"]},{"s":"🍅","k":["fruit","vegetable","tomato"]},{"s":"","k":["",""]},{"s":"🥑","k":["avocado","food","fruit","avocado"]},{"s":"🍆","k":["aubergine","vegetable","eggplant"]},{"s":"🥔","k":["food","potato","vegetable","potato"]},{"s":"🥕","k":["carrot","food","vegetable","carrot"]},{"s":"🌽","k":["corn","ear","maize","maze","ear of corn"]},{"s":"🌶","k":["hot","pepper","hot pepper"]},{"s":"🥒","k":["cucumber","food","pickle","vegetable","cucumber"]},{"s":"🍄","k":["toadstool","mushroom"]},{"s":"🥜","k":["food","nut","peanut","vegetable","peanuts"]},{"s":"🌰","k":["plant","chestnut"]},{"s":"","k":["",""]},{"s":"🍞","k":["loaf","bread"]},{"s":"🥐","k":["bread","crescent roll","croissant","food","french","croissant"]},{"s":"🥖","k":["baguette","bread","food","french","baguette bread"]},{"s":"🥞","k":["crêpe","food","hotcake","pancake","pancakes"]},{"s":"🧀","k":["cheese","cheese wedge"]},{"s":"🍖","k":["bone","meat","meat on bone"]},{"s":"🍗","k":["bone","chicken","leg","poultry","poultry leg"]},{"s":"🥓","k":["bacon","food","meat","bacon"]},{"s":"🍔","k":["burger","hamburger"]},{"s":"🍟","k":["french","fries","french fries"]},{"s":"🍕","k":["cheese","slice","pizza"]},{"s":"🌭","k":["frankfurter","hotdog","sausage","hot dog"]},{"s":"🌮","k":["mexican","taco"]},{"s":"🌯","k":["mexican","wrap","burrito"]},{"s":"🥙","k":["falafel","flatbread","food","gyro","kebab","stuffed","stuffed flatbread"]},{"s":"🥚","k":["egg","food","egg"]},{"s":"🍳","k":["egg","frying","pan","cooking"]},{"s":"🥘","k":["casserole","food","paella","pan","shallow","shallow pan of food"]},{"s":"🍲","k":["pot","stew","pot of food"]},{"s":"🥗","k":["food","green","salad","green salad"]},{"s":"","k":["",""]},{"s":"🍿","k":["popcorn","popcorn"]},{"s":"","k":["",""]},{"s":"🍱","k":["bento","box","bento box"]},{"s":"🍘","k":["cracker","rice","rice cracker"]},{"s":"🍙","k":["ball","japanese","rice","rice ball"]},{"s":"🍚","k":["cooked","rice","cooked rice"]},{"s":"🍛","k":["curry","rice","curry rice"]},{"s":"🍜","k":["bowl","noodle","ramen","steaming","steaming bowl"]},{"s":"🍝","k":["pasta","spaghetti"]},{"s":"🍠","k":["potato","roasted","sweet","roasted sweet potato"]},{"s":"🍢","k":["kebab","seafood","skewer","stick","oden"]},{"s":"🍣","k":["sushi","sushi"]},{"s":"🍤","k":["fried","prawn","shrimp","tempura","fried shrimp"]},{"s":"🍥","k":["cake","fish","pastry","swirl","fish cake with swirl"]},{"s":"🍡","k":["dessert","japanese","skewer","stick","sweet","dango"]},{"s":"","k":["",""]},{"s":"🍦","k":["cream","dessert","ice","icecream","soft","sweet","soft ice cream"]},{"s":"🍧","k":["dessert","ice","shaved","sweet","shaved ice"]},{"s":"🍨","k":["cream","dessert","ice","sweet","ice cream"]},{"s":"🍩","k":["dessert","donut","sweet","doughnut"]},{"s":"🍪","k":["dessert","sweet","cookie"]},{"s":"🎂","k":["birthday","cake","celebration","dessert","pastry","sweet","birthday cake"]},{"s":"🍰","k":["cake","dessert","pastry","slice","sweet","shortcake"]},{"s":"🍫","k":["bar","chocolate","dessert","sweet","chocolate bar"]},{"s":"🍬","k":["dessert","sweet","candy"]},{"s":"🍭","k":["candy","dessert","sweet","lollipop"]},{"s":"🍮","k":["dessert","pudding","sweet","custard"]},{"s":"🍯","k":["honey","honeypot","pot","sweet","honey pot"]},{"s":"","k":["",""]},{"s":"🍼","k":["baby","bottle","drink","milk","baby bottle"]},{"s":"🥛","k":["drink","glass","milk","glass of milk"]},{"s":"☕","k":["beverage","coffee","drink","hot","steaming","tea","hot beverage"]},{"s":"🍵","k":["beverage","cup","drink","tea","teacup","teacup without handle"]},{"s":"🍶","k":["bar","beverage","bottle","cup","drink","sake"]},{"s":"🍾","k":["bar","bottle","cork","drink","popping","bottle with popping cork"]},{"s":"🍷","k":["bar","beverage","drink","glass","wine","wine glass"]},{"s":"🍸","k":["bar","cocktail","drink","glass","cocktail glass"]},{"s":"🍹","k":["bar","drink","tropical","tropical drink"]},{"s":"🍺","k":["bar","beer","drink","mug","beer mug"]},{"s":"🍻","k":["bar","beer","clink","drink","mug","clinking beer mugs"]},{"s":"🥂","k":["celebrate","clink","drink","glass","clinking glasses"]},{"s":"🥃","k":["glass","liquor","shot","tumbler","whisky","tumbler glass"]},{"s":"","k":["",""]},{"s":"🍽","k":["cooking","fork","knife","plate","fork and knife with plate"]},{"s":"🍴","k":["cooking","fork","knife","fork and knife"]},{"s":"🥄","k":["spoon","tableware","spoon"]},{"s":"🔪","k":["cooking","hocho","knife","tool","weapon","kitchen knife"]},{"s":"🏺","k":["aquarius","cooking","drink","jug","tool","weapon","zodiac","amphora"]},{"s":"","k":["",""]},{"s":"🌍","k":["africa","earth","europe","globe","world","globe showing europe-africa"]},{"s":"🌎","k":["americas","earth","globe","world","globe showing americas"]},{"s":"🌏","k":["asia","australia","earth","globe","world","globe showing asia-australia"]},{"s":"🌐","k":["earth","globe","meridians","world","globe with meridians"]},{"s":"🗺","k":["map","world","world map"]},{"s":"🗾","k":["japan","map","map of japan"]},{"s":"","k":["",""]},{"s":"🏔","k":["cold","mountain","snow","snow-capped mountain"]},{"s":"⛰","k":["mountain","mountain"]},{"s":"🌋","k":["eruption","mountain","volcano"]},{"s":"🗻","k":["fuji","mountain","mount fuji"]},{"s":"🏕","k":["camping","camping"]},{"s":"🏖","k":["beach","umbrella","beach with umbrella"]},{"s":"🏜","k":["desert","desert"]},{"s":"🏝","k":["desert","island","desert island"]},{"s":"🏞","k":["park","national park"]},{"s":"","k":["",""]},{"s":"🏟","k":["stadium","stadium"]},{"s":"🏛","k":["classical","classical building"]},{"s":"🏗","k":["construction","building construction"]},{"s":"🏘","k":["house","house"]},{"s":"🏙","k":["city","cityscape"]},{"s":"🏚","k":["derelict","house","derelict house"]},{"s":"🏠","k":["home","house","house"]},{"s":"🏡","k":["garden","home","house","house with garden"]},{"s":"🏢","k":["building","office building"]},{"s":"🏣","k":["japanese","post","japanese post office"]},{"s":"🏤","k":["european","post","post office"]},{"s":"🏥","k":["doctor","medicine","hospital"]},{"s":"🏦","k":["building","bank"]},{"s":"🏨","k":["building","hotel"]},{"s":"🏩","k":["hotel","love","love hotel"]},{"s":"🏪","k":["convenience","store","convenience store"]},{"s":"🏫","k":["building","school"]},{"s":"🏬","k":["department","store","department store"]},{"s":"🏭","k":["building","factory"]},{"s":"🏯","k":["castle","japanese","japanese castle"]},{"s":"","k":["",""]},{"s":"🏰","k":["european","castle"]},{"s":"💒","k":["chapel","romance","wedding"]},{"s":"🗼","k":["tokyo","tower","tokyo tower"]},{"s":"🗽","k":["liberty","statue","statue of liberty"]},{"s":"","k":["",""]},{"s":"⛪","k":["christian","cross","religion","church"]},{"s":"🕌","k":["islam","muslim","religion","mosque"]},{"s":"🕍","k":["jew","jewish","religion","temple","synagogue"]},{"s":"⛩","k":["religion","shinto","shrine","shinto shrine"]},{"s":"🕋","k":["islam","muslim","religion","kaaba"]},{"s":"","k":["",""]},{"s":"⛲","k":["fountain","fountain"]},{"s":"⛺","k":["camping","tent"]},{"s":"🌁","k":["fog","foggy"]},{"s":"🌃","k":["night","star","night with stars"]},{"s":"🌄","k":["morning","mountain","sun","sunrise","sunrise over mountains"]},{"s":"🌅","k":["morning","sun","sunrise"]},{"s":"🌆","k":["city","dusk","evening","landscape","sun","sunset","cityscape at dusk"]},{"s":"🌇","k":["dusk","sun","sunset"]},{"s":"🌉","k":["bridge","night","bridge at night"]},{"s":"♨","k":["hot","hotsprings","springs","steaming","hot springs"]},{"s":"🌌","k":["space","milky way"]},{"s":"🎠","k":["carousel","horse","carousel horse"]},{"s":"🎡","k":["amusement park","ferris","wheel","ferris wheel"]},{"s":"🎢","k":["amusement park","coaster","roller","roller coaster"]},{"s":"💈","k":["barber","haircut","pole","barber pole"]},{"s":"🎪","k":["circus","tent","circus tent"]},{"s":"🎭","k":["art","mask","performing","theater","theatre","performing arts"]},{"s":"🖼","k":["art","frame","museum","painting","picture","framed picture"]},{"s":"🎨","k":["art","museum","painting","palette","artist palette"]},{"s":"🎰","k":["game","slot","slot machine"]},{"s":"","k":["",""]},{"s":"🚂","k":["engine","railway","steam","train","locomotive"]},{"s":"🚃","k":["car","electric","railway","train","tram","trolleybus","railway car"]},{"s":"🚄","k":["railway","shinkansen","speed","train","high-speed train"]},{"s":"🚅","k":["bullet","railway","shinkansen","speed","train","high-speed train with bullet nose"]},{"s":"🚆","k":["railway","train"]},{"s":"🚇","k":["subway","metro"]},{"s":"🚈","k":["railway","light rail"]},{"s":"🚉","k":["railway","train","station"]},{"s":"🚊","k":["trolleybus","tram"]},{"s":"🚝","k":["vehicle","monorail"]},{"s":"🚞","k":["car","mountain","railway","mountain railway"]},{"s":"🚋","k":["car","tram","trolleybus","tram car"]},{"s":"🚌","k":["vehicle","bus"]},{"s":"🚍","k":["bus","oncoming","oncoming bus"]},{"s":"🚎","k":["bus","tram","trolley","trolleybus"]},{"s":"🚐","k":["bus","minibus"]},{"s":"🚑","k":["vehicle","ambulance"]},{"s":"🚒","k":["engine","fire","truck","fire engine"]},{"s":"🚓","k":["car","patrol","police","police car"]},{"s":"🚔","k":["car","oncoming","police","oncoming police car"]},{"s":"","k":["",""]},{"s":"🚕","k":["vehicle","taxi"]},{"s":"🚖","k":["oncoming","taxi","oncoming taxi"]},{"s":"🚗","k":["car","automobile"]},{"s":"🚘","k":["automobile","car","oncoming","oncoming automobile"]},{"s":"🚙","k":["recreational","sport utility","sport utility vehicle"]},{"s":"🚚","k":["delivery","truck","delivery truck"]},{"s":"🚛","k":["lorry","semi","truck","articulated lorry"]},{"s":"🚜","k":["vehicle","tractor"]},{"s":"🚲","k":["bike","bicycle"]},{"s":"🛴","k":["kick","scooter","kick scooter"]},{"s":"🛵","k":["motor","scooter","motor scooter"]},{"s":"🚏","k":["bus","busstop","stop","bus stop"]},{"s":"🛣","k":["highway","road","motorway"]},{"s":"🛤","k":["railway","train","railway track"]},{"s":"⛽","k":["fuel","fuelpump","gas","pump","station","fuel pump"]},{"s":"🚨","k":["beacon","car","light","police","revolving","police car light"]},{"s":"🚥","k":["light","signal","traffic","horizontal traffic light"]},{"s":"🚦","k":["light","signal","traffic","vertical traffic light"]},{"s":"🚧","k":["barrier","construction"]},{"s":"🛑","k":["octagonal","sign","stop","stop sign"]},{"s":"","k":["",""]},{"s":"⚓","k":["ship","tool","anchor"]},{"s":"⛵","k":["boat","resort","sea","yacht","sailboat"]},{"s":"🛶","k":["boat","canoe","canoe"]},{"s":"🚤","k":["boat","speedboat"]},{"s":"🛳","k":["passenger","ship","passenger ship"]},{"s":"⛴","k":["boat","passenger","ferry"]},{"s":"🛥","k":["boat","motorboat","motor boat"]},{"s":"🚢","k":["boat","passenger","ship"]},{"s":"","k":["",""]},{"s":"✈","k":["aeroplane","airplane","airplane"]},{"s":"🛩","k":["aeroplane","airplane","small airplane"]},{"s":"🛫","k":["aeroplane","airplane","check-in","departure","departures","airplane departure"]},{"s":"🛬","k":["aeroplane","airplane","arrivals","arriving","landing","airplane arrival"]},{"s":"💺","k":["chair","seat"]},{"s":"🚁","k":["vehicle","helicopter"]},{"s":"🚟","k":["railway","suspension","suspension railway"]},{"s":"🚠","k":["cable","gondola","mountain","mountain cableway"]},{"s":"🚡","k":["aerial","cable","car","gondola","tramway","aerial tramway"]},{"s":"🚀","k":["space","rocket"]},{"s":"🛰","k":["space","satellite"]},{"s":"","k":["",""]},{"s":"🛎","k":["bell","bellhop","hotel","bellhop bell"]},{"s":"🚪","k":["door","door"]},{"s":"🛌","k":["hotel","sleep","person in bed"]},{"s":"🛏","k":["hotel","sleep","bed"]},{"s":"🛋","k":["couch","hotel","lamp","couch and lamp"]},{"s":"🚽","k":["toilet","toilet"]},{"s":"🚿","k":["water","shower"]},{"s":"🛀","k":["bath","bathtub","person taking bath"]},{"s":"🛀🏻","k":["bath","bathtub","light skin tone","person taking bath: light skin tone"]},{"s":"🛀🏼","k":["bath","bathtub","medium-light skin tone","person taking bath: medium-light skin tone"]},{"s":"🛀🏽","k":["bath","bathtub","medium skin tone","person taking bath: medium skin tone"]},{"s":"🛀🏾","k":["bath","bathtub","medium-dark skin tone","person taking bath: medium-dark skin tone"]},{"s":"🛀🏿","k":["bath","bathtub","dark skin tone","person taking bath: dark skin tone"]},{"s":"🛁","k":["bath","bathtub"]},{"s":"","k":["",""]},{"s":"⌛","k":["sand","timer","hourglass"]},{"s":"⏳","k":["hourglass","sand","timer","hourglass with flowing sand"]},{"s":"⌚","k":["clock","watch"]},{"s":"⏰","k":["alarm","clock","alarm clock"]},{"s":"⏱","k":["clock","stopwatch"]},{"s":"⏲","k":["clock","timer","timer clock"]},{"s":"🕰","k":["clock","mantelpiece clock"]},{"s":"🕛","k":["00","12","12:00","clock","o’clock","twelve","twelve o’clock"]},{"s":"🕧","k":["12","12:30","30","clock","thirty","twelve","twelve-thirty"]},{"s":"🕐","k":["00","1","1:00","clock","o’clock","one","one o’clock"]},{"s":"🕜","k":["1","1:30","30","clock","one","thirty","one-thirty"]},{"s":"🕑","k":["00","2","2:00","clock","o’clock","two","two o’clock"]},{"s":"🕝","k":["2","2:30","30","clock","thirty","two","two-thirty"]},{"s":"🕒","k":["00","3","3:00","clock","o’clock","three","three o’clock"]},{"s":"🕞","k":["3","3:30","30","clock","thirty","three","three-thirty"]},{"s":"🕓","k":["00","4","4:00","clock","four","o’clock","four o’clock"]},{"s":"🕟","k":["30","4","4:30","clock","four","thirty","four-thirty"]},{"s":"🕔","k":["00","5","5:00","clock","five","o’clock","five o’clock"]},{"s":"🕠","k":["30","5","5:30","clock","five","thirty","five-thirty"]},{"s":"🕕","k":["00","6","6:00","clock","o’clock","six","six o’clock"]},{"s":"","k":["",""]},{"s":"🕡","k":["30","6","6:30","clock","six","thirty","six-thirty"]},{"s":"🕖","k":["00","7","7:00","clock","o’clock","seven","seven o’clock"]},{"s":"🕢","k":["30","7","7:30","clock","seven","thirty","seven-thirty"]},{"s":"🕗","k":["00","8","8:00","clock","eight","o’clock","eight o’clock"]},{"s":"🕣","k":["30","8","8:30","clock","eight","thirty","eight-thirty"]},{"s":"🕘","k":["00","9","9:00","clock","nine","o’clock","nine o’clock"]},{"s":"🕤","k":["30","9","9:30","clock","nine","thirty","nine-thirty"]},{"s":"🕙","k":["00","10","10:00","clock","o’clock","ten","ten o’clock"]},{"s":"🕥","k":["10","10:30","30","clock","ten","thirty","ten-thirty"]},{"s":"🕚","k":["00","11","11:00","clock","eleven","o’clock","eleven o’clock"]},{"s":"🕦","k":["11","11:30","30","clock","eleven","thirty","eleven-thirty"]},{"s":"","k":["",""]},{"s":"🌑","k":["dark","moon","new moon"]},{"s":"🌒","k":["crescent","moon","waxing","waxing crescent moon"]},{"s":"🌓","k":["moon","quarter","first quarter moon"]},{"s":"🌔","k":["gibbous","moon","waxing","waxing gibbous moon"]},{"s":"🌕","k":["full","moon","full moon"]},{"s":"🌖","k":["gibbous","moon","waning","waning gibbous moon"]},{"s":"🌗","k":["moon","quarter","last quarter moon"]},{"s":"🌘","k":["crescent","moon","waning","waning crescent moon"]},{"s":"🌙","k":["crescent","moon","crescent moon"]},{"s":"🌚","k":["face","moon","new moon face"]},{"s":"🌛","k":["face","moon","quarter","first quarter moon with face"]},{"s":"🌜","k":["face","moon","quarter","last quarter moon with face"]},{"s":"🌡","k":["weather","thermometer"]},{"s":"☀","k":["bright","rays","sunny","sun"]},{"s":"🌝","k":["bright","face","full","moon","full moon with face"]},{"s":"🌞","k":["bright","face","sun","sun with face"]},{"s":"⭐","k":["star","white medium star"]},{"s":"🌟","k":["glittery","glow","shining","sparkle","star","glowing star"]},{"s":"🌠","k":["falling","shooting","star","shooting star"]},{"s":"☁","k":["weather","cloud"]},{"s":"","k":["",""]},{"s":"⛅","k":["cloud","sun","sun behind cloud"]},{"s":"⛈","k":["cloud","rain","thunder","cloud with lightning and rain"]},{"s":"🌤","k":["cloud","sun","sun behind small cloud"]},{"s":"🌥","k":["cloud","sun","sun behind large cloud"]},{"s":"🌦","k":["cloud","rain","sun","sun behind rain cloud"]},{"s":"🌧","k":["cloud","rain","cloud with rain"]},{"s":"🌨","k":["cloud","cold","snow","cloud with snow"]},{"s":"🌩","k":["cloud","lightning","cloud with lightning"]},{"s":"🌪","k":["cloud","whirlwind","tornado"]},{"s":"🌫","k":["cloud","fog"]},{"s":"🌬","k":["blow","cloud","face","wind","wind face"]},{"s":"🌀","k":["dizzy","twister","typhoon","cyclone"]},{"s":"🌈","k":["rain","rainbow"]},{"s":"🌂","k":["clothing","rain","umbrella","closed umbrella"]},{"s":"☂","k":["clothing","rain","umbrella"]},{"s":"☔","k":["clothing","drop","rain","umbrella","umbrella with rain drops"]},{"s":"⛱","k":["rain","sun","umbrella","umbrella on ground"]},{"s":"⚡","k":["danger","electric","electricity","lightning","voltage","zap","high voltage"]},{"s":"❄","k":["cold","snow","snowflake"]},{"s":"☃","k":["cold","snow","snowman"]},{"s":"","k":["",""]},{"s":"⛄","k":["cold","snow","snowman","snowman without snow"]},{"s":"☄","k":["space","comet"]},{"s":"🔥","k":["flame","tool","fire"]},{"s":"💧","k":["cold","comic","drop","sweat","droplet"]},{"s":"🌊","k":["ocean","water","wave","water wave"]},{"s":"","k":["",""]},{"s":"🎃","k":["celebration","halloween","jack","lantern","jack-o-lantern"]},{"s":"🎄","k":["celebration","christmas","tree","christmas tree"]},{"s":"🎆","k":["celebration","fireworks"]},{"s":"🎇","k":["celebration","fireworks","sparkle","sparkler"]},{"s":"✨","k":["sparkle","star","sparkles"]},{"s":"🎈","k":["celebration","balloon"]},{"s":"🎉","k":["celebration","party","popper","tada","party popper"]},{"s":"🎊","k":["ball","celebration","confetti","confetti ball"]},{"s":"🎋","k":["banner","celebration","japanese","tree","tanabata tree"]},{"s":"🎍","k":["bamboo","celebration","japanese","pine","pine decoration"]},{"s":"🎎","k":["celebration","doll","festival","japanese","japanese dolls"]},{"s":"🎏","k":["carp","celebration","streamer","carp streamer"]},{"s":"🎐","k":["bell","celebration","chime","wind","wind chime"]},{"s":"🎑","k":["celebration","ceremony","moon","moon viewing ceremony"]},{"s":"🎀","k":["celebration","ribbon"]},{"s":"🎁","k":["box","celebration","gift","present","wrapped","wrapped gift"]},{"s":"🎗","k":["celebration","reminder","ribbon","reminder ribbon"]},{"s":"🎟","k":["admission","ticket","admission tickets"]},{"s":"🎫","k":["admission","ticket"]},{"s":"","k":["",""]},{"s":"🎖","k":["celebration","medal","military","military medal"]},{"s":"🏆","k":["prize","trophy"]},{"s":"🏅","k":["medal","sports medal"]},{"s":"🥇","k":["first","gold","medal","1st place medal"]},{"s":"🥈","k":["medal","second","silver","2nd place medal"]},{"s":"🥉","k":["bronze","medal","third","3rd place medal"]},{"s":"","k":["",""]},{"s":"⚽","k":["ball","football","soccer","soccer ball"]},{"s":"⚾","k":["ball","baseball"]},{"s":"🏀","k":["ball","hoop","basketball"]},{"s":"🏐","k":["ball","game","volleyball"]},{"s":"🏈","k":["american","ball","football","american football"]},{"s":"🏉","k":["ball","football","rugby","rugby football"]},{"s":"🎾","k":["ball","racquet","tennis"]},{"s":"🎱","k":["8","8 ball","ball","billiard","eight","game","pool 8 ball"]},{"s":"🎳","k":["ball","game","bowling"]},{"s":"🏏","k":["ball","bat","game","cricket"]},{"s":"🏑","k":["ball","field","game","hockey","stick","field hockey"]},{"s":"🏒","k":["game","hockey","ice","puck","stick","ice hockey"]},{"s":"🏓","k":["ball","bat","game","paddle","ping pong","table tennis","ping pong"]},{"s":"🏸","k":["birdie","game","racquet","shuttlecock","badminton"]},{"s":"🥊","k":["boxing","glove","boxing glove"]},{"s":"🥋","k":["judo","karate","martial arts","taekwondo","uniform","martial arts uniform"]},{"s":"🥅","k":["goal","net","goal net"]},{"s":"🎯","k":["bull","bullseye","dart","eye","game","hit","target","direct hit"]},{"s":"⛳","k":["golf","hole","flag in hole"]},{"s":"⛸","k":["ice","skate","ice skate"]},{"s":"","k":["",""]},{"s":"🎣","k":["fish","pole","fishing pole"]},{"s":"🎽","k":["athletics","running","sash","shirt","running shirt"]},{"s":"🎿","k":["ski","snow","skis"]},{"s":"","k":["",""]},{"s":"🎮","k":["controller","game","video game"]},{"s":"🕹","k":["game","video game","joystick"]},{"s":"🎲","k":["dice","die","game","game die"]},{"s":"♠","k":["card","game","spade suit"]},{"s":"♥","k":["card","game","heart suit"]},{"s":"♦","k":["card","game","diamond suit"]},{"s":"♣","k":["card","game","club suit"]},{"s":"🃏","k":["card","game","wildcard","joker"]},{"s":"🀄","k":["game","mahjong","red","mahjong red dragon"]},{"s":"🎴","k":["card","flower","game","japanese","playing","flower playing cards"]},{"s":"","k":["",""]},{"s":"🔇","k":["mute","quiet","silent","speaker","muted speaker"]},{"s":"🔈","k":["soft","speaker low volume"]},{"s":"🔉","k":["medium","speaker medium volume"]},{"s":"🔊","k":["loud","speaker high volume"]},{"s":"📢","k":["loud","public address","loudspeaker"]},{"s":"📣","k":["cheering","megaphone"]},{"s":"📯","k":["horn","post","postal","postal horn"]},{"s":"🔔","k":["bell","bell"]},{"s":"🔕","k":["bell","forbidden","mute","no","not","prohibited","quiet","silent","bell with slash"]},{"s":"","k":["",""]},{"s":"🎼","k":["music","score","musical score"]},{"s":"🎵","k":["music","note","musical note"]},{"s":"🎶","k":["music","note","notes","musical notes"]},{"s":"🎙","k":["mic","microphone","music","studio","studio microphone"]},{"s":"🎚","k":["level","music","slider","level slider"]},{"s":"🎛","k":["control","knobs","music","control knobs"]},{"s":"🎤","k":["karaoke","mic","microphone"]},{"s":"🎧","k":["earbud","headphone"]},{"s":"📻","k":["video","radio"]},{"s":"","k":["",""]},{"s":"🎷","k":["instrument","music","sax","saxophone"]},{"s":"🎸","k":["instrument","music","guitar"]},{"s":"🎹","k":["instrument","keyboard","music","piano","musical keyboard"]},{"s":"🎺","k":["instrument","music","trumpet"]},{"s":"🎻","k":["instrument","music","violin"]},{"s":"🥁","k":["drum","drumsticks","music","drum"]},{"s":"","k":["",""]},{"s":"📱","k":["cell","mobile","phone","telephone","mobile phone"]},{"s":"📲","k":["arrow","call","cell","mobile","phone","receive","telephone","mobile phone with arrow"]},{"s":"☎","k":["phone","telephone"]},{"s":"📞","k":["phone","receiver","telephone","telephone receiver"]},{"s":"📟","k":["pager","pager"]},{"s":"📠","k":["fax","fax machine"]},{"s":"","k":["",""]},{"s":"🔋","k":["battery","battery"]},{"s":"🔌","k":["electric","electricity","plug","electric plug"]},{"s":"💻","k":["computer","pc","personal","laptop computer"]},{"s":"🖥","k":["computer","desktop","desktop computer"]},{"s":"🖨","k":["computer","printer"]},{"s":"⌨","k":["computer","keyboard"]},{"s":"🖱","k":["computer","computer mouse"]},{"s":"🖲","k":["computer","trackball"]},{"s":"💽","k":["computer","disk","minidisk","optical","computer disk"]},{"s":"💾","k":["computer","disk","floppy","floppy disk"]},{"s":"💿","k":["cd","computer","disk","optical","optical disk"]},{"s":"📀","k":["blu-ray","computer","disk","dvd","optical","dvd"]},{"s":"","k":["",""]},{"s":"🎥","k":["camera","cinema","movie","movie camera"]},{"s":"🎞","k":["cinema","film","frames","movie","film frames"]},{"s":"📽","k":["cinema","film","movie","projector","video","film projector"]},{"s":"🎬","k":["clapper","movie","clapper board"]},{"s":"📺","k":["tv","video","television"]},{"s":"📷","k":["video","camera"]},{"s":"📸","k":["camera","flash","video","camera with flash"]},{"s":"📹","k":["camera","video","video camera"]},{"s":"📼","k":["tape","vhs","video","videocassette"]},{"s":"🔍","k":["glass","magnifying","search","tool","left-pointing magnifying glass"]},{"s":"🔎","k":["glass","magnifying","search","tool","right-pointing magnifying glass"]},{"s":"🔬","k":["science","tool","microscope"]},{"s":"🔭","k":["science","tool","telescope"]},{"s":"📡","k":["antenna","dish","satellite","satellite antenna"]},{"s":"🕯","k":["light","candle"]},{"s":"💡","k":["bulb","comic","electric","idea","light","light bulb"]},{"s":"🔦","k":["electric","light","tool","torch","flashlight"]},{"s":"🏮","k":["bar","japanese","lantern","light","red","red paper lantern"]},{"s":"","k":["",""]},{"s":"📔","k":["book","cover","decorated","notebook","notebook with decorative cover"]},{"s":"📕","k":["book","closed","closed book"]},{"s":"📖","k":["book","open","open book"]},{"s":"📗","k":["book","green","green book"]},{"s":"📘","k":["blue","book","blue book"]},{"s":"📙","k":["book","orange","orange book"]},{"s":"📚","k":["book","books"]},{"s":"📓","k":["notebook","notebook"]},{"s":"📒","k":["notebook","ledger"]},{"s":"📃","k":["curl","document","page","page with curl"]},{"s":"📜","k":["paper","scroll"]},{"s":"📄","k":["document","page","page facing up"]},{"s":"📰","k":["news","paper","newspaper"]},{"s":"🗞","k":["news","newspaper","paper","rolled","rolled-up newspaper"]},{"s":"📑","k":["bookmark","mark","marker","tabs","bookmark tabs"]},{"s":"🔖","k":["mark","bookmark"]},{"s":"🏷","k":["label","label"]},{"s":"","k":["",""]},{"s":"💰","k":["bag","dollar","money","moneybag","money bag"]},{"s":"💴","k":["bank","banknote","bill","currency","money","note","yen","yen banknote"]},{"s":"💵","k":["bank","banknote","bill","currency","dollar","money","note","dollar banknote"]},{"s":"💶","k":["bank","banknote","bill","currency","euro","money","note","euro banknote"]},{"s":"💷","k":["bank","banknote","bill","currency","money","note","pound","pound banknote"]},{"s":"💸","k":["bank","banknote","bill","dollar","fly","money","note","wings","money with wings"]},{"s":"💳","k":["bank","card","credit","money","credit card"]},{"s":"💹","k":["bank","chart","currency","graph","growth","market","money","rise","trend","upward","yen","chart increasing with yen"]},{"s":"💱","k":["bank","currency","exchange","money","currency exchange"]},{"s":"💲","k":["currency","dollar","money","heavy dollar sign"]},{"s":"","k":["",""]},{"s":"✉","k":["email","letter","envelope"]},{"s":"📧","k":["email","letter","mail","e-mail"]},{"s":"📨","k":["e-mail","email","envelope","incoming","letter","mail","receive","incoming envelope"]},{"s":"📩","k":["arrow","down","e-mail","email","envelope","letter","mail","outgoing","sent","envelope with arrow"]},{"s":"📤","k":["box","letter","mail","outbox","sent","tray","outbox tray"]},{"s":"📥","k":["box","inbox","letter","mail","receive","tray","inbox tray"]},{"s":"📦","k":["box","parcel","package"]},{"s":"📫","k":["closed","mail","mailbox","postbox","closed mailbox with raised flag"]},{"s":"📪","k":["closed","lowered","mail","mailbox","postbox","closed mailbox with lowered flag"]},{"s":"📬","k":["mail","mailbox","open","postbox","open mailbox with raised flag"]},{"s":"📭","k":["lowered","mail","mailbox","open","postbox","open mailbox with lowered flag"]},{"s":"📮","k":["mail","mailbox","postbox"]},{"s":"🗳","k":["ballot","box","ballot box with ballot"]},{"s":"","k":["",""]},{"s":"✏","k":["pencil","pencil"]},{"s":"✒","k":["nib","pen","black nib"]},{"s":"🖋","k":["fountain","pen","fountain pen"]},{"s":"🖊","k":["ballpoint","pen"]},{"s":"🖌","k":["painting","paintbrush"]},{"s":"🖍","k":["crayon","crayon"]},{"s":"📝","k":["pencil","memo"]},{"s":"","k":["",""]},{"s":"💼","k":["briefcase","briefcase"]},{"s":"📁","k":["file","folder","file folder"]},{"s":"📂","k":["file","folder","open","open file folder"]},{"s":"🗂","k":["card","dividers","index","card index dividers"]},{"s":"📅","k":["date","calendar"]},{"s":"📆","k":["calendar","tear-off calendar"]},{"s":"🗒","k":["note","pad","spiral","spiral notepad"]},{"s":"🗓","k":["calendar","pad","spiral","spiral calendar"]},{"s":"📇","k":["card","index","rolodex","card index"]},{"s":"📈","k":["chart","graph","growth","trend","upward","chart increasing"]},{"s":"📉","k":["chart","down","graph","trend","chart decreasing"]},{"s":"📊","k":["bar","chart","graph","bar chart"]},{"s":"📋","k":["clipboard","clipboard"]},{"s":"📌","k":["pin","pushpin"]},{"s":"📍","k":["pin","pushpin","round pushpin"]},{"s":"📎","k":["paperclip","paperclip"]},{"s":"🖇","k":["link","paperclip","linked paperclips"]},{"s":"📏","k":["ruler","straight edge","straight ruler"]},{"s":"📐","k":["ruler","set","triangle","triangular ruler"]},{"s":"✂","k":["cutting","tool","scissors"]},{"s":"","k":["",""]},{"s":"🗃","k":["box","card","file","card file box"]},{"s":"🗄","k":["cabinet","file","filing","file cabinet"]},{"s":"🗑","k":["wastebasket","wastebasket"]},{"s":"","k":["",""]},{"s":"🔒","k":["closed","locked"]},{"s":"🔓","k":["lock","open","unlock","unlocked"]},{"s":"🔏","k":["ink","lock","nib","pen","privacy","locked with pen"]},{"s":"🔐","k":["closed","key","lock","secure","locked with key"]},{"s":"🔑","k":["lock","password","key"]},{"s":"🗝","k":["clue","key","lock","old","old key"]},{"s":"","k":["",""]},{"s":"🔨","k":["tool","hammer"]},{"s":"⛏","k":["mining","tool","pick"]},{"s":"⚒","k":["hammer","pick","tool","hammer and pick"]},{"s":"🛠","k":["hammer","spanner","tool","wrench","hammer and wrench"]},{"s":"🗡","k":["knife","weapon","dagger"]},{"s":"⚔","k":["crossed","swords","weapon","crossed swords"]},{"s":"🔫","k":["gun","handgun","revolver","tool","weapon","pistol"]},{"s":"🏹","k":["archer","archery","arrow","bow","sagittarius","tool","weapon","zodiac","bow and arrow"]},{"s":"🛡","k":["weapon","shield"]},{"s":"🔧","k":["spanner","tool","wrench","wrench"]},{"s":"🔩","k":["bolt","nut","tool","nut and bolt"]},{"s":"⚙","k":["tool","gear"]},{"s":"🗜","k":["compress","tool","vice","clamp"]},{"s":"⚗","k":["chemistry","tool","alembic"]},{"s":"⚖","k":["balance","justice","libra","scales","tool","weight","zodiac","balance scale"]},{"s":"🔗","k":["link","link"]},{"s":"⛓","k":["chain","chains"]},{"s":"","k":["",""]},{"s":"💉","k":["doctor","medicine","needle","shot","sick","tool","syringe"]},{"s":"💊","k":["doctor","medicine","sick","pill"]},{"s":"","k":["",""]},{"s":"🚬","k":["smoking","cigarette"]},{"s":"⚰","k":["death","coffin"]},{"s":"⚱","k":["ashes","death","funeral","urn","funeral urn"]},{"s":"🗿","k":["face","moyai","statue","moai"]},{"s":"🛢","k":["drum","oil","oil drum"]},{"s":"🔮","k":["ball","crystal","fairy tale","fantasy","fortune","tool","crystal ball"]},{"s":"🛒","k":["cart","shopping","trolley","shopping cart"]},{"s":"","k":["",""]},{"s":"🏧","k":["atm","automated","bank","teller","atm sign"]},{"s":"🚮","k":["litter","litter bin","litter in bin sign"]},{"s":"🚰","k":["drinking","potable","water","potable water"]},{"s":"♿","k":["access","wheelchair symbol"]},{"s":"🚹","k":["lavatory","man","restroom","wc","men’s room"]},{"s":"🚺","k":["lavatory","restroom","wc","woman","women’s room"]},{"s":"🚻","k":["lavatory","restroom","wc","restroom"]},{"s":"🚼","k":["baby","changing","baby symbol"]},{"s":"🚾","k":["closet","lavatory","restroom","water","wc","water closet"]},{"s":"🛂","k":["control","passport","passport control"]},{"s":"🛃","k":["customs","customs"]},{"s":"🛄","k":["baggage","claim","baggage claim"]},{"s":"🛅","k":["baggage","locker","luggage","left luggage"]},{"s":"","k":["",""]},{"s":"⚠","k":["warning","warning"]},{"s":"🚸","k":["child","crossing","pedestrian","traffic","children crossing"]},{"s":"⛔","k":["entry","forbidden","no","not","prohibited","traffic","no entry"]},{"s":"🚫","k":["entry","forbidden","no","not","prohibited"]},{"s":"🚳","k":["bicycle","bike","forbidden","no","not","prohibited","no bicycles"]},{"s":"🚭","k":["forbidden","no","not","prohibited","smoking","no smoking"]},{"s":"🚯","k":["forbidden","litter","no","not","prohibited","no littering"]},{"s":"🚱","k":["non-drinking","non-potable","water","non-potable water"]},{"s":"🚷","k":["forbidden","no","not","pedestrian","prohibited","no pedestrians"]},{"s":"📵","k":["cell","forbidden","mobile","no","not","phone","prohibited","telephone","no mobile phones"]},{"s":"🔞","k":["18","age restriction","eighteen","forbidden","no","not","prohibited","underage","no one under eighteen"]},{"s":"☢","k":["radioactive","sign","radioactive"]},{"s":"☣","k":["biohazard","sign","biohazard"]},{"s":"","k":["",""]},{"s":"⬆","k":["arrow","cardinal","direction","north","up arrow"]},{"s":"↗","k":["arrow","direction","intercardinal","northeast","up-right arrow"]},{"s":"➡","k":["arrow","cardinal","direction","east","right arrow"]},{"s":"↘","k":["arrow","direction","intercardinal","southeast","down-right arrow"]},{"s":"⬇","k":["arrow","cardinal","direction","down","south","down arrow"]},{"s":"↙","k":["arrow","direction","intercardinal","southwest","down-left arrow"]},{"s":"⬅","k":["arrow","cardinal","direction","west","left arrow"]},{"s":"↖","k":["arrow","direction","intercardinal","northwest","up-left arrow"]},{"s":"↕","k":["arrow","up-down arrow"]},{"s":"↔","k":["arrow","left-right arrow"]},{"s":"↩","k":["arrow","right arrow curving left"]},{"s":"↪","k":["arrow","left arrow curving right"]},{"s":"⤴","k":["arrow","right arrow curving up"]},{"s":"⤵","k":["arrow","down","right arrow curving down"]},{"s":"🔃","k":["arrow","clockwise","reload","clockwise vertical arrows"]},{"s":"🔄","k":["anticlockwise","arrow","counterclockwise","withershins","anticlockwise arrows button"]},{"s":"🔙","k":["arrow","back","back arrow"]},{"s":"🔚","k":["arrow","end","end arrow"]},{"s":"🔛","k":["arrow","mark","on","on! arrow"]},{"s":"🔜","k":["arrow","soon","soon arrow"]},{"s":"","k":["",""]},{"s":"🔝","k":["arrow","top","up","top arrow"]},{"s":"","k":["",""]},{"s":"🛐","k":["religion","worship","place of worship"]},{"s":"⚛","k":["atheist","atom","atom symbol"]},{"s":"🕉","k":["hindu","religion","om"]},{"s":"✡","k":["david","jew","jewish","religion","star","star of david"]},{"s":"☸","k":["buddhist","dharma","religion","wheel","wheel of dharma"]},{"s":"☯","k":["religion","tao","taoist","yang","yin","yin yang"]},{"s":"✝","k":["christian","cross","religion","latin cross"]},{"s":"☦","k":["christian","cross","religion","orthodox cross"]},{"s":"☪","k":["islam","muslim","religion","star and crescent"]},{"s":"☮","k":["peace","peace symbol"]},{"s":"🕎","k":["candelabrum","candlestick","religion","menorah"]},{"s":"🔯","k":["fortune","star","dotted six-pointed star"]},{"s":"","k":["",""]},{"s":"♈","k":["ram","zodiac","aries"]},{"s":"♉","k":["bull","ox","zodiac","taurus"]},{"s":"♊","k":["twins","zodiac","gemini"]},{"s":"♋","k":["crab","zodiac","cancer"]},{"s":"♌","k":["lion","zodiac","leo"]},{"s":"♍","k":["zodiac","virgo"]},{"s":"♎","k":["balance","justice","scales","zodiac","libra"]},{"s":"♏","k":["scorpio","scorpion","zodiac","scorpius"]},{"s":"♐","k":["archer","zodiac","sagittarius"]},{"s":"♑","k":["goat","zodiac","capricorn"]},{"s":"♒","k":["bearer","water","zodiac","aquarius"]},{"s":"♓","k":["fish","zodiac","pisces"]},{"s":"⛎","k":["bearer","serpent","snake","zodiac","ophiuchus"]},{"s":"","k":["",""]},{"s":"🔀","k":["arrow","crossed","shuffle tracks button"]},{"s":"🔁","k":["arrow","clockwise","repeat","repeat button"]},{"s":"🔂","k":["arrow","clockwise","once","repeat single button"]},{"s":"▶","k":["arrow","play","right","triangle","play button"]},{"s":"⏩","k":["arrow","double","fast","forward","fast-forward button"]},{"s":"⏭","k":["arrow","next scene","next track","triangle","next track button"]},{"s":"⏯","k":["arrow","pause","play","right","triangle","play or pause button"]},{"s":"◀","k":["arrow","left","reverse","triangle","reverse button"]},{"s":"⏪","k":["arrow","double","rewind","fast reverse button"]},{"s":"⏮","k":["arrow","previous scene","previous track","triangle","last track button"]},{"s":"🔼","k":["arrow","button","red","up button"]},{"s":"⏫","k":["arrow","double","fast up button"]},{"s":"🔽","k":["arrow","button","down","red","down button"]},{"s":"⏬","k":["arrow","double","down","fast down button"]},{"s":"⏸","k":["bar","double","pause","vertical","pause button"]},{"s":"⏹","k":["square","stop","stop button"]},{"s":"⏺","k":["circle","record","record button"]},{"s":"⏏","k":["eject","eject button"]},{"s":"🎦","k":["camera","film","movie","cinema"]},{"s":"🔅","k":["brightness","dim","low","dim button"]},{"s":"","k":["",""]},{"s":"🔆","k":["bright","brightness","bright button"]},{"s":"📶","k":["antenna","bar","cell","mobile","phone","signal","telephone","antenna bars"]},{"s":"📳","k":["cell","mobile","mode","phone","telephone","vibration","vibration mode"]},{"s":"📴","k":["cell","mobile","off","phone","telephone","mobile phone off"]},{"s":"","k":["",""]},{"s":"♻","k":["recycle","recycling symbol"]},{"s":"📛","k":["badge","name","name badge"]},{"s":"⚜","k":["fleur-de-lis","fleur-de-lis"]},{"s":"🔰","k":["beginner","chevron","green","japanese","leaf","tool","yellow","japanese symbol for beginner"]},{"s":"🔱","k":["anchor","emblem","ship","tool","trident","trident emblem"]},{"s":"⭕","k":["circle","o","heavy large circle"]},{"s":"✅","k":["check","mark","white heavy check mark"]},{"s":"☑","k":["ballot","box","check","ballot box with check"]},{"s":"✔","k":["check","mark","heavy check mark"]},{"s":"✖","k":["cancel","multiplication","multiply","x","heavy multiplication x"]},{"s":"❌","k":["cancel","mark","multiplication","multiply","x","cross mark"]},{"s":"❎","k":["mark","square","cross mark button"]},{"s":"➕","k":["math","plus","heavy plus sign"]},{"s":"➖","k":["math","minus","heavy minus sign"]},{"s":"➗","k":["division","math","heavy division sign"]},{"s":"➰","k":["curl","loop","curly loop"]},{"s":"➿","k":["curl","double","loop","double curly loop"]},{"s":"〽","k":["mark","part","part alternation mark"]},{"s":"✳","k":["asterisk","eight-spoked asterisk"]},{"s":"✴","k":["star","eight-pointed star"]},{"s":"","k":["",""]},{"s":"❇","k":["sparkle","sparkle"]},{"s":"‼","k":["bangbang","exclamation","mark","punctuation","double exclamation mark"]},{"s":"⁉","k":["exclamation","interrobang","mark","punctuation","question","exclamation question mark"]},{"s":"❓","k":["mark","punctuation","question","question mark"]},{"s":"❔","k":["mark","outlined","punctuation","question","white question mark"]},{"s":"❕","k":["exclamation","mark","outlined","punctuation","white exclamation mark"]},{"s":"❗","k":["exclamation","mark","punctuation","exclamation mark"]},{"s":"〰","k":["dash","punctuation","wavy","wavy dash"]},{"s":"©","k":["copyright","copyright"]},{"s":"®","k":["registered","registered"]},{"s":"™","k":["mark","tm","trademark","trade mark"]},{"s":"","k":["",""]},{"s":"#️⃣","k":["keycap","keycap: #"]},{"s":"*️⃣","k":["keycap","keycap: *"]},{"s":"0️⃣","k":["keycap","keycap: 0"]},{"s":"1️⃣","k":["keycap","keycap: 1"]},{"s":"2️⃣","k":["keycap","keycap: 2"]},{"s":"3️⃣","k":["keycap","keycap: 3"]},{"s":"4️⃣","k":["keycap","keycap: 4"]},{"s":"5️⃣","k":["keycap","keycap: 5"]},{"s":"6️⃣","k":["keycap","keycap: 6"]},{"s":"7️⃣","k":["keycap","keycap: 7"]},{"s":"8️⃣","k":["keycap","keycap: 8"]},{"s":"9️⃣","k":["keycap","keycap: 9"]},{"s":"🔟","k":["keycap 10","keycap 10"]},{"s":"","k":["",""]},{"s":"💯","k":["100","full","hundred","score","hundred points"]},{"s":"🔠","k":["abcd","input","latin","letters","uppercase","input latin uppercase"]},{"s":"🔡","k":["abcd","input","latin","letters","lowercase","input latin lowercase"]},{"s":"🔢","k":["1234","input","numbers","input numbers"]},{"s":"🔣","k":["〒♪&%","input","input symbols"]},{"s":"🔤","k":["abc","alphabet","input","latin","letters","input latin letters"]},{"s":"🅰","k":["a","blood type","a button (blood type)"]},{"s":"🆎","k":["ab","blood type","ab button (blood type)"]},{"s":"🅱","k":["b","blood type","b button (blood type)"]},{"s":"🆑","k":["cl","cl button"]},{"s":"🆒","k":["cool","cool button"]},{"s":"🆓","k":["free","free button"]},{"s":"ℹ","k":["i","information","information"]},{"s":"🆔","k":["id","identity","id button"]},{"s":"Ⓜ","k":["circle","m","circled m"]},{"s":"🆕","k":["new","new button"]},{"s":"🆖","k":["ng","ng button"]},{"s":"🅾","k":["blood type","o","o button (blood type)"]},{"s":"🆗","k":["ok","ok button"]},{"s":"🅿","k":["parking","p button"]},{"s":"","k":["",""]},{"s":"🆘","k":["help","sos","sos button"]},{"s":"🆙","k":["mark","up","up! button"]},{"s":"🆚","k":["versus","vs","vs button"]},{"s":"🈁","k":["“here”","japanese","katakana","ココ","japanese “here” button"]},{"s":"🈂","k":["“service charge”","japanese","katakana","サ","japanese “service charge” button"]},{"s":"🈷","k":["“monthly amount”","ideograph","japanese","月","japanese “monthly amount” button"]},{"s":"🈶","k":["“not free of charge”","ideograph","japanese","有","japanese “not free of charge” button"]},{"s":"🈯","k":["“reserved”","ideograph","japanese","指","japanese “reserved” button"]},{"s":"🉐","k":["“bargain”","ideograph","japanese","得","japanese “bargain” button"]},{"s":"🈹","k":["“discount”","ideograph","japanese","割","japanese “discount” button"]},{"s":"🈚","k":["“free of charge”","ideograph","japanese","無","japanese “free of charge” button"]},{"s":"🈲","k":["“prohibited”","ideograph","japanese","禁","japanese “prohibited” button"]},{"s":"🉑","k":["“acceptable”","ideograph","japanese","可","japanese “acceptable” button"]},{"s":"🈸","k":["“application”","ideograph","japanese","申","japanese “application” button"]},{"s":"🈴","k":["“passing grade”","ideograph","japanese","合","japanese “passing grade” button"]},{"s":"🈳","k":["“vacancy”","ideograph","japanese","空","japanese “vacancy” button"]},{"s":"㊗","k":["“congratulations”","ideograph","japanese","祝","japanese “congratulations” button"]},{"s":"㊙","k":["“secret”","ideograph","japanese","秘","japanese “secret” button"]},{"s":"🈺","k":["“open for business”","ideograph","japanese","営","japanese “open for business” button"]},{"s":"🈵","k":["“no vacancy”","ideograph","japanese","満","japanese “no vacancy” button"]},{"s":"","k":["",""]},{"s":"▪","k":["geometric","square","black small square"]},{"s":"▫","k":["geometric","square","white small square"]},{"s":"◻","k":["geometric","square","white medium square"]},{"s":"◼","k":["geometric","square","black medium square"]},{"s":"◽","k":["geometric","square","white medium-small square"]},{"s":"◾","k":["geometric","square","black medium-small square"]},{"s":"⬛","k":["geometric","square","black large square"]},{"s":"⬜","k":["geometric","square","white large square"]},{"s":"🔶","k":["diamond","geometric","orange","large orange diamond"]},{"s":"🔷","k":["blue","diamond","geometric","large blue diamond"]},{"s":"🔸","k":["diamond","geometric","orange","small orange diamond"]},{"s":"🔹","k":["blue","diamond","geometric","small blue diamond"]},{"s":"🔺","k":["geometric","red","red triangle pointed up"]},{"s":"🔻","k":["down","geometric","red","red triangle pointed down"]},{"s":"💠","k":["comic","diamond","geometric","inside","diamond with a dot"]},{"s":"🔘","k":["button","geometric","radio","radio button"]},{"s":"🔲","k":["button","geometric","square","black square button"]},{"s":"🔳","k":["button","geometric","outlined","square","white square button"]},{"s":"⚪","k":["circle","geometric","white circle"]},{"s":"⚫","k":["circle","geometric","black circle"]},{"s":"","k":["",""]},{"s":"🔴","k":["circle","geometric","red","red circle"]},{"s":"🔵","k":["blue","circle","geometric","blue circle"]},{"s":"","k":["",""]},{"s":"🏁","k":["checkered","chequered","racing","chequered flag"]},{"s":"🚩","k":["post","triangular flag"]},{"s":"🎌","k":["celebration","cross","crossed","japanese","crossed flags"]},{"s":"🏴","k":["waving","black flag"]},{"s":"🏳","k":["waving","white flag"]},{"s":"","k":["",""]},{"s":"🇦🇨","k":["flag","ascension island"]},{"s":"🇦🇩","k":["flag","andorra"]},{"s":"🇦🇪","k":["flag","united arab emirates"]},{"s":"🇦🇫","k":["flag","afghanistan"]},{"s":"🇦🇬","k":["flag","antigua & barbuda"]},{"s":"🇦🇮","k":["flag","anguilla"]},{"s":"🇦🇱","k":["flag","albania"]},{"s":"🇦🇲","k":["flag","armenia"]},{"s":"🇦🇴","k":["flag","angola"]},{"s":"🇦🇶","k":["flag","antarctica"]},{"s":"🇦🇷","k":["flag","argentina"]},{"s":"🇦🇸","k":["flag","american samoa"]},{"s":"🇦🇹","k":["flag","austria"]},{"s":"🇦🇺","k":["flag","australia"]},{"s":"🇦🇼","k":["flag","aruba"]},{"s":"🇦🇽","k":["flag","åland islands"]},{"s":"🇦🇿","k":["flag","azerbaijan"]},{"s":"🇧🇦","k":["flag","bosnia & herzegovina"]},{"s":"🇧🇧","k":["flag","barbados"]},{"s":"🇧🇩","k":["flag","bangladesh"]},{"s":"","k":["",""]},{"s":"🇧🇪","k":["flag","belgium"]},{"s":"🇧🇫","k":["flag","burkina faso"]},{"s":"🇧🇬","k":["flag","bulgaria"]},{"s":"🇧🇭","k":["flag","bahrain"]},{"s":"🇧🇮","k":["flag","burundi"]},{"s":"🇧🇯","k":["flag","benin"]},{"s":"🇧🇱","k":["flag","st. barthélemy"]},{"s":"🇧🇲","k":["flag","bermuda"]},{"s":"🇧🇳","k":["flag","brunei"]},{"s":"🇧🇴","k":["flag","bolivia"]},{"s":"🇧🇶","k":["flag","caribbean netherlands"]},{"s":"🇧🇷","k":["flag","brazil"]},{"s":"🇧🇸","k":["flag","bahamas"]},{"s":"🇧🇹","k":["flag","bhutan"]},{"s":"🇧🇻","k":["flag","bouvet island"]},{"s":"🇧🇼","k":["flag","botswana"]},{"s":"🇧🇾","k":["flag","belarus"]},{"s":"🇧🇿","k":["flag","belize"]},{"s":"🇨🇦","k":["flag","canada"]},{"s":"🇨🇨","k":["flag","cocos (keeling) islands"]},{"s":"","k":["",""]},{"s":"🇨🇩","k":["flag","congo - kinshasa"]},{"s":"🇨🇫","k":["flag","central african republic"]},{"s":"🇨🇬","k":["flag","congo - brazzaville"]},{"s":"🇨🇭","k":["flag","switzerland"]},{"s":"🇨🇮","k":["flag","côte d’ivoire"]},{"s":"🇨🇰","k":["flag","cook islands"]},{"s":"🇨🇱","k":["flag","chile"]},{"s":"🇨🇲","k":["flag","cameroon"]},{"s":"🇨🇳","k":["flag","china"]},{"s":"🇨🇴","k":["flag","colombia"]},{"s":"🇨🇵","k":["flag","clipperton island"]},{"s":"🇨🇷","k":["flag","costa rica"]},{"s":"🇨🇺","k":["flag","cuba"]},{"s":"🇨🇻","k":["flag","cape verde"]},{"s":"🇨🇼","k":["flag","curaçao"]},{"s":"🇨🇽","k":["flag","christmas island"]},{"s":"🇨🇾","k":["flag","cyprus"]},{"s":"🇨🇿","k":["flag","czech republic"]},{"s":"🇩🇪","k":["flag","germany"]},{"s":"🇩🇬","k":["flag","diego garcia"]},{"s":"","k":["",""]},{"s":"🇩🇯","k":["flag","djibouti"]},{"s":"🇩🇰","k":["flag","denmark"]},{"s":"🇩🇲","k":["flag","dominica"]},{"s":"🇩🇴","k":["flag","dominican republic"]},{"s":"🇩🇿","k":["flag","algeria"]},{"s":"🇪🇦","k":["flag","ceuta & melilla"]},{"s":"🇪🇨","k":["flag","ecuador"]},{"s":"🇪🇪","k":["flag","estonia"]},{"s":"🇪🇬","k":["flag","egypt"]},{"s":"🇪🇭","k":["flag","western sahara"]},{"s":"🇪🇷","k":["flag","eritrea"]},{"s":"🇪🇸","k":["flag","spain"]},{"s":"🇪🇹","k":["flag","ethiopia"]},{"s":"🇪🇺","k":["flag","european union"]},{"s":"🇫🇮","k":["flag","finland"]},{"s":"🇫🇯","k":["flag","fiji"]},{"s":"🇫🇰","k":["flag","falkland islands"]},{"s":"🇫🇲","k":["flag","micronesia"]},{"s":"🇫🇴","k":["flag","faroe islands"]},{"s":"🇫🇷","k":["flag","france"]},{"s":"","k":["",""]},{"s":"🇬🇦","k":["flag","gabon"]},{"s":"🇬🇧","k":["flag","united kingdom"]},{"s":"🇬🇩","k":["flag","grenada"]},{"s":"🇬🇪","k":["flag","georgia"]},{"s":"🇬🇫","k":["flag","french guiana"]},{"s":"🇬🇬","k":["flag","guernsey"]},{"s":"🇬🇭","k":["flag","ghana"]},{"s":"🇬🇮","k":["flag","gibraltar"]},{"s":"🇬🇱","k":["flag","greenland"]},{"s":"🇬🇲","k":["flag","gambia"]},{"s":"🇬🇳","k":["flag","guinea"]},{"s":"🇬🇵","k":["flag","guadeloupe"]},{"s":"🇬🇶","k":["flag","equatorial guinea"]},{"s":"🇬🇷","k":["flag","greece"]},{"s":"🇬🇸","k":["flag","south georgia & south sandwich islands"]},{"s":"🇬🇹","k":["flag","guatemala"]},{"s":"🇬🇺","k":["flag","guam"]},{"s":"🇬🇼","k":["flag","guinea-bissau"]},{"s":"🇬🇾","k":["flag","guyana"]},{"s":"🇭🇰","k":["flag","hong kong sar china"]},{"s":"","k":["",""]},{"s":"🇭🇲","k":["flag","heard & mcdonald islands"]},{"s":"🇭🇳","k":["flag","honduras"]},{"s":"🇭🇷","k":["flag","croatia"]},{"s":"🇭🇹","k":["flag","haiti"]},{"s":"🇭🇺","k":["flag","hungary"]},{"s":"🇮🇨","k":["flag","canary islands"]},{"s":"🇮🇩","k":["flag","indonesia"]},{"s":"🇮🇪","k":["flag","ireland"]},{"s":"🇮🇱","k":["flag","israel"]},{"s":"🇮🇲","k":["flag","isle of man"]},{"s":"🇮🇳","k":["flag","india"]},{"s":"🇮🇴","k":["flag","british indian ocean territory"]},{"s":"🇮🇶","k":["flag","iraq"]},{"s":"🇮🇷","k":["flag","iran"]},{"s":"🇮🇸","k":["flag","iceland"]},{"s":"🇮🇹","k":["flag","italy"]},{"s":"🇯🇪","k":["flag","jersey"]},{"s":"🇯🇲","k":["flag","jamaica"]},{"s":"🇯🇴","k":["flag","jordan"]},{"s":"🇯🇵","k":["flag","japan"]},{"s":"","k":["",""]},{"s":"🇰🇪","k":["flag","kenya"]},{"s":"🇰🇬","k":["flag","kyrgyzstan"]},{"s":"🇰🇭","k":["flag","cambodia"]},{"s":"🇰🇮","k":["flag","kiribati"]},{"s":"🇰🇲","k":["flag","comoros"]},{"s":"🇰🇳","k":["flag","st. kitts & nevis"]},{"s":"🇰🇵","k":["flag","north korea"]},{"s":"🇰🇷","k":["flag","south korea"]},{"s":"🇰🇼","k":["flag","kuwait"]},{"s":"🇰🇾","k":["flag","cayman islands"]},{"s":"🇰🇿","k":["flag","kazakhstan"]},{"s":"🇱🇦","k":["flag","laos"]},{"s":"🇱🇧","k":["flag","lebanon"]},{"s":"🇱🇨","k":["flag","st. lucia"]},{"s":"🇱🇮","k":["flag","liechtenstein"]},{"s":"🇱🇰","k":["flag","sri lanka"]},{"s":"🇱🇷","k":["flag","liberia"]},{"s":"🇱🇸","k":["flag","lesotho"]},{"s":"🇱🇹","k":["flag","lithuania"]},{"s":"🇱🇺","k":["flag","luxembourg"]},{"s":"","k":["",""]},{"s":"🇱🇻","k":["flag","latvia"]},{"s":"🇱🇾","k":["flag","libya"]},{"s":"🇲🇦","k":["flag","morocco"]},{"s":"🇲🇨","k":["flag","monaco"]},{"s":"🇲🇩","k":["flag","moldova"]},{"s":"🇲🇪","k":["flag","montenegro"]},{"s":"🇲🇫","k":["flag","st. martin"]},{"s":"🇲🇬","k":["flag","madagascar"]},{"s":"🇲🇭","k":["flag","marshall islands"]},{"s":"🇲🇰","k":["flag","macedonia"]},{"s":"🇲🇱","k":["flag","mali"]},{"s":"🇲🇲","k":["flag","myanmar (burma)"]},{"s":"🇲🇳","k":["flag","mongolia"]},{"s":"🇲🇴","k":["flag","macau sar china"]},{"s":"🇲🇵","k":["flag","northern mariana islands"]},{"s":"🇲🇶","k":["flag","martinique"]},{"s":"🇲🇷","k":["flag","mauritania"]},{"s":"🇲🇸","k":["flag","montserrat"]},{"s":"🇲🇹","k":["flag","malta"]},{"s":"🇲🇺","k":["flag","mauritius"]},{"s":"","k":["",""]},{"s":"🇲🇻","k":["flag","maldives"]},{"s":"🇲🇼","k":["flag","malawi"]},{"s":"🇲🇽","k":["flag","mexico"]},{"s":"🇲🇾","k":["flag","malaysia"]},{"s":"🇲🇿","k":["flag","mozambique"]},{"s":"🇳🇦","k":["flag","namibia"]},{"s":"🇳🇨","k":["flag","new caledonia"]},{"s":"🇳🇪","k":["flag","niger"]},{"s":"🇳🇫","k":["flag","norfolk island"]},{"s":"🇳🇬","k":["flag","nigeria"]},{"s":"🇳🇮","k":["flag","nicaragua"]},{"s":"🇳🇱","k":["flag","netherlands"]},{"s":"🇳🇴","k":["flag","norway"]},{"s":"🇳🇵","k":["flag","nepal"]},{"s":"🇳🇷","k":["flag","nauru"]},{"s":"🇳🇺","k":["flag","niue"]},{"s":"🇳🇿","k":["flag","new zealand"]},{"s":"🇴🇲","k":["flag","oman"]},{"s":"🇵🇦","k":["flag","panama"]},{"s":"🇵🇪","k":["flag","peru"]},{"s":"","k":["",""]},{"s":"🇵🇫","k":["flag","french polynesia"]},{"s":"🇵🇬","k":["flag","papua new guinea"]},{"s":"🇵🇭","k":["flag","philippines"]},{"s":"🇵🇰","k":["flag","pakistan"]},{"s":"🇵🇱","k":["flag","poland"]},{"s":"🇵🇲","k":["flag","st. pierre & miquelon"]},{"s":"🇵🇳","k":["flag","pitcairn islands"]},{"s":"🇵🇷","k":["flag","puerto rico"]},{"s":"🇵🇸","k":["flag","palestinian territories"]},{"s":"🇵🇹","k":["flag","portugal"]},{"s":"🇵🇼","k":["flag","palau"]},{"s":"🇵🇾","k":["flag","paraguay"]},{"s":"🇶🇦","k":["flag","qatar"]},{"s":"🇷🇪","k":["flag","réunion"]},{"s":"🇷🇴","k":["flag","romania"]},{"s":"🇷🇸","k":["flag","serbia"]},{"s":"🇷🇺","k":["flag","russia"]},{"s":"🇷🇼","k":["flag","rwanda"]},{"s":"🇸🇦","k":["flag","saudi arabia"]},{"s":"🇸🇧","k":["flag","solomon islands"]},{"s":"","k":["",""]},{"s":"🇸🇨","k":["flag","seychelles"]},{"s":"🇸🇩","k":["flag","sudan"]},{"s":"🇸🇪","k":["flag","sweden"]},{"s":"🇸🇬","k":["flag","singapore"]},{"s":"🇸🇭","k":["flag","st. helena"]},{"s":"🇸🇮","k":["flag","slovenia"]},{"s":"🇸🇯","k":["flag","svalbard & jan mayen"]},{"s":"🇸🇰","k":["flag","slovakia"]},{"s":"🇸🇱","k":["flag","sierra leone"]},{"s":"🇸🇲","k":["flag","san marino"]},{"s":"🇸🇳","k":["flag","senegal"]},{"s":"🇸🇴","k":["flag","somalia"]},{"s":"🇸🇷","k":["flag","suriname"]},{"s":"🇸🇸","k":["flag","south sudan"]},{"s":"🇸🇹","k":["flag","são tomé & príncipe"]},{"s":"🇸🇻","k":["flag","el salvador"]},{"s":"🇸🇽","k":["flag","sint maarten"]},{"s":"🇸🇾","k":["flag","syria"]},{"s":"🇸🇿","k":["flag","swaziland"]},{"s":"🇹🇦","k":["flag","tristan da cunha"]},{"s":"","k":["",""]},{"s":"🇹🇨","k":["flag","turks & caicos islands"]},{"s":"🇹🇩","k":["flag","chad"]},{"s":"🇹🇫","k":["flag","french southern territories"]},{"s":"🇹🇬","k":["flag","togo"]},{"s":"🇹🇭","k":["flag","thailand"]},{"s":"🇹🇯","k":["flag","tajikistan"]},{"s":"🇹🇰","k":["flag","tokelau"]},{"s":"🇹🇱","k":["flag","timor-leste"]},{"s":"🇹🇲","k":["flag","turkmenistan"]},{"s":"🇹🇳","k":["flag","tunisia"]},{"s":"🇹🇴","k":["flag","tonga"]},{"s":"🇹🇷","k":["flag","turkey"]},{"s":"🇹🇹","k":["flag","trinidad & tobago"]},{"s":"🇹🇻","k":["flag","tuvalu"]},{"s":"🇹🇼","k":["flag","taiwan"]},{"s":"🇹🇿","k":["flag","tanzania"]},{"s":"🇺🇦","k":["flag","ukraine"]},{"s":"🇺🇬","k":["flag","uganda"]},{"s":"🇺🇲","k":["flag","u.s. outlying islands"]},{"s":"🇺🇸","k":["flag","united states"]},{"s":"","k":["",""]},{"s":"🇺🇾","k":["flag","uruguay"]},{"s":"🇺🇿","k":["flag","uzbekistan"]},{"s":"🇻🇦","k":["flag","vatican city"]},{"s":"🇻🇨","k":["flag","st. vincent & grenadines"]},{"s":"🇻🇪","k":["flag","venezuela"]},{"s":"🇻🇬","k":["flag","british virgin islands"]},{"s":"🇻🇮","k":["flag","u.s. virgin islands"]},{"s":"🇻🇳","k":["flag","vietnam"]},{"s":"🇻🇺","k":["flag","vanuatu"]},{"s":"🇼🇫","k":["flag","wallis & futuna"]},{"s":"🇼🇸","k":["flag","samoa"]},{"s":"🇽🇰","k":["flag","kosovo"]},{"s":"🇾🇪","k":["flag","yemen"]},{"s":"🇾🇹","k":["flag","mayotte"]},{"s":"🇿🇦","k":["flag","south africa"]},{"s":"🇿🇲","k":["flag","zambia"]},{"s":"🇿🇼","k":["flag","zimbabwe"]}]}()),
    __emojify: function(str) {
      /*
       * Takes a descriptive string and returns a matching emoji (e.g. umbrella to 🌂)
       *
       * Based on http://unicode.org/emoji/charts/emoji-list.html
       * To update the list, visit the page, run the Inject jQuery bookmarklet
       * and run this code in a browser console (or find a way to pipe curl to a CLI)
       * which inserts a textarea into the page, the contents of which can be copied.
       * curl 'http://unicode.org/emoji/charts/emoji-list.html' > tmp.html
       *
       * TODO: Use fuzzy matching
       * 
        var emojiJSON = []
        $('table tr:not(:first-child)').each(function (i, el) {
            var $tds = $(this).find('td'),
              emoji = $tds.eq(2).text(),
              name = $tds.eq(4).text(),
              kws = $tds.eq(5).text();
            kws = kws.split("|").map(function(d){return d.trim().toLowerCase()})
            kws.push(name.toLowerCase());
          emojiJSON.push({s: emoji, k: kws})
        });
        $("<textarea>").prependTo("body").val(JSON.stringify(emojiJSON));
       */
      str = str.toLowerCase();
      if (!str) return [];
      if (str == 'all') return this.__emojis;
      if (!emojiFuse) {
          emojiFuse = new Fuse(this.__emojis, { 
                                        shouldSort: true,
                                        threshold: 0.3,
                                        keys: ['k']
                                   }
                   );
      }
      return emojiFuse.search(str);
  },
    preview: function(pblock, input) {
        var div = $("<div>"),
        matches = this.__emojify(input.object.text).map(function addTitle(d){ d.title = d.k.join("|"); return d });
        pblock.innerHTML = CmdUtils.renderTemplate(
            feed.dom.getElementById("emoji").innerHTML,
            {matches: matches}
        )
    },
    execute: function(input) {
        matches = this.__emojify(input.object.text);
        if (matches && matches[0] && matches[0].s) {
            CmdUtils.setSelection(matches[0].s);
        }
    }
})

/** ************************************************************************************************
 * Encode
 * Encode URLs
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["encode"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://meyerweb.com/favicon.ico",
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  description: "URL-encodes text",
  preview: function(pblock, input) {
        pblock.innerHTML = encodeURIComponent(input.object.text);
  },
  execute: function(input) {
		CmdUtils.setSelection(encodeURIComponent(input.object.text));
  }
})

/** 
 * Fortune
 * Gets a fortune cookie
 */
// TODO: accept optional length (short,long) and source category
//TODO: paste HTML if in a page, TEXT if in a textarea
CmdUtils.CreateCommand({
  names: ["fortune", "fortune-cookie", "quote"],
  arguments: [],
  icon: "http://www.iheartquotes.com//images/favicon.png",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Retrieves a Unix Fortune from the online service ihearquotes.com",
  fortune_text: null,
  preview: function(pblock, {object, source}) {
	//pblock.innerHTML = 'retrieving ...';
	var url = 'http://www.iheartquotes.com/api/v1/random?format=text&show_permalink=false&show_source=false';
	//CmdUtils.log('hi', object, source)
    CmdUtils.previewGet(pblock, url, null,
      function(data){
		this.fortune_text = data;
        pblock.innerHTML = this.fortune_text;
      }
    );
  },
  execute: function(args) {
    CmdUtils.setSelection(this.fortune_text)
  }
})

/** ************************************************************************************************
 * Ubiquity "grab-color" color grabbing command, v1.0
 * by Jacob Seidelin, jseidein@nihilogic.dk, http://blog.nihilogic.dk/
 * Updated and modified by g2010a
 * *********************************************************************************************** */

CmdUtils.CreateCommand({ 
  names: ["get-color", "grab-color", "color-get"],
  icon: "http://www.nihilogic.dk/favicon.ico",
  homepage: "http://blog.nihilogic.dk/",
  author: { name: "Jacob Seidelin", email: "jseidelin@nihilogic.dk"},
  description: "Grab colors from web pages",
  arguments: [{role:"format", label:"mode",nountype: noun_arb_text}],
  preview: function( pblock, input ) {
    var template = "Click anywhere on the page to pick up a color.<br/>Mode is either \"hex\" or \"rgb\" (defaults to \"hex\").";
    pblock.innerHTML = CmdUtils.renderTemplate(template);
  },
  execute: function(input) {
    var mode = jQuery.trim(input.format.text),
        rgb = (mode == "rgb"),
        win = CmdUtils.getWindowInsecure(),
        doc = CmdUtils.getDocumentInsecure()

    if (doc.getElementById("pixastic-color-picker-image")) 
      return;

    var hWin = CmdUtils.getHiddenWindow(),
        shot = hWin.document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
        width = win.innerWidth,
        height = win.innerHeight
    shot.mozOpaque = true;
    shot.width = width;
    shot.height = height;
    shot.getContext("2d").drawWindow(win, win.scrollX, win.scrollY, width, height, "rgb(255,255,255)");

    var img = doc.createElement("img");
    img.style.position = "absolute";
    img.style.zIndex = 0x7fffffff;
    img.style.padding = img.margin = "0px";
    img.style.border = "none";
    img.style.left = win.scrollX + "px";
    img.style.top = win.scrollY + "px";
    img.style.cursor = "crosshair";
    img.id = "pixastic-color-picker-image";

    img.src = shot.toDataURL("image/png");

    var box = doc.createElement("div");
    box.style.width = "150px";
    box.style.height = "15px";
    box.style.border = "1px solid black";
    box.style.color = "black";
    box.style.fontFamily = "helvetica, sans-serif";
    box.style.fontSize = "12px";
    box.style.backgroundColor = "rgba(255,255,255,0.7)";
    box.style.position = "absolute";
    box.style.zIndex = 0x7fffffff;

    var overflow = doc.body.style.overflow;
    doc.body.style.overflow = "hidden";
    doc.body.appendChild(img);
    doc.body.appendChild(box);

    var hex = function(n) {
      var h = n.toString(16);
      if (h.length == 1) h = "0" + h;
      return h;
    }

    img.onmousemove = function(e) {
       var data = shot.getContext("2d").getImageData(e.clientX, e.clientY, 1, 1).data;
       var color = rgb ? "rgb(" + data[0] + "," + data[1] + "," + data[2] + ")"
           : "#" + hex(data[0]) + hex(data[1]) + hex(data[2]);
       box.innerHTML = "Color: " + color;
       box.style.left = (e.clientX + win.scrollX + 10) + "px";
       box.style.top = (e.clientY + win.scrollY + 10) + "px";
    }

    img.onclick = function(e) {
       doc.body.removeChild(img);
       doc.body.removeChild(box);
       doc.body.style.overflow = overflow;
       var data = shot.getContext("2d").getImageData(e.clientX, e.clientY, 1, 1).data;
       var color = rgb ? "rgb(" + data[0] + "," + data[1] + "," + data[2] + ")"
           : "#" + hex(data[0]) + hex(data[1]) + hex(data[2]);
       win.prompt("Your selected color is", color);
    }
    //TODO: abort with ESC
  }
})

/** ************************************************************************************************
 * Lds
 * Search lds.org 
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["lds"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.lds.org/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches LDS.org and loads results into the Preview pane.",

  preview: function(pblock, input) {
    CmdUtils.previewGet(pblock,
      'http://www.lds.org/search?lang=eng&query='+input.object.text,
      null,
      function(data){
        var html = ""
        $(".results-list>li",data).each(function(i,d){ 
          var headings = $('h3',d);
          var newheadings = $('<p></p>').append(headings.html());
		  headings.replaceWith(newheadings);
		  var lists = $('ul.meta>li',d);
          var newlists = $('<span></span>').append(lists.text());
          lists.replaceWith(newlists);
          if ($(d).html().trim() != "") html = html+ "<hr/>" + $(d).html()
        })
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = args.object;
    var url = "http://www.lds.org/search?lang=eng&query={QUERY}"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})

/** ************************************************************************************************
 * Parse URL
 * Parses a URL
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["parse url", "url parser", "prettify url", "url prettifier"],
    arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:"g2010a"},
    description: "Parses and prettifies URLs",
    
    preview: function(pblock, args) {
        var input = args.object.text,
            parser = $("<a/>").attr('href',input)[0]
        
        pblock.innerHTML = parser.protocol 
            + "<br/>+- " + parser.host
            + "<br/>+-- " + parser.pathname
        parser.search.slice(1).split("&").forEach(function(param){
                pblock.innerHTML += ( "<br/>+--- " + param )
            })
        pblock.innerHTML += "<br/>+- " + parser.hash
    },
})


/** ************************************************************************************************
 * qrcode
 * Generates a QR Code with the specified text encoded
 * previously used Google Charts API (to be deprecated by Google)
 * previously used https://github.com/nhorvath/Ubiquity-QRCode
 * currently uses qrserver.com api
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["qrcode", "qr"],
  arguments: [{role:"object",label:"input",nountype:noun_arb_text}],
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  icon: "http://api.qrserver.com/v1/create-qr-code/?data=q&size=32x32",
  description: "Generates a QR Code with the specified text encoded.",
  __baseurl: "http://api.qrserver.com/v1/create-qr-code/?data={QUERY}&size=400x400",
  preview: function(pblock, args) {
	var input = args.object
    pblock.innerHTML = "<img src='" + this.__baseurl.replace("{QUERY}", encodeURIComponent(input.text)) +"'/>"
  },
  execute: function(args) {
    var input = args.object;
    var urlString = this.__baseurl.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
});



/** ************************************************************************************************
 * stock-chart
 * Get a stock chart
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["stock-chart"],
    homepage: "http://hoffstein.net/ubiquity/stock-chart.html",
    author: { name: "Ben Hoffstein", email: "ben@hoffstein.net" },
    license: "MPL",
    description: "Displays a stock chart for the given ticker (from Yahoo! finance).",
    arguments: [{ role:'object', nountype: noun_arb_text, label: 'input' }],
    preview: function(pblock, args) {
		var input = args.object
        var searchText = jQuery.trim(input.text);
        if (searchText.length < 1) {
            pblock.innerHTML = "Retrieves stock chart for ticker";
            return;
        }
		var url = "http://chart.finance.yahoo.com/z?s={QUERY}";
        var query = jQuery.trim(searchText);
        var urlString = url.replace("{QUERY}", encodeURIComponent(query))
		pblock.innerHTML = "1D <br/><img src='"+urlString+"&t=1d&q=l&l=off&z=s&p=m30,m200'/>"
                        + "<br/>6M <br/><img src='"+urlString+"&t=6m&q=l&l=off&z=s&p=m30,m200'/>"
						+ "<br/>3 YR<br/><img src='"+urlString+"&t=3y&q=l&l=off&z=s&p=m30,m200'/>";
    },
	
  execute: function(args) {
    var input = args.object;
    var url = "http://finance.yahoo.com/q?s={QUERY}&ql=0"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})

/** ************************************************************************************************
 * Text2Html
 * Render plain text as html
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["text2html", "html","render html"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: null,
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Renders plain text as HTML.",
  
  preview: function(pblock, input) {
        pblock.innerHTML = decodeURIComponent(input.object.text);
  },
  execute: function(input) {
		CmdUtils.setSelection(input.object.text);
  }
})

/** ************************************************************************************************
 * wolf
 * wolfram|alpha with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["wolf", "wolfram", "wolframalpha", "wolfram alpha"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.wolframalpha.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches WolframAlpha and loads results in to Preview pane.",

  preview: function(pblock, input) {
    CmdUtils.previewGet(pblock,
      'http://www.wolframalpha.com/widget/input/?input='+input.object.text+'&id=d1506f31ac81b12a37f93ca40a79515&showAssumptions=0',
      null,
      function(data){
        var html = "<div style='background-color: #fff; color:#000; padding-left: 6px; border-radius: 10px; margin-right: 4px;'>"
        jQuery("div.pod",data).each(function(i,d){ 
          jQuery("a",d).replaceWith("<span style='font-size:smaller; color:#ccc'>[link removed]</span>")
          jQuery("hr",d).remove()
          var headings = jQuery('h2',d);
          var newheadings = jQuery('<p></p>').append(headings.text());
          headings.replaceWith(newheadings);
          if (jQuery(d).html().trim() != "") html = html+ "<hr/>" + jQuery(d).html()
          else html = html + "<hr/> [this section can't be loaded]"
        })
        //html = data;
        html = html + "</div>"
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = args.object;
    var url = "http://www.wolframalpha.com/input/?i={QUERY}"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})


/** ************************************************************************************************
 * yubnub
 * Yubnub with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["yubnub"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.yubnub.org/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Executes <a href='http://yubnub.org/kernel/ls?args='>YubNub commands</a> and loads results in to Preview pane where possible.",

  preview: function(pblock, args) {
    var input = $.trim(args.object.text)
    CmdUtils.previewGet(pblock,
      'http://yubnub.org/parser/parse?command=' + input,
      null,
      function(data){
        var html = data//.match(/<body\s*[^>]*>([\S\s]*?)<\/body>/i)[0]
        html = CmdUtils.absUrl(html, 'http://yubnub.org')
        html = "<style>body{font-size: 0.9rem; text-shadow: none}</style>" + html
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = $.trim(args.object.text)
    Utils.openUrlInBrowser("http://yubnub.org/parser/parse?command="+input);
  }
})

]]>
</script>
</body>
</html>