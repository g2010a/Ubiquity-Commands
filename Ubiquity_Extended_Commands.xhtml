<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>Ubiquity Extended Commands</title>
  <link rel="commands" href="Ubiquity_Extended_Commands.xhtml"/>
</head>
<style>
  div[id] {display: none}
  script {display: block; white-space: pre; font-family: monospace; color:gray;}
  ol item { display: block; white-space:pre; margin-top: 0.5em; margin-left:1em;}
</style>
<body>
<p>This XHTML feed contains extended commands for Mozilla's Ubiquity.</p>
<p>Get Ubiquity here: <a href="https://bitbucket.org/satyr/ubiquity/downloads/tip.xpi">https://bitbucket.org/satyr/ubiquity/downloads/tip.xpi</a></p>
<ol>
    <item>BOOKMARKLETS </item>
    <item>diaspora: Share the current page on Diaspora</item>
    <item>paste_passwords: Attempt to allow pasting into password fields in pages that have programmatically disallowed it</item>
    <item>plus: Share the current page on Google Plus</item>
    <item>textarea2editor: Triple-click a plain textarea to turn it into a Code Editor using the ACE Bookmarklet</item>
    <item>wishlist: Execute the Amazon Universal Wishlist bookmarklet</item>
    <item>COMMANDS </item>
	<item>aarne-thompson: Returns the type of an aarne-thompson number</item>
    <item>Amazon.de: Searches Amazon.de for items matching your words</item>
    <item>beautify_js: Beautifies JavaScript code using the engine behind jsbeautifier.org</item>
    <item>bigpicture: Previews Boston.com's The Big Picture (from RSS Feed)</item>
    <item>calcg: Calculates using Google Calculator</item>
    <item>chart: Turn numeric data into charts using the Google Charts API</item>
    <item>color: Accepts a textual color code and previews it. Pressing enter inserts a small block of that color at the cursor</item>
    <item>datatable: Enhances tables in the page to make them sortable, filterable, etc. using jQuery and the datatables plugin from http://datatables.net. Takes a tableid as argument or applies to all tables if nothing is passed.</item>
    <item>decode: Decodes URL-encoded text</item>
    <item>dict: Searches Dict.cc for a German/English term and loads results in the preview pane</item>
    <item>dictes: Searches Dict.cc for a German/Spanish term and loads the results in the preview pane</item>
    <item>encode: URL-encodes text</item>
    <item>fortune: Retrieves a Unix Fortune from the online service ihearquotes.com</item>
    <item>get-color: Grab colors from web pages</item>
    <item>lds: Searches LDS.org and loads results into the Preview pane</item>
    <item>url parser: Breaks URLS into their components</item>
    <item>qrcode: Generates a QR Code with the specified text encoded</item>
    <item>stock-chart: Displays a stock chart for the given ticker (from Yahoo! finance)</item>
    <item>text2html: Renders plain text as HTML</item>
    <item>wolf: Searches WolframAlpha and loads results in to Preview pane</item>    
    <item>yubnub: Executes YubNub commands and loads results in to Preview pane where possible.</item>    
</ol>
<!-- ============================================ -->
<!--	Template for Amazon Search                -->
<!-- ============================================ -->
<div id="amazon-search">
<style>
  ol, ul {list-style: none; margin: 0; padding: 0}
  img {float: right; margin: 0 0 0.5em 0.5em}
  kbd {vertical-align: middle; text-transform: uppercase}
  kbd:after {content: ":"}
  kbd, .price {font-weight: bolder}
  .item {margin-top: 0.4em; clear: right}
  .feature {margin-top: 0.2em}
  .price, .author, .label, .feature {font-size: 88%}
  .author:before {content: "by "}
  .feature:before {content: "\2022  "}
</style>
${matchMessage}
<ol>
{for item in items}
  <li class="item">
    {if item.image}
      <a href="${item.url}"><img src="${item.image.src}" border="0"
        height="${item.image.height}" width="${item.image.width}"/></a>
    {/if}
    <kbd>${item.key}</kbd>
    <a href="${item.url}" accesskey="${item.key}">${item.title}</a>
    {if item.price}
      <nobr class="price">
        ${item.price.amount} (${item.price.currency})
      </nobr>
    {/if}
    {if item.author}
      <div class="author">${item.author}</div>
    {/if}
    {if item.label}
      <div class="label">${item.label}</div>
    {/if}
    <ul>
    {for feature in item.features}
      <li class="feature">${feature}</li>
    {/for}
    </ul>
  </li>
{/for}
</ol>
</div>

<!-- ============================================ -->
<!--	Template for Big Picture				  -->
<!-- ============================================ -->
<div id="big-picture">
<style>
div.container { 
	font-size: 12px; 
	margin: 5px 0 35px 0;
	max-width: 470px;
}
.header { 
	background-color: #444;
	padding: 10px;
	border-radius: 10px 10px 0 0;
}
span.image {
	display:block;
	margin-top: 5px; 
	background-color: #444;
	border-radius: 0px 10px 10px 10px;
	padding: 10px;
}
img { border-radius: 10px; }
</style>
{for item in items}
    <div class='container'>
		<a href='${item.permalink}'>
			<span class='header'><span class='date'>${item.pubDate}</span> | ${item.title}</span>
			<br/><span class='image'>${item.image}</span>
		</a>
    </div>
{/for}
</div>

<!-- ============================================ -->
<!--	Template for dict.cc					  -->
<!-- ============================================ -->
<div id="dict">
<style>
.entry { padding: 10px; }
.entry h2 {
	font-size: .9rem;
	margin: 0px;
}
.entry div { margin-left: 20px; }
.entry a { text-decoration: none; }
.entry a:hover { text-decoration: underline; }
</style>
{for item in items}
	<div class='entry ${item.class}'>
		<h2>${item.entry}</h2>
		<div>${item.description}</div>
	</div>
{/for}
</div>

<!-- ============================================ -->
<!--	Template for DuckDuckGo 				  -->
<!-- ============================================ -->
<div id="duckduckgo">
<style>
.header:not(:empty) {
    font-weight:800;
    text-transform: uppercase;
}
div.container { 
	max-width: 470px;
}
div {
	display:block;
    padding: 10px 5px 5px 5px; 
    border: 1px solid #666666;
    margin: 10px 0;
    border-radius: 15px;
}
div:empty {
    display: none;
}
a {
    color: #DDEEFF
}
img { border-radius: 10px; }
li {
    list-style: none;
    margin: 3px 0px;
}
</style>
<div>${Image}</div>
<div>${Abstract}</div>
<div>${Answer}</div>
<div>${Definition}</div>
{for item in RelatedTopics}
    <div class='container'>
		${item.Result}<span class='header'>${item.Name}</span>
        <ul>
            {for topic in item.Topics}
                <li>
                    <img src='${topic.Icon.URL}'/>
                    ${topic.Result}
                </li>
            {/for}
        </ul>
    </div>
{/for}
</div>



<script type="?" class="commands">
<![CDATA[
/**
 * Bookmarklets
 * Execute a variety of bookmarklets
 */
CmdUtils.makeBookmarkletCommand({
	names: ["diaspora", "Share on Diaspora"],
	icon: "http://joindiaspora.com/favico.ico",
	description: "Share the current page on Diaspora",
	url: "javascript:(function(){f='https://diasp.org/bookmarklet?url='+encodeURIComponent(window.location.href)+'&title='+encodeURIComponent(document.title)+'&notes='+encodeURIComponent(''+(window.getSelection?window.getSelection():document.getSelection?document.getSelection():document.selection.createRange().text))+'&v=1&';a=function(){if(!window.open(f+'noui=1&jump=doclose','diasporav1','location=yes,links=no,scrollbars=no,toolbar=no,width=620,height=250'))location.href=f+'jump=yes'};if(/Firefox/.test(navigator.userAgent)){setTimeout(a,0)}else{a()}})()"
})

CmdUtils.makeBookmarkletCommand({
	names: ["paste_passwords", "Allow Password Pasting"],
	description: "Attempt to allow pasting into password fields in pages that have programmatically disallowed it",
	url: "javascript:(function(){var%20inputs=document.getElementsByTagName('input');for(var%20i=0;i<inputs.length;i++){if(inputs[i].getAttribute('type').toLowerCase()==='password'){inputs[i].setAttribute('onpaste','');}}})();"
})

CmdUtils.makeBookmarkletCommand({	
	names: ["plus", "Share on Google+"],
	icon: "https://www.gstatic.com/images/icons/gplus-64.png",
	description: "Share the current page on Google Plus",
	url: "javascript:void(window.open('https://plus.google.com/share?ur\l='+encodeURIComponent(location),%20'Share%20to%20Google+','width=600,height=460,menubar=no,location=no,status=no'))"
})

CmdUtils.makeBookmarkletCommand({
	names: ["textarea2editor"],
    icon: "http://ajaxorg.github.com/ace/doc/site/images/ace-tab.png",
	description: "Triple-click a plain textarea to turn it into a Code Editor using the ACE Bookmarklet",
    url: "javascript:(function%20inject(callback)%20{%20var%20baseUrl='https://ajaxorg.github.com/ace-builds/src-noconflict/';%20var%20load%20=%20window.__ace_loader__%20=%20function(path,%20module,%20callback)%20{%20var%20head%20=%20document.getElementsByTagName('head')[0];%20var%20s%20=%20document.createElement('script');%20s.src%20=%20baseUrl%20+%20path;%20head.appendChild(s);%20s.onload%20=%20function()%20{%20window.__ace_shadowed__.require([module],%20callback);%20};%20};%20load('ace-bookmarklet.js',%20'ace/ext/textarea',%20function()%20{%20var%20ace%20=%20window.__ace_shadowed__;%20ace.options%20=%20{mode:'javascript',theme:'twilight',gutter:'false',fontSize:'12px',softWrap:'off',keybindings:'ace',showPrintMargin:'false',useSoftTabs:'true',showInvisibles:'false'%20};%20var%20Event%20=%20ace.require('ace/lib/event');%20var%20areas%20=%20document.getElementsByTagName('textarea');%20for%20(var%20i%20=%200;%20i%20<%20areas.length;%20i++)%20{%20Event.addListener(areas[i],%20'click',%20function(e)%20{%20if%20(e.detail%20==%203)%20{%20ace.transformTextarea(e.target,%20load);%20}%20});%20}%20callback%20&&%20callback();%20});%20})()"
})

CmdUtils.makeBookmarkletCommand({
	names: ["wishlist", "Amazon universal wishlist"],
	description: "Execute the Amazon Universal Wishlist bookmarklet",
	url: "javascript:(function(){var%20w=window,l=w.location,d=w.document,s=d.createElement('script'),e=encodeURIComponent,x='undefined',u='http://www.amazon.com/wishlist/add';if(typeof%20s!='object')l.href=u+'?u='+e(l)+'&t='+e(d.title);function%20g(){if(d.readyState&&d.readyState!='complete'){setTimeout(g,200);}else{if(typeof%20AUWLBook==x)s.setAttribute('src',u+'.js?loc='+e(l)),d.body.appendChild(s);function%20f(){(typeof%20AUWLBook==x)?setTimeout(f,200):AUWLBook.showPopover();}f();}}g();}())"
})

/**
 * Search commands
 */
CmdUtils.makeSearchCommand({
    name: "dhl",
    icon: "http://www.dhl.de/favicon.ico",
    description: "Search dhl.de for a package number",
    url: "http://nolp.dhl.de/nextt-online-public/set_identcodes.do?lang=en&idc={QUERY}&rfn=&extendedSearch=true",
});
 
/** ************************************************************************************************
 * aarne-thompson
 * Returns the type of an aarne-thompson number
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["aarne-thompson", "atnum"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-3875d7/shapecolor-no/shadow-0/border-no/symbolstyle-color/symbolshadowstyle-white/gradient-no/book.png",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Returns the type of an aarne-thompson number. Useful for folklorists (see <a href='http://en.wikipedia.org/wiki/Aarne%E2%80%93Thompson_classification_system'>Wikipedia entry</a>)",
  __db: [{"type":"Wild Animals","min":1,"max":99}, {"type":"The Clever Fox (Other Animal)","min":1,"max":69}, {"type":"Other Wild Animals","min":70,"max":99}, {"type":"Wild Animals and Domestic Animals","min":100,"max":149}, {"type":"Wild Animals and Humans","min":150,"max":199}, {"type":"Domestic Animals","min":200,"max":219}, {"type":"Other Animals and Objects","min":220,"max":299}, {"type":"Supernatural Adversaries","min":300,"max":399}, {"type":"Supernatural or Enchanted Wife (Husband) or Other Relative","min":400,"max":459}, {"type":"Wife","min":400,"max":424}, {"type":"Husband","min":425,"max":449}, {"type":"Brother or Sister","min":450,"max":459}, {"type":"Supernatural Tasks","min":460,"max":499}, {"type":"Supernatural Helpers","min":500,"max":559}, {"type":"Magic Objects","min":560,"max":649}, {"type":"Supernatural Power or Knowledge","min":650,"max":699}, {"type":"Other Tales of the Supernatural","min":700,"max":749}, {"type":"God Rewards and Punishes","min":750,"max":779}, {"type":"The Truth Comes to Light","min":780,"max":799}, {"type":"Heaven","min":800,"max":809}, {"type":"The Devil","min":810,"max":826}, {"type":"Other Religious Tales","min":827,"max":849}, {"type":"The Man Marries the Princess","min":850,"max":869}, {"type":"The Woman Marries the Prince","min":870,"max":879}, {"type":"Proofs of FidelitY and Innocence","min":880,"max":899}, {"type":"The Obstinate Wife Learns to Obey","min":900,"max":909}, {"type":"Good Precepts","min":910,"max":919}, {"type":"Clever Acts and Words","min":920,"max":929}, {"type":"Tales of Fate","min":930,"max":949}, {"type":"Robbers and Murderers","min":950,"max":969}, {"type":"Other Realistic Tales","min":970,"max":999}, {"type":"Labor Contract","min":1000,"max":1029}, {"type":"Partnership between Man and Ogre","min":1030,"max":1059}, {"type":"Contest between Man and Ogre","min":1060,"max":1114}, {"type":"Man Kills (Injures) Ogre","min":1115,"max":1144}, {"type":"Ogre Frightened by Man","min":1145,"max":1154}, {"type":"Man Outwits the Devil","min":1155,"max":1169}, {"type":"Souls Saved from the Devil","min":1170,"max":1199}, {"type":"Stories about a Fool","min":1200,"max":1349}, {"type":"Stories about Married Couples","min":1350,"max":1439}, {"type":"The Foolish Wife and Her Husband","min":1380,"max":1404}, {"type":"The Foolish Husband and His Wife","min":1405,"max":1429}, {"type":"The Foolish Couple","min":1430,"max":1439}, {"type":"Stories about a Woman","min":1440,"max":1524}, {"type":"Looking for a Wife","min":1450,"max":1474}, {"type":"Jokes about Old Maids","min":1475,"max":1499}, {"type":"Other Stories about Women","min":1500,"max":1524}, {"type":"Stories about a Man","min":1525,"max":1724}, {"type":"The Clever Man","min":1525,"max":1639}, {"type":"Lucky Accidents","min":1640,"max":1674}, {"type":"The Stupid Man","min":1675,"max":1724}, {"type":"Jokes about Clergymen and Religious Figures","min":1725,"max":1849}, {"type":"The Clergyman is Tricked","min":1725,"max":1774}, {"type":"Clergyman and Sexton","min":1775,"max":1799}, {"type":"Other Jokes about Religious Figures","min":1800,"max":1849}, {"type":"Anecdotes about Other Groups of People","min":1850,"max":1874}, {"type":"Tall Tales","min":1875,"max":1999}, {"type":"Cumulative Tales","min":2000,"max":2100}, {"type":"Chains Based on Numbers, Objects, Animals, or Names","min":2000,"max":2020}, {"type":"Chains Involving Death","min":2021,"max":2024}, {"type":"Chains Involving Eating","min":2025,"max":2028}, {"type":"Chains Involving Other Events","min":2029,"max":2075}, {"type":"Catch Tales","min":2200,"max":2299}, {"type":"Other Formula Tales","min":2300,"max":2399}],
  preview: function(pblock, input) {
    var input = jQuery.trim(input.object.text).replace(/\D+/, ''),
		results = [],
		types = this.__db
					.filter(function(d){
						return input >= d.min && input <=d.max
					})
					.map(function(d){
						results.push(d.type)
					})
					
		pblock.innerHTML = results.length == 0 ? "No match found" 
								: "<ul><li>" + results.join("</li><li>") + "</li></ul>"
  }
})

/** ************************************************************************************************
 * Amazon.de
 * Search amazon.de
 * *********************************************************************************************** */
// Clone of amazon.com for amazon.de
var AmazonDE = "http://www.amazon.de/";
var AmazDeLink = "Amazon.de".link(AmazonDE);
var noun_type_amazon_de_index = CmdUtils.NounType("index", {
  All: 0,
  Apparel: 15683091,
  Automotive: 15690151,
  Baby: 3760931,
  Beauty: 11055981,
  Books: 1000,
  Classical: 301668,
  DigitalMusic: 301668,
  DVD: 130,
  Electronics: 493964,
  GourmetFood: 3580501,
  Grocery: 10746371,
  HealthPersonalCare: 3760931,
  HomeGarden: 1063498,
  Industrial: 228013,
  Jewelry: 3880591,
  Kitchen: 1063498,
  Magazines: 44264011,
  Merchants: 493964,
  Miscellaneous: 349028011,
  Music: 301668,
  MusicalInstruments: 12923151,
  OfficeProducts: 1084128,
  OutdoorLiving: 1063498,
  PCHardware: 493964,
  PetSupplies: 13900811,
  Photo: 13900861,
  Shoes: 3375301,
  Software: 409488,
  SportingGoods: 1036682,
  Tools: 228013,
  Toys: 130,
  VHS: 404272,
  Video: 130,
  VideoGames: 44263011,
  Watches: 378516011,
  Wireless: 408234,
  WirelessAccessories: 408234,
}, "All");
var AWS_ENDPOINT = "ecs.amazonaws.de";
var AWS_REQUESTURI = "/onca/xml";
// This key is linked to Blair McBride's AWS account - and only free services are enabled.
// Please don't re-use it or abuse it. Instead, get your own AWS key - its free.
var AWS_KEY = "08WX39XKK81ZEWHZ52R2";
var AWS_SECRET = "w0WOQNS+GZcJWjrAmlK885tFi6rcrr9WOgeu6eK3";

function amazon_doEscape(aString) (
  encodeURIComponent(aString)
  .replace(/[!\'()*]+/g, function escape0(s) escape(s, 0)));
function amazon_signRequest(aParams) {
  var key;
  var params = {};
  for (key in aParams)
    params[key] = aParams[key];
  params.Timestamp = new Date().toISOString().slice(0, -5) + "Z";
  params.AWSAccessKeyId = AWS_KEY;
  var paramArray = [];
  for (key in params)
    paramArray.push(amazon_doEscape(key) + "=" + amazon_doEscape(params[key]));
  paramArray.sort();
  var paramString = paramArray.join("&");
  var sigBaseString =
    "GET\n" + AWS_ENDPOINT + "\n" + AWS_REQUESTURI + "\n" + paramString;
  var signature = Utils.signHmac("SHA256", AWS_SECRET, sigBaseString);
  return ("http://" + AWS_ENDPOINT + AWS_REQUESTURI + "?" +
          paramString + "&Signature=" + amazon_doEscape(signature));
}

CmdUtils.CreateCommand({
  names: ["Amazon.de"],
  icon: "chrome://ubiquity/skin/icons/amazon.ico",
  author: {name:"Modified for .de by g2010a"},
  description: "Searches " + AmazDeLink + " for items matching your words.",
  help: '<dl><dt>Available Indices</dt><dd><b>'+
    noun_type_amazon_de_index._list.reduce(function (dd, s) {
      return dd + s.text + ' '
    }, '')
  +'</b></dd></dl>',
  arguments: [
    {role: "object", nountype: noun_arb_text, label: "search term"},
    {role: "format", nountype: noun_type_amazon_de_index}],
  execute: function amazon_execute({object: {text}, format: {data}}) {
    Utils.openUrlInBrowser( 
      AmazonDE + "s/ref=nb_ss_noss" +
      Utils.paramsToString({"__mk_de_DE": "%C3%85M%C3%85Z%C3%95%C3%91", url: "search-alias%3D" + data, "field-keywords": text}))
  },
  preview: function(previewBlock,
                    {object: {text, summary}, format: {text: searchIndex}}) {
    if (!text) return void this.previewDefault(previewBlock);

    var me = this;
    previewBlock.innerHTML =
      _("Searching ${AmazDeLink} for items matching <b>${query}</b>.",
        {AmazDeLink: AmazDeLink, query: summary});
    CmdUtils.previewAjax(previewBlock, {
      url: amazon_signRequest({
        Service: "AWSECommerceService",
        Version: "2008-08-19",
        Operation: "ItemSearch",
        Condition: "All",
        Merchant: "All",
        ResponseGroup: "ItemAttributes,Images",
        AssociateTag: "matyr-22", // required
        SearchIndex: searchIndex,
        Keywords: text,
      }),
      dataType: "xml",
      error: function amazon_error(xhr, info) {
        previewBlock.innerHTML = (
          "<p class='error'>" +
          _("Error searching ${AmazDeLink}.", {AmazDeLink: AmazDeLink}) +
          "<br/><em>" + xhr.status + " " + xhr.statusText +
          " (" + info + ")</em></p>");
        // TODO: think of a better way to localize API errors, if possible.
      },
      success: function amazon_success(responseData) {
        responseData = jQuery(responseData);
        var errorMessage = responseData.find("Error > Message").text();
        if (errorMessage) {
          previewBlock.innerHTML =
            "<p class='error'>" + _(errorMessage) + "</p>";
          return;
        }
        const MAX_RESULTS = 35; // 1 ~ 9, a ~ z
        function iter(itemIndex) {
          var itemDetails = jQuery(this),
          itemAttrs = itemDetails.find("ItemAttributes"),
          listPrice = itemAttrs.find("ListPrice"),
          smallImage = itemDetails.find("SmallImage:first");
          return {
            title: itemAttrs.find("Title").text(),
            url: itemDetails.find("DetailPageURL").text(),
            key: (itemIndex + 1).toString(MAX_RESULTS + 1),
            author: (itemAttrs.find("Author")
                     .map(function() this.textContent).get().join(', ')),
            features: (itemAttrs.find("Feature")
                       .map(function() this.textContent).get()),
            label: itemAttrs.find("Label").text(),
            price: listPrice.length && {
              amount: listPrice.find("FormattedPrice").text(),
              currency: listPrice.find("CurrencyCode").text(),
            },
            image: smallImage.length && {
              src: smallImage.find("URL").text(),
              height: smallImage.find("Height").text(),
              width: smallImage.find("Width").text(),
            }
          };
        }
        previewBlock.innerHTML = CmdUtils.renderTemplate(
          feed.dom.getElementById("amazon-search").innerHTML,
          { items: (responseData.find("Items > Item").slice(0, MAX_RESULTS)
                    .map(iter).get()),
            matchMessage: _(
              ("Found <b>${numitems}</b> item{if numitems > 1}s{/if} on " +
               "<a href='http://www.amazon.de/'>Amazon.de</a> " +
               "matching <b>${query}</b>."),
              { numitems: responseData.find("Items > TotalResults").text(),
                query: text }) });
      }
    });
  }
});

/** *********************************************************
 * Beautifier/formatter for javascript
 * **********************************************************/

CmdUtils.CreateCommand({
    names: ["beautify_js", "format_js"],
    arguments: [{role:"object", label:"input", nountype: noun_arb_text}],
    icon: "http://jsbeautifier.org/favicon.ico",
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:'g2010a'},
    description: "Beautifies (formats) JavaScript code using the engine behind jsbeautifier.org",
    __js_beautify: function (js_source_text, options) {
        "use strict";
        var beautifier = new this.__Beautifier(js_source_text, options)
        return beautifier.beautify()
    },
    __Beautifier: function(e,t){"use strict";function O(e,t){return{mode:t,last_text:e?e.last_text:"",last_word:e?e.last_word:"",var_line:false,var_line_tainted:false,var_line_reindented:false,in_html_comment:false,multiline_array:false,if_block:false,do_block:false,do_while:false,in_case_statement:false,in_case:false,case_body:false,indentation_level:e?e.indentation_level+(e.var_line&&e.var_line_reindented?1:0):0,ternary_depth:0}}function M(e){e=e===undefined?false:e;while(r.length&&(r[r.length-1]===" "||r[r.length-1]===a||r[r.length-1]===A||e&&(r[r.length-1]==="\n"||r[r.length-1]==="\r"))){r.pop()}}function _(e){return e.replace(/^\s\s*|\s\s*$/,"")}function D(e){e=e.replace(/\x0d/g,"");var t=[],n=e.indexOf("\n");while(n!==-1){t.push(e.substring(0,n));e=e.substring(n+1);n=e.indexOf("\n")}if(e.length){t.push(e)}return t}function P(){return r.length&&r[r.length-1]==="\n"}function H(){return P()&&r.length-1>0&&r[r.length-2]==="\n"}function B(e,t){var n=e.length-1;if(n<0){n+=e.length}if(n>e.length-1){n=e.length-1}for(n++;n-->0;){if(n in e&&e[n]===t){return n}}return-1}function j(e){e=e===undefined?false:e;if(L.wrap_line_length&&!e){var t="";var n=0;var s=B(r,"\n")+1;if(s<r.length){t=r.slice(s).join("");n=t.length+i.length+(S?1:0);if(n>=L.wrap_line_length){e=true}}}if((L.preserve_newlines&&w||e)&&!P()){F(false,true);E=true;w=false}}function F(e,t){E=false;S=false;if(!t){if(f.last_text!==";"){while(f.mode===k.Statement&&!f.if_block){$()}}}if(f.mode===k.ArrayLiteral){f.multiline_array=true}if(!r.length){return}if(e||!P()){r.push("\n")}}function I(){if(P()){if(L.keep_array_indentation&&X(f.mode)&&N.length){r.push(N.join("")+"")}else{if(A){r.push(A)}q(f.indentation_level);q(f.var_line&&f.var_line_reindented);q(E)}}}function q(e){if(e===undefined){e=1}else if(typeof e!=="number"){e=e?1:0}if(f.last_text!==""){for(var t=0;t<e;t+=1){r.push(a)}}}function R(){if(S&&r.length){var e=r[r.length-1];if(!P()&&e!==" "&&e!==a){r.push(" ")}}}function U(e){e=e||i;I();E=false;R();S=false;r.push(e)}function z(){f.indentation_level+=1}function W(e){if(f){c.push(f);l=f}else{l=O(null,e)}f=O(l,e)}function X(e){return e===k.ArrayLiteral}function V(e){return G(e,[k.Expression,k.ForInitializer,k.Conditional])}function $(){if(c.length>0){l=f;f=c.pop()}}function J(){if(f.last_text==="do"||f.last_text==="else"&&i!=="if"||o==="TK_END_EXPR"&&(l.mode===k.ForInitializer||l.mode===k.Conditional)){j();W(k.Statement);z();E=false;return true}return false}function K(e,t){for(var n=0;n<e.length;n++){var r=_(e[n]);if(r.charAt(0)!==t){return false}}return true}function Q(e){return G(e,["case","return","do","if","throw","else"])}function G(e,t){for(var n=0;n<t.length;n+=1){if(t[n]===e){return true}}return false}function Y(e){var t=false,n="",r=0,i="",s=0,o;while(t||r<e.length){o=e.charAt(r);r++;if(t){t=false;if(o==="x"){i=e.substr(r,2);r+=2}else if(o==="u"){i=e.substr(r,4);r+=4}else{n+="\\"+o;continue}if(!i.match(/^[0123456789abcdefABCDEF]+$/)){return e}s=parseInt(i,16);if(s>=0&&s<32){if(o==="x"){n+="\\x"+i}else{n+="\\u"+i}continue}else if(s===34||s===39||s===92){n+="\\"+String.fromCharCode(s)}else if(o==="x"&&s>126&&s<=255){return e}else{n+=String.fromCharCode(s)}}else if(o==="\\"){t=true}else{n+=o}}return n}function Z(e){var t=v;var r=n.charAt(t);while(G(r,h)&&r!==e){t++;if(t>=x){return false}r=n.charAt(t)}return r===e}function et(){var e,t;T=0;if(v>=x){return["","TK_EOF"]}w=false;N=[];var i=n.charAt(v);v+=1;while(G(i,h)){if(i==="\n"){T+=1;N=[]}else if(T){if(i===a){N.push(a)}else if(i!=="\r"){N.push(" ")}}if(v>=x){return["","TK_EOF"]}i=n.charAt(v);v+=1}if(G(i,p)){if(v<x){while(G(n.charAt(v),p)){i+=n.charAt(v);v+=1;if(v===x){break}}}if(v!==x&&i.match(/^[0-9]+[Ee]$/)&&(n.charAt(v)==="-"||n.charAt(v)==="+")){var s=n.charAt(v);v+=1;var u=et();i+=s+u[0];return[i,"TK_WORD"]}if(i==="in"){return[i,"TK_OPERATOR"]}return[i,"TK_WORD"]}if(i==="("||i==="["){return[i,"TK_START_EXPR"]}if(i===")"||i==="]"){return[i,"TK_END_EXPR"]}if(i==="{"){return[i,"TK_START_BLOCK"]}if(i==="}"){return[i,"TK_END_BLOCK"]}if(i===";"){return[i,"TK_SEMICOLON"]}if(i==="/"){var c="";var m=true;if(n.charAt(v)==="*"){v+=1;if(v<x){while(v<x&&!(n.charAt(v)==="*"&&n.charAt(v+1)&&n.charAt(v+1)==="/")){i=n.charAt(v);c+=i;if(i==="\n"||i==="\r"){m=false}v+=1;if(v>=x){break}}}v+=2;if(m&&T===0){return["/*"+c+"*/","TK_INLINE_COMMENT"]}else{return["/*"+c+"*/","TK_BLOCK_COMMENT"]}}if(n.charAt(v)==="/"){c=i;while(n.charAt(v)!=="\r"&&n.charAt(v)!=="\n"){c+=n.charAt(v);v+=1;if(v>=x){break}}return[c,"TK_COMMENT"]}}if(i==="'"||i==='"'||(i==="/"||L.e4x&&i==="<"&&n.slice(v-1).match(/^<[a-zA-Z:0-9]+\s*([a-zA-Z:0-9]+="[^"]*"\s*)*\/?\s*>/))&&(o==="TK_WORD"&&Q(f.last_text)||o==="TK_END_EXPR"&&G(l.mode,[k.Conditional,k.ForInitializer])||G(o,["TK_COMMENT","TK_START_EXPR","TK_START_BLOCK","TK_END_BLOCK","TK_OPERATOR","TK_EQUALS","TK_EOF","TK_SEMICOLON","TK_COMMA"]))){var y=i,b=false,E=false;t=i;if(v<x){if(y==="/"){var S=false;while(b||S||n.charAt(v)!==y){t+=n.charAt(v);if(!b){b=n.charAt(v)==="\\";if(n.charAt(v)==="["){S=true}else if(n.charAt(v)==="]"){S=false}}else{b=false}v+=1;if(v>=x){return[t,"TK_STRING"]}}}else if(L.e4x&&y==="<"){var C=/<(\/?)([a-zA-Z:0-9]+)\s*([a-zA-Z:0-9]+="[^"]*"\s*)*(\/?)\s*>/g;var A=n.slice(v-1);var O=C.exec(A);if(O&&O.index===0){var M=O[2];var D=0;while(O){var P=!!O[1];var H=O[2];var B=!!O[O.length-1];if(H===M&&!B){if(P){--D}else{++D}}if(D<=0){break}O=C.exec(A)}var j=O?O.index+O[0].length:A.length;v+=j-1;return[A.slice(0,j),"TK_STRING"]}}else{while(b||n.charAt(v)!==y){t+=n.charAt(v);if(b){if(n.charAt(v)==="x"||n.charAt(v)==="u"){E=true}b=false}else{b=n.charAt(v)==="\\"}v+=1;if(v>=x){return[t,"TK_STRING"]}}}}v+=1;t+=y;if(E&&L.unescape_strings){t=Y(t)}if(y==="/"){while(v<x&&G(n.charAt(v),p)){t+=n.charAt(v);v+=1}}return[t,"TK_STRING"]}if(i==="#"){if(r.length===0&&n.charAt(v)==="!"){t=i;while(v<x&&i!=="\n"){i=n.charAt(v);t+=i;v+=1}return[_(t)+"\n","TK_UNKNOWN"]}var F="#";if(v<x&&G(n.charAt(v),g)){do{i=n.charAt(v);F+=i;v+=1}while(v<x&&i!=="#"&&i!=="=");if(i==="#"){}else if(n.charAt(v)==="["&&n.charAt(v+1)==="]"){F+="[]";v+=2}else if(n.charAt(v)==="{"&&n.charAt(v+1)==="}"){F+="{}";v+=2}return[F,"TK_WORD"]}}if(i==="<"&&n.substring(v-1,v+3)==="<!--"){v+=3;i="<!--";while(n.charAt(v)!=="\n"&&v<x){i+=n.charAt(v);v++}f.in_html_comment=true;return[i,"TK_COMMENT"]}if(i==="-"&&f.in_html_comment&&n.substring(v-1,v+2)==="-->"){f.in_html_comment=false;v+=2;return["-->","TK_COMMENT"]}if(i==="."){return[i,"TK_DOT"]}if(G(i,d)){while(v<x&&G(i+n.charAt(v),d)){i+=n.charAt(v);v+=1;if(v>=x){break}}if(i===","){return[i,"TK_COMMA"]}else if(i==="="){return[i,"TK_EQUALS"]}else{return[i,"TK_OPERATOR"]}}return[i,"TK_UNKNOWN"]}function tt(){if(J()){}if(i==="["){if(o==="TK_WORD"||f.last_text===")"){if(G(f.last_text,m)){S=true}W(k.Expression);U();if(L.space_in_paren){S=true}return}if(X(f.mode)){if(f.last_text==="["||f.last_text===","&&(u==="]"||u==="}")){if(!L.keep_array_indentation){F()}}}}else{if(f.last_text==="for"){W(k.ForInitializer)}else if(G(f.last_text,["if","while"])){W(k.Conditional)}else{W(k.Expression)}}if(f.last_text===";"||o==="TK_START_BLOCK"){F()}else if(o==="TK_END_EXPR"||o==="TK_START_EXPR"||o==="TK_END_BLOCK"||f.last_text==="."){if(w){F()}}else if(o!=="TK_WORD"&&o!=="TK_OPERATOR"){S=true}else if(f.last_word==="function"||f.last_word==="typeof"){if(L.jslint_happy){S=true}}else if(G(f.last_text,m)||f.last_text==="catch"){if(L.space_before_conditional){S=true}}if(i==="("){if(o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}}U();if(L.space_in_paren){S=true}if(i==="["){W(k.ArrayLiteral);z()}if(b){b=false;z()}}function nt(){while(f.mode===k.Statement){$()}if(i==="]"&&X(f.mode)&&f.multiline_array&&!L.keep_array_indentation){F()}$();if(L.space_in_paren){S=true}U();if(f.do_while&&l.mode===k.Conditional){l.mode=k.Expression;f.do_block=false;f.do_while=false}}function rt(){W(k.BlockStatement);var e=Z("}");var t=e&&f.last_word==="function"&&o==="TK_END_EXPR";if(L.brace_style==="expand"){if(o!=="TK_OPERATOR"&&(t||o==="TK_EQUALS"||Q(f.last_text)&&f.last_text!=="else")){S=true}else{F()}}else{if(o!=="TK_OPERATOR"&&o!=="TK_START_EXPR"){if(o==="TK_START_BLOCK"){F()}else{S=true}}else{if(X(l.mode)&&f.last_text===","){if(u==="}"){S=true}else{F()}}}}U();z()}function it(){while(f.mode===k.Statement){$()}$();var e=o==="TK_START_BLOCK";if(L.brace_style==="expand"){if(!e){F()}}else{if(!e){if(X(f.mode)&&L.keep_array_indentation){L.keep_array_indentation=false;F();L.keep_array_indentation=true}else{F()}}}U()}function st(){if(J()){}else if(w&&!V(f.mode)&&(o!=="TK_OPERATOR"||f.last_text==="--"||f.last_text==="++")&&o!=="TK_EQUALS"&&(L.preserve_newlines||f.last_text!=="var")){F()}if(f.do_block&&!f.do_while){if(i==="while"){S=true;U();S=true;f.do_while=true;return}else{F();f.do_block=false}}if(b&&Q(i)){b=false}if(f.if_block){if(i!=="else"){while(f.mode===k.Statement){$()}f.if_block=false}}if(i==="function"){if(f.var_line&&o!=="TK_EQUALS"){f.var_line_reindented=true}if((P()||f.last_text===";"||f.last_text==="}")&&f.last_text!=="{"&&!X(f.mode)){if(!P()){F(true)}if(!H()){F(true)}}if(o==="TK_WORD"){if(f.last_text==="get"||f.last_text==="set"||f.last_text==="new"||f.last_text==="return"){S=true}else{F()}}else if(o==="TK_OPERATOR"||f.last_text==="="){S=true}else if(V(f.mode)){}else{F()}U();f.last_word=i;return}if(i==="case"||i==="default"&&f.in_case_statement){F();if(f.case_body||L.jslint_happy){f.indentation_level--;f.case_body=false}U();f.in_case=true;f.in_case_statement=true;return}y="NONE";if(o==="TK_END_BLOCK"){if(!G(i,["else","catch","finally"])){y="NEWLINE"}else{if(L.brace_style==="expand"||L.brace_style==="end-expand"){y="NEWLINE"}else{y="SPACE";S=true}}}else if(o==="TK_SEMICOLON"&&f.mode===k.BlockStatement){y="NEWLINE"}else if(o==="TK_SEMICOLON"&&V(f.mode)){y="SPACE"}else if(o==="TK_STRING"){y="NEWLINE"}else if(o==="TK_WORD"){y="SPACE"}else if(o==="TK_START_BLOCK"){y="NEWLINE"}else if(o==="TK_END_EXPR"){S=true;y="NEWLINE"}if(G(i,m)&&f.last_text!==")"){if(f.last_text==="else"){y="SPACE"}else{y="NEWLINE"}}if(o==="TK_COMMA"||o==="TK_START_EXPR"||o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}if(G(i,["else","catch","finally"])){if(o!=="TK_END_BLOCK"||L.brace_style==="expand"||L.brace_style==="end-expand"){F()}else{M(true);if(r[r.length-1]!=="}"){F()}S=true}}else if(y==="NEWLINE"){if(Q(f.last_text)){S=true}else if(o!=="TK_END_EXPR"){if((o!=="TK_START_EXPR"||i!=="var")&&f.last_text!==":"){if(i==="if"&&f.last_word==="else"&&f.last_text!=="{"){S=true}else{f.var_line=false;f.var_line_reindented=false;F()}}}else if(G(i,m)&&f.last_text!==")"){f.var_line=false;f.var_line_reindented=false;F()}}else if(X(f.mode)&&f.last_text===","&&u==="}"){F()}else if(y==="SPACE"){S=true}U();f.last_word=i;if(i==="var"){f.var_line=true;f.var_line_reindented=false;f.var_line_tainted=false}if(i==="do"){f.do_block=true}if(i==="if"){f.if_block=true}}function ot(){while(f.mode===k.Statement&&!f.if_block){$()}U();f.var_line=false;f.var_line_reindented=false;if(f.mode===k.ObjectLiteral){f.mode=k.BlockStatement}}function ut(){if(J()){S=true}else if(o==="TK_WORD"){S=true}else if(o==="TK_COMMA"||o==="TK_START_EXPR"||o==="TK_EQUALS"||o==="TK_OPERATOR"){if(f.mode!==k.ObjectLiteral){j()}}else{F()}U()}function at(){if(f.var_line){f.var_line_tainted=true}S=true;U();S=true}function ft(){if(f.var_line){if(V(f.mode)||o==="TK_END_BLOCK"){f.var_line_tainted=false}if(f.var_line){f.var_line_reindented=true}U();if(f.var_line_tainted){f.var_line_tainted=false;F()}else{S=true}return}if(o==="TK_END_BLOCK"&&f.mode!==k.Expression){U();if(f.mode===k.ObjectLiteral&&f.last_text==="}"){F()}else{S=true}}else{if(f.mode===k.ObjectLiteral){U();F()}else{U();S=true}}}function lt(){var e=true;var t=true;if(Q(f.last_text)){S=true;U();return}if(i==="*"&&o==="TK_DOT"&&!u.match(/^\d+$/)){U();return}if(i===":"&&f.in_case){f.case_body=true;z();U();F();f.in_case=false;return}if(i==="::"){U();return}if(w&&(i==="--"||i==="++")){F()}if(G(i,["--","++","!"])||G(i,["-","+"])&&(G(o,["TK_START_BLOCK","TK_START_EXPR","TK_EQUALS","TK_OPERATOR"])||G(f.last_text,m)||f.last_text===",")){e=false;t=false;if(f.last_text===";"&&V(f.mode)){e=true}if(o==="TK_WORD"&&G(f.last_text,m)){e=true}if((f.mode===k.BlockStatement||f.mode===k.Statement)&&(f.last_text==="{"||f.last_text===";")){F()}}else if(i===":"){if(f.ternary_depth===0){if(f.mode===k.BlockStatement){f.mode=k.ObjectLiteral}e=false}else{f.ternary_depth-=1}}else if(i==="?"){f.ternary_depth+=1}S=S||e;U();S=t}function ct(){var e=D(i);var t;if(K(e.slice(1),"*")){F(false,true);U(e[0]);for(t=1;t<e.length;t++){F(false,true);U(" "+_(e[t]))}}else{if(e.length>1){F(false,true)}else{if(o==="TK_END_BLOCK"){F(false,true)}else{S=true}}U(e[0]);r.push("\n");for(t=1;t<e.length;t++){r.push(e[t]);r.push("\n")}}if(!Z("\n")){F(false,true)}}function ht(){S=true;U();S=true}function pt(){if(w){F(false,true)}else{M(true)}S=true;U();F(false,true)}function dt(){if(Q(f.last_text)){S=true}else{j(f.last_text===")"&&L.break_chained_methods)}if(P()){b=true}U()}function vt(){U();if(i[i.length-1]==="\n"){F()}}var n,r,i,s,o,u,a;var f,l,c;var h,p,d,v,m,g;var y,b;var w;var E,S;var x,T,N;var C,k,L;var A="";h="\n\r	 ".split("");p="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_$".split("");g="0123456789".split("");d="+ - * / % & ++ -- = += -= *= /= %= == === != !== > < >= <= >> << >>> >>>= >>= <<= && &= | || ! !! , : ? ^ ^= |= ::";d+=" <%= <% %> <?= <? ?>";d=d.split(" ");m="continue,try,throw,return,var,if,switch,case,default,for,while,break,function".split(",");k={BlockStatement:"BlockStatement",Statement:"Statement",ObjectLiteral:"ObjectLiteral",ArrayLiteral:"ArrayLiteral",ForInitializer:"ForInitializer",Conditional:"Conditional",Expression:"Expression"};C={TK_START_EXPR:tt,TK_END_EXPR:nt,TK_START_BLOCK:rt,TK_END_BLOCK:it,TK_WORD:st,TK_SEMICOLON:ot,TK_STRING:ut,TK_EQUALS:at,TK_OPERATOR:lt,TK_COMMA:ft,TK_BLOCK_COMMENT:ct,TK_INLINE_COMMENT:ht,TK_COMMENT:pt,TK_DOT:dt,TK_UNKNOWN:vt};t=t?t:{};L={};if(t.space_after_anon_function!==undefined&&t.jslint_happy===undefined){t.jslint_happy=t.space_after_anon_function}if(t.braces_on_own_line!==undefined){L.brace_style=t.braces_on_own_line?"expand":"collapse"}L.brace_style=t.brace_style?t.brace_style:L.brace_style?L.brace_style:"collapse";if(L.brace_style==="expand-strict"){L.brace_style="expand"}L.indent_size=t.indent_size?parseInt(t.indent_size,10):4;L.indent_char=t.indent_char?t.indent_char:" ";L.preserve_newlines=t.preserve_newlines===undefined?true:t.preserve_newlines;L.break_chained_methods=t.break_chained_methods===undefined?false:t.break_chained_methods;L.max_preserve_newlines=t.max_preserve_newlines===undefined?0:parseInt(t.max_preserve_newlines,10);L.space_in_paren=t.space_in_paren===undefined?false:t.space_in_paren;L.jslint_happy=t.jslint_happy===undefined?false:t.jslint_happy;L.keep_array_indentation=t.keep_array_indentation===undefined?false:t.keep_array_indentation;L.space_before_conditional=t.space_before_conditional===undefined?true:t.space_before_conditional;L.unescape_strings=t.unescape_strings===undefined?false:t.unescape_strings;L.wrap_line_length=t.wrap_line_length===undefined?0:parseInt(t.wrap_line_length,10);L.e4x=t.e4x===undefined?false:t.e4x;a="";while(L.indent_size>0){a+=L.indent_char;L.indent_size-=1}while(e&&(e.charAt(0)===" "||e.charAt(0)==="	")){A+=e.charAt(0);e=e.substring(1)}n=e;x=e.length;o="TK_START_BLOCK";u="";r=[];E=false;S=false;N=[];c=[];W(k.BlockStatement);v=0;this.beautify=function(){var e,t,n,a;while(true){e=et();i=e[0];s=e[1];if(s==="TK_EOF"){break}n=L.keep_array_indentation&&X(f.mode);if(n){for(t=0;t<T;t+=1){F(true)}}else{w=T>0;if(L.max_preserve_newlines&&T>L.max_preserve_newlines){T=L.max_preserve_newlines}if(L.preserve_newlines){if(T>1){F();for(t=1;t<T;t+=1){F(true)}}}}C[s]();if(s!=="TK_INLINE_COMMENT"&&s!=="TK_COMMENT"&&s!=="TK_UNKNOWN"){u=f.last_text;o=s;f.last_text=i}}a=A+r.join("").replace(/[\r\n ]+$/,"");return a}},
    preview: function(pblock, args) {
        pblock.innerHTML = "<pre style='font-size:0.7rem'>" + this.__js_beautify(args.object.text) + "</pre>"
    },
    execute: function(args) {
        CmdUtils.setSelection("<pre>" + this.__js_beautify(args.object.text) + "</pre>")
    }
})

/** ************************************************************************************************
 * Big Picture
 * Previews Boston.com's The Big Picture
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ['bigpicture'],
    icon: 'http://www.boston.com/favicon.ico',
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:'g2010a'},
    description: 'Previews Boston.com\'s The Big Picture (from RSS Feed)',
    preview: function(pblock, input){
        var xmlurl = 'http://feeds.boston.com/boston/bigpicture/index'
        CmdUtils.previewGet(pblock, xmlurl, null, 
            function(data) {
                // data is an xml document
                var items = []
                jQuery(data).find('item').map(function(i,d) {
                    var desc = jQuery("<div>").html( jQuery(d).find('description').text() ),
                        imgobj = jQuery( jQuery('.bpImage', desc)[0] )
                        imgobjw = imgobj.width()
                        imgobjh = imgobj.height()
                    items.push({
                        title: jQuery(d).find('title').text(),
                        link: jQuery(d).find('link').text(),
                        description: desc.html(),
                        pubDate: new Date(jQuery(d).find('pubDate').text()).toString('yyyy-MM-dd'),
                        permalink: jQuery(d).find('guid').text(),
                        image: imgobj.width(450).height( imgobjh * 450 / imgobjw )[0].outerHTML
                    })
                })
                
                var html = ""
                pblock.innerHTML = CmdUtils.renderTemplate(
                    feed.dom.getElementById("big-picture").innerHTML,
                    { items: items }
                )
            }
        )
    }
})

/** ************************************************************************************************
 * calcjs
 * Interface to Math.js
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["calcjs", "calculate using math.js"],
    arguments: [{role:"object", label:"expression", nountype: noun_arb_text}],
    description: '\
        Calculates using <a href="http://mathjs.org">Math.js</a>\
        which has all the features of a scientific calculator,\
        and can convert between units.',
    help: ("Try <code>22/7, 25% of 700, sin(sqrt(ln(pi))), (1+i)^3, " +
        "15 mod 9, 3!</code>. Redirects to Google on hitting 'enter', in case more complex operations are executed (e.g. currency conversion)"),
    icon: "chrome://ubiquity/skin/icons/calculator.png",
    author: {name: "g2010a", email: "ubiquity@the.oib.com"},
    license: "Public domain",
    _url: function (q) { return "http://api.mathjs.org/v1/?expr=" + encodeURIComponent(q) },
    preview: function (pblock, args) {
        if (!args.object.text) {
          this.previewDefault(pblock)
          return
        }
        var self = this;
        CmdUtils.previewGet(pblock,
            self._url(args.object.text),
            null,
            function(data){
                pblock.innerHTML = (
                    '<div class="calculate">' +
                        '<b style="font-size:larger">' + data + '</b>' +
                        (typeof data === "string"
                         ? '<p><a href="http://www.googleguide.com/help/calculator.html">Quick Reference</a></p>'
                         : "") +
                    '</div>'
                )
            }
        )
    },
    execute: function (args) {
        var input = $.trim(args.object.text)
        Utils.openUrlInBrowser("https://www.google.de/search?q="+input);
    }
})

/** ************************************************************************************************
 * duckduckgo
 * DuckDuckGo with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["duckduckgo", "duck"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.duckduckgo.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches with <a href='https://duckduckgo.com/'>DuckDuckGo</a> and loads results into the preview pane",

  preview: function(pblock, args) {
    var input = $.trim(args.object.text)
    $.getJSON(
      'http://api.duckduckgo.com/?format=json&t=firefox_ubiquity_extensions&q=' + input,
      function(data){
        if (data.Image) data.Image = "<img src='"+data.Image+"'/>"
        if (data.AbstractURL) data.Abstract = data.Abstract + "<br/><a href='"+data.AbstractURL+"'>"+data.AbstractSource+"</a>"
        if (data.DefinitionURL) data.Definition = data.Definition + "<br/><a href='"+data.DefinitionURL+"'>"+data.DefinitionSource+"</a>"
        pblock.innerHTML = CmdUtils.renderTemplate(
            feed.dom.getElementById("duckduckgo").innerHTML,
            data
        )
      }
    )
  },
  execute: function(args) {
    var input = $.trim(args.object.text)
    Utils.openUrlInBrowser("https://duckduckgo.com/?q="+input);
  }
})


/** ************************************************************************************************
 * Graphs pie, bar, and line charts.
 * Updated to the new parser by Ammad http://github.com/ammad
 * Extended to use different decimal separators by g2010a
 * *********************************************************************************************** */
var decsep = ".";
var colors = "&chco=94B6D2,D6AA20,759E00,D8773A,007777,B53A3A,713871,4A6E21,979000",
    //"&chco=7979B2,C6C6FF,E0E0FF,B2A567,FFF5C6";
    noun_type_chart = new CmdUtils.NounType( "chart",
      ["pie", "bar", "line", "tline"], "pie"
    ),
    noun_type_width_height = new CmdUtils.NounType( "width[xheight]",
      /^\d+(x\d+)?$/, "400x200"
    ),
	noun_type_decimal_separator = new CmdUtils.NounType( "separator",
      [".", ","], "."
    );
 
function to_num(text){
  if(decsep == ",") text = text.replace(".","").replace(",",".");
  return +text.replace(/[^\d\.]/g,"")
}

/**
 * retrieves selected table from DOM
 */
function getTable(selection){
  var table = {
    firstrow: selection.getRangeAt(0).startContainer,
    lastrow: selection.getRangeAt(selection.rangeCount-1).endContainer
  };
  // for single (non-ctrl) selections
  if (selection.rangeCount == 1) {
    table = {
      firstcell: jQuery(table.firstrow).closest("td,th")[0],
      lastcell: jQuery(table.lastrow).closest("td,th")[0],
      firstrow: jQuery(table.firstrow).closest("tr")[0],
      lastrow: jQuery(table.lastrow).closest("tr")[0]
    }
  };
  if (!table.lastrow) return;
  table.rows = table.lastrow.rowIndex - table.firstrow.rowIndex + 1;
  if (selection.rangeCount > 1) {
    table.columns = selection.rangeCount/table.rows;
    var text = selection.getRangeAt(0).toString();
    jQuery(table.firstrow.children).each(
      function(){
        table.firstcell = this;
        return !!this.textContent.search(text)
      });
    text = selection.getRangeAt(selection.rangeCount-1).toString();
    table.lastcell = table.lastrow.children[table.columns + table.firstcell.cellIndex - 1];
    if (table.lastcell.textContent == text) return table;
    jQuery(table.lastrow.children).each(
      function(){
        table.lastcell = this;
        return !!this.textContent.search(text)
      });
  }
  return table;
}

/**
 * Returns an array of the actual text in the cells 
 */
function tableToArray(table){
  if ( table.firstrow ) var info = table;
  var table = $( table.firstrow || table ).closest("table");
  if ( table.length == 0 ) return;
  return table.find("tr").map(
    function(i){
      if ( info && ( i < info.firstrow.rowIndex ||
                     i > info.lastrow.rowIndex )) return null;
      return $(this.children).map(
        function(j){
          if ( info && ( j < info.firstcell.cellIndex ||
                     j > info.lastcell.cellIndex )) return null;
          return $(this).text()
        })
    })
}
 
/**
 * Returns an object with labels and other relevant data; transforms cells into numbers.
 */
function graphObj(tableData){
  var rows = tableData.length;
  var columns = tableData[0].length;
 
  var data = {
    labels: new Array(rows),
    values: new Array(rows),
    min: Number.MAX_VALUE,
    max: Number.MIN_VALUE,
    string: tableData
  }
  
  // copy the first column into a array of labels, rest into 2 dimensional array of values
  for(i=0; i<rows; i++) {
	// create generic labels if only 1 column is selected
	if (columns == 1) {
		data.labels[i] = i;
		data.values[i] = new Array(1)
		data.values[i][0] = to_num(tableData[i][0]);
	    if (data.values[i][0]<data.min) data.min = data.values[i][0];
		if (data.values[i][0]>data.max) data.max = data.values[i][0];

	}
	else {
		data.labels[i] = tableData[i][0];
		data.values[i] = new Array(columns-1);
		for (var j=1;j<columns; j++){
		  data.values[i][j-1] = to_num(tableData[i][j]);
		  if (data.values[i][j-1]<data.min) data.min = data.values[i][j-1];
		  if (data.values[i][j-1]>data.max) data.max = data.values[i][j-1];
		}
	}
  }
 
  return data;
}
 
 
function transposeArray(inArray){
  var rowsIn = inArray.length;
  var columnsIn = inArray[0].length;
  var outArray = new Array(columnsIn);
 
  for(i=0; i<columnsIn; i++) {
    outArray[i] = new Array(rowsIn);
    for (var j=0;j<rowsIn; j++){
      outArray[i][j] = inArray[j][i];
    }
  }
  return outArray;
}
 
function formatValues(valArray) {
  var rows = valArray.length;
  var columns = valArray[0].length;
  var values = "";
 
  //  traverse table by columns to build values: delimit columns with commas, rows with pipes
  for (var i=0; i<columns; i++){
    for (var j=0;j<rows; j++){
      values += (valArray[j][i]);
      if (j<rows-1) values += ",";
    }
    if (i<columns-1) values += "|";
  }
  return values;
}
 
function formatLabels(labArray){
  var rows = labArray.length;
  var labels = "";
  for(var i=0; i<rows; i++){
    // add element to label string
    labels += labArray[i];
    // if not last row, add a pipe delimiter
    if (i<rows-1) labels += "|";
  }
  return labels;
}
  
function scaleTo100(valArray, maxVal){
  var rows = valArray.length;
  var columns = valArray[0].length;
  var rescale = maxVal / 100;
 
  //  traverse table by columns to build values: delimit columns with commas, rows with pipes
  for (var i=0; i<columns; i++){
    for (var j=0;j<rows; j++){
      valArray[j][i] = valArray[j][i] / rescale;
    }
  }
  return valArray;
}
 
function  dataToChart( args ) {
  var data, table = getTable( CmdUtils.getWindow().getSelection() );
  decsep = args.instrument.text;
  if (table)
    data = graphObj(tableToArray(table));
 
  if( !data ) return null;
  
  data.labelquery = formatLabels(data.labels);
  // pie charts only handle values up to 100, so scale them!
  if( args.format.text == "pie" )
    data.values = scaleTo100(data.values, data.max);
  else if ( args.format.text == "tline" ) {
    data.values = transposeArray(data.values);
    args.format.text = "line";
  }
  data.valuequery = formatValues(data.values);
 
  [ graphWidth, graphHeight ] = args.modifier.text.split("x");
 
  var graphWidth = graphWidth || 400,
      graphHeight = graphHeight || graphWidth /2;
 
  if (graphHeight > 387) graphHeight = 387;
  if (graphWidth > 774) graphWidth = 774;
 
  if ( args.format.text == "bar" ) {
    var ymin = (data.min * 0.75);
    if (ymin < 10) ymin = 0;
    if (data.max > 80 && data.max < 100) data.max = 100;
  }else if ( args.format.text == "line" )
    var ymin = (data.min - (data.max - data.min) * .1);
  
  var urlstart = ({ 
        pie:"pc",
        bar:"bvg&chxt=y&chbh=a",
        line:"lc&chxt=y"
      })[args.format.text],
 
      urlend = ({ 
        pie:"",
        bar:colors,
        line:colors
      })[args.format.text];
 
  img = "<img src='http://chart.earth2marsh.apigee.com/chart?cht="+urlstart+"&chs="+graphWidth+"x"+graphHeight+"&chl="+data.labelquery+"&chd=t:"+data.valuequery+"&chds="+ymin+","+data.max+"&chtxt=x,y&chxr=0,"+ymin+","+data.max+urlend+"'/>";
  return img;
 
}
 
CmdUtils.CreateCommand({
  names: ["chart"],
  arguments: [ {role: "object", nountype: noun_arb_text, label: "Column of labels and column(s) of values"},
               {role: "format", nountype: noun_type_chart},
               {role: "modifier", nountype: noun_type_width_height},
			   {role: "instrument", nountype: noun_type_decimal_separator}
             ],
  icon: "chrome://ubiquity/skin/icons/calculator.png",
  description: "Turn numeric data into charts using the Google Charts API.",
  help: "Select a table. Chart types supported: pie, bar, line and tline(transposed line graph). Decimal separators: \".\" and \",\"<p>Example: <em>Chart in Line of 500x500 with ,</em></p>",
  homepage: "http://earth2marsh.com/ubiquity/",
  author: {name: "Marsh Gardiner", email: "ubiquity@earth2marsh.com"},
  license: "MPL",
  preview: function(pblock, args) {
    if (!args.object.html) {
      this.previewDefault(pblock);
      return;
    }
    var img = dataToChart( args );
 
 
    if( !img )
      jQuery(pblock).text( "Requires numbers to graph." );
    else
      jQuery(pblock).empty().append( img ).height( "15px" );
  },
 
  execute: function( args ) {
    var img = dataToChart( args );
    if( img ) CmdUtils.setSelection( img );
  }
})



/** ************************************************************************************************
 * Color
 * Preview a textual color code
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["color", "preview-color"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://kuler.adobe.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Accepts a textual color code and previews it. Pressing enter inserts a small block of that color at the cursor.",
  preview: function(pblock, input) {
		// todo: intelligent recognition of format
		var color = jQuery.trim(input.object.text);
		if (color.length < 7) color = "#"+color;
	    var html = "<div style='width:120px;height:120px;padding:80px;background-color:white'>"
			+ "<div style='width:100%;height:100%;background-color:" + color + "'></div>"
		"</div>"
        pblock.innerHTML = html;
  },
  execute: function(input) {
	var color = input.object.text;
	if (color.length < 7) color = "#"+color;
	CmdUtils.setSelection("<div style='width:12px;height:12px;display:inline-block;background-color:" + color + ";'></div>")
  }
})


/** ************************************************************************************************
 * Datatable
 * Enhance tables with functionality from http://datatables.net
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["datatable", "filter_table", "sort_table", "enhance_table"],
  arguments: [{role:"object", label:"input", nountype: noun_arb_text}],
  icon: "http://datatables.net/favicon.ico",
  author: {name:"g2010a"},
  homepage: "http://github.com/g2010a/Ubiquity-Commands",
  description: "Enhances tables in the page to make them sortable, filterable, etc. using jQuery and the datatables plugin from http://datatables.net. Takes a tableid as argument or applies to all tables if nothing is passed.",
  __colvis_plugin: "                                                                            \
    /*                                                                                          \
     * File:        ColVis.min.js                                                               \
     * Version:     1.0.8                                                                       \
     * Author:      Allan Jardine (www.sprymedia.co.uk)                                         \
     *                                                                                          \
     * Copyright 2010-2012 Allan Jardine, all rights reserved.                                  \
     *                                                                                          \
     * This source file is free software, under either the GPL v2 license or a                  \
     * BSD (3 point) style license, as supplied with this software.                             \
     *                                                                                          \
     * This source file is distributed in the hope that it will be useful, but                  \
     * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY               \
     * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.                  \
     */                                                                                         \
    (function(d){ColVis=function(a,b){(!this.CLASS||\"ColVis\"!=this.CLASS)&&alert(\"Warning: ColVis must be initialised with the keyword 'new'\");\"undefined\"==typeof b&&(b={});this.s={dt:null,oInit:b,fnStateChange:null,activate:\"click\",sAlign:\"left\",buttonText:\"Show / hide columns\",hidden:!0,aiExclude:[],abOriginal:[],bShowAll:!1,sShowAll:\"Show All\",bRestore:!1,sRestore:\"Restore original\",iOverlayFade:500,fnLabel:null,sSize:\"auto\",bCssPosition:!1};this.dom={wrapper:null,button:null,collection:null,background:null,\
    catcher:null,buttons:[],restore:null};ColVis.aInstances.push(this);this.s.dt=a;this._fnConstruct();return this};ColVis.prototype={fnRebuild:function(){for(var a=this.dom.buttons.length-1;0<=a;a--)null!==this.dom.buttons[a]&&this.dom.collection.removeChild(this.dom.buttons[a]);this.dom.buttons.splice(0,this.dom.buttons.length);this.dom.restore&&this.dom.restore.parentNode(this.dom.restore);this._fnAddButtons();this._fnDrawCallback()},_fnConstruct:function(){this._fnApplyCustomisation();var a=this,\
    b,c;this.dom.wrapper=document.createElement(\"div\");this.dom.wrapper.className=\"ColVis TableTools\";this.dom.button=this._fnDomBaseButton(this.s.buttonText);this.dom.button.className+=\" ColVis_MasterButton\";this.dom.wrapper.appendChild(this.dom.button);this.dom.catcher=this._fnDomCatcher();this.dom.collection=this._fnDomCollection();this.dom.background=this._fnDomBackground();this._fnAddButtons();b=0;for(c=this.s.dt.aoColumns.length;b<c;b++)this.s.abOriginal.push(this.s.dt.aoColumns[b].bVisible);this.s.dt.aoDrawCallback.push({fn:function(){a._fnDrawCallback.call(a)},\
    sName:\"ColVis\"});d(this.s.dt.oInstance).bind(\"column-reorder\",function(d,g,f){b=0;for(c=a.s.aiExclude.length;b<c;b++)a.s.aiExclude[b]=f.aiInvertMapping[a.s.aiExclude[b]];d=a.s.abOriginal.splice(f.iFrom,1)[0];a.s.abOriginal.splice(f.iTo,0,d);a.fnRebuild()})},_fnApplyCustomisation:function(){var a=this.s.oInit;\"undefined\"!=typeof a.activate&&(this.s.activate=a.activate);\"undefined\"!=typeof a.buttonText&&(this.s.buttonText=a.buttonText);\"undefined\"!=typeof a.aiExclude&&(this.s.aiExclude=a.aiExclude);\
    \"undefined\"!=typeof a.bRestore&&(this.s.bRestore=a.bRestore);\"undefined\"!=typeof a.sRestore&&(this.s.sRestore=a.sRestore);\"undefined\"!=typeof a.bShowAll&&(this.s.bShowAll=a.bShowAll);\"undefined\"!=typeof a.sShowAll&&(this.s.sShowAll=a.sShowAll);\"undefined\"!=typeof a.sAlign&&(this.s.sAlign=a.sAlign);\"undefined\"!=typeof a.fnStateChange&&(this.s.fnStateChange=a.fnStateChange);\"undefined\"!=typeof a.iOverlayFade&&(this.s.iOverlayFade=a.iOverlayFade);\"undefined\"!=typeof a.fnLabel&&(this.s.fnLabel=a.fnLabel);\
    \"undefined\"!=typeof a.sSize&&(this.s.sSize=a.sSize);\"undefined\"!=typeof a.bCssPosition&&(this.s.bCssPosition=a.bCssPosition)},_fnDrawCallback:function(){for(var a=this.s.dt.aoColumns,b=0,c=a.length;b<c;b++)null!==this.dom.buttons[b]&&(a[b].bVisible?d(\"input\",this.dom.buttons[b]).attr(\"checked\",\"checked\"):d(\"input\",this.dom.buttons[b]).removeAttr(\"checked\"))},_fnAddButtons:function(){for(var a,b=\",\"+this.s.aiExclude.join(\",\")+\",\",c=0,d=this.s.dt.aoColumns.length;c<d;c++)-1==b.indexOf(\",\"+c+\",\")?(a=\
    this._fnDomColumnButton(c),this.dom.buttons.push(a),this.dom.collection.appendChild(a)):this.dom.buttons.push(null);this.s.bRestore&&(a=this._fnDomRestoreButton(),a.className+=\" ColVis_Restore\",this.dom.buttons.push(a),this.dom.collection.appendChild(a));this.s.bShowAll&&(a=this._fnDomShowAllButton(),a.className+=\" ColVis_ShowAll\",this.dom.buttons.push(a),this.dom.collection.appendChild(a))},_fnDomRestoreButton:function(){var a=this,b=document.createElement(\"button\"),c=document.createElement(\"span\");\
    b.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";b.appendChild(c);d(c).html('<span class=\"ColVis_title\">'+this.s.sRestore+\"</span>\");d(b).click(function(){for(var b=0,c=a.s.abOriginal.length;b<c;b++)a.s.dt.oInstance.fnSetColumnVis(b,a.s.abOriginal[b],!1);a._fnAdjustOpenRows();a.s.dt.oInstance.fnAdjustColumnSizing(!1);a.s.dt.oInstance.fnDraw(!1)});return b},_fnDomShowAllButton:function(){var a=this,b=document.createElement(\"button\"),\
    c=document.createElement(\"span\");b.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";b.appendChild(c);d(c).html('<span class=\"ColVis_title\">'+this.s.sShowAll+\"</span>\");d(b).click(function(){for(var b=0,c=a.s.abOriginal.length;b<c;b++)-1===a.s.aiExclude.indexOf(b)&&a.s.dt.oInstance.fnSetColumnVis(b,!0,!1);a._fnAdjustOpenRows();a.s.dt.oInstance.fnAdjustColumnSizing(!1);a.s.dt.oInstance.fnDraw(!1)});return b},_fnDomColumnButton:function(a){var b=\
    this,c=this.s.dt.aoColumns[a],e=document.createElement(\"button\"),g=document.createElement(\"span\"),f=this.s.dt;e.className=!f.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";e.appendChild(g);c=null===this.s.fnLabel?c.sTitle:this.s.fnLabel(a,c.sTitle,c.nTh);d(g).html('<span class=\"ColVis_radio\"><input type=\"checkbox\"/></span><span class=\"ColVis_title\">'+c+\"</span>\");d(e).click(function(c){var e=!d(\"input\",this).is(\":checked\");\"input\"==c.target.nodeName.toLowerCase()&&\
    (e=d(\"input\",this).is(\":checked\"));c=d.fn.dataTableExt.iApiIndex;d.fn.dataTableExt.iApiIndex=b._fnDataTablesApiIndex.call(b);f.oFeatures.bServerSide&&(\"\"!==f.oScroll.sX||\"\"!==f.oScroll.sY)?(b.s.dt.oInstance.fnSetColumnVis(a,e,!1),b.s.dt.oInstance.fnAdjustColumnSizing(!1),b.s.dt.oInstance.oApi._fnScrollDraw(b.s.dt),b._fnDrawCallback()):b.s.dt.oInstance.fnSetColumnVis(a,e);d.fn.dataTableExt.iApiIndex=c;null!==b.s.fnStateChange&&b.s.fnStateChange.call(b,a,e)});return e},_fnDataTablesApiIndex:function(){for(var a=\
    0,b=this.s.dt.oInstance.length;a<b;a++)if(this.s.dt.oInstance[a]==this.s.dt.nTable)return a;return 0},_fnDomBaseButton:function(a){var b=this,c=document.createElement(\"button\"),e=document.createElement(\"span\"),g=\"mouseover\"==this.s.activate?\"mouseover\":\"click\";c.className=!this.s.dt.bJUI?\"ColVis_Button TableTools_Button\":\"ColVis_Button TableTools_Button ui-button ui-state-default\";c.appendChild(e);e.innerHTML=a;d(c).bind(g,function(a){b._fnCollectionShow();a.preventDefault()});return c},_fnDomCollection:function(){var a=\
    document.createElement(\"div\");a.style.display=\"none\";a.className=!this.s.dt.bJUI?\"ColVis_collection TableTools_collection\":\"ColVis_collection TableTools_collection ui-buttonset ui-buttonset-multi\";this.s.bCssPosition||(a.style.position=\"absolute\");d(a).css(\"opacity\",0);return a},_fnDomCatcher:function(){var a=this,b=document.createElement(\"div\");b.className=\"ColVis_catcher TableTools_catcher\";d(b).click(function(){a._fnCollectionHide.call(a,null,null)});return b},_fnDomBackground:function(){var a=\
    this,b=document.createElement(\"div\");b.style.position=\"absolute\";b.style.left=\"0px\";b.style.top=\"0px\";b.className=\"ColVis_collectionBackground TableTools_collectionBackground\";d(b).css(\"opacity\",0);d(b).click(function(){a._fnCollectionHide.call(a,null,null)});\"mouseover\"==this.s.activate&&d(b).mouseover(function(){a.s.overcollection=!1;a._fnCollectionHide.call(a,null,null)});return b},_fnCollectionShow:function(){var a=this,b,c;b=d(this.dom.button).offset();var e=this.dom.collection,g=this.dom.background,\
    f=parseInt(b.left,10),h=parseInt(b.top+d(this.dom.button).outerHeight(),10);this.s.bCssPosition||(e.style.top=h+\"px\",e.style.left=f+\"px\");e.style.display=\"block\";d(e).css(\"opacity\",0);c=d(window).height();var i=d(document).height(),j=d(window).width(),h=d(document).width();g.style.height=(c>i?c:i)+\"px\";g.style.width=(j<h?j:h)+\"px\";c=this.dom.catcher.style;c.height=d(this.dom.button).outerHeight()+\"px\";c.width=d(this.dom.button).outerWidth()+\"px\";c.top=b.top+\"px\";c.left=f+\"px\";document.body.appendChild(g);\
    document.body.appendChild(e);document.body.appendChild(this.dom.catcher);if(\"auto\"==this.s.sSize){i=[];this.dom.collection.style.width=\"auto\";b=0;for(c=this.dom.buttons.length;b<c;b++)null!==this.dom.buttons[b]&&(this.dom.buttons[b].style.width=\"auto\",i.push(d(this.dom.buttons[b]).outerWidth()));iMax=Math.max.apply(window,i);b=0;for(c=this.dom.buttons.length;b<c;b++)null!==this.dom.buttons[b]&&(this.dom.buttons[b].style.width=iMax+\"px\");this.dom.collection.style.width=iMax+\"px\"}this.s.bCssPosition||\
    (e.style.left=\"left\"==this.s.sAlign?f+\"px\":f-d(e).outerWidth()+d(this.dom.button).outerWidth()+\"px\",b=d(e).outerWidth(),d(e).outerHeight(),f+b>h&&(e.style.left=h-b+\"px\"));setTimeout(function(){d(e).animate({opacity:1},a.s.iOverlayFade);d(g).animate({opacity:0.1},a.s.iOverlayFade,\"linear\",function(){jQuery.browser.msie&&jQuery.browser.version==\"6.0\"&&a._fnDrawCallback()})},10);this.s.hidden=!1},_fnCollectionHide:function(){var a=this;!this.s.hidden&&null!==this.dom.collection&&(this.s.hidden=!0,d(this.dom.collection).animate({opacity:0},\
    a.s.iOverlayFade,function(){this.style.display=\"none\"}),d(this.dom.background).animate({opacity:0},a.s.iOverlayFade,function(){document.body.removeChild(a.dom.background);document.body.removeChild(a.dom.catcher)}))},_fnAdjustOpenRows:function(){for(var a=this.s.dt.aoOpenRows,b=this.s.dt.oApi._fnVisbleColumns(this.s.dt),c=0,d=a.length;c<d;c++)a[c].nTr.getElementsByTagName(\"td\")[0].colSpan=b}};ColVis.fnRebuild=function(a){var b=null;\"undefined\"!=typeof a&&(b=a.fnSettings().nTable);for(var c=0,d=ColVis.aInstances.length;c<\
    d;c++)(\"undefined\"==typeof a||b==ColVis.aInstances[c].s.dt.nTable)&&ColVis.aInstances[c].fnRebuild()};ColVis.aInstances=[];ColVis.prototype.CLASS=\"ColVis\";ColVis.VERSION=\"1.0.8\";ColVis.prototype.VERSION=ColVis.VERSION;\"function\"==typeof d.fn.dataTable&&\"function\"==typeof d.fn.dataTableExt.fnVersionCheck&&d.fn.dataTableExt.fnVersionCheck(\"1.7.0\")?d.fn.dataTableExt.aoFeatures.push({fnInit:function(a){return(new ColVis(a,\"undefined\"==typeof a.oInit.oColVis?{}:a.oInit.oColVis)).dom.wrapper},cFeature:\"C\",\
    sFeature:\"ColVis\"}):alert(\"Warning: ColVis requires DataTables 1.7 or greater - www.datatables.net/download\")})(jQuery);\
  ",
  preview: function(pblock, input) {
        var doc = CmdUtils.getDocument(),
            tableids = [],
            tables = jQuery("table", doc).each(function(i,d){
                // Ensure all tables have an id
               var thisid = jQuery(d).attr("id")
               if (!thisid) jQuery(d).attr("id", "dtindex_" + i)
               tableids.push(jQuery(d).attr("id"))
            })
        pblock.innerHTML = this.description + "<div>Available tables: <ul><li>" + tableids.join("</li><li>") + "</li></div>"
  },
  execute: function(input) {
        var doc = CmdUtils.getDocument(),
            that = this
        
        // Ensure tables have THEAD
        jQuery("table", doc).not(":has(thead)").each(function(i,d) {
            var thistable = jQuery(d),
                toprow = jQuery(jQuery('tr', thistable)[0]),
                toprowhtml = toprow.html()
            
            toprow.remove()
            thistable.prepend("<thead>"+toprowhtml+"</thead>")
        })
        
        // Ensure tables have TBODY
        jQuery("table", doc).not(":has(tbody)").each(function(i,d) {
            var thistable = jQuery(d),
                head = jQuery('thead',d)
                toprow = head.length == 0 ? jQuery(jQuery('tr', thistable)[0]) : null
            if (toprow) toprow.remove()
            else if (head) head.remove()
            
            jQuery("tr", thistable).wrapAll("<tbody></tbody>")
            thistable.prepend(toprow ? toprow : head)
        })
        
        var tableid = jQuery.trim(input.object.text)
        if (tableid[0] !== "#") tableid = "#" + tableid
        
        CmdUtils.injectCss("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css")
        CmdUtils.injectCss("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables_themeroller.css")
		CmdUtils.loadJQuery(function(jqobj){
            CmdUtils.log("Injected jQuery")
            CmdUtils.injectJs("https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.js", function(){
                CmdUtils.log("Injected jquery.dataTables.js")
                
                CmdUtils.injectJs(that.__colvis_plugin, function() {
                    CmdUtils.log("Injected colvis plugin")
                    
                    var command = "$('{ID}')"
                                    + ".wrapAll('<div style=\"margin: 20px 0px\"></div>')"  // Give us some room above and below
                                    + ".dataTable({ "
                                        + "'bPaginate': false,"     // Disallow pagination
                                        + "'sDom': 'lfrtip<\"clear\">C',"    // Allow column hiding
                                        + "'oColVis' : { 'activate' : 'mouseover' },"    // Column hiding dialog opens on mouseover
                                    + "})"   
                    command = command.replace("{ID}", (tableid && tableid.length > 1)  
                            ? tableid       // Apply only to a particular table 
                            : 'table')      // Apply to all tables
                            
                    CmdUtils.injectJs(command, function(){
                        CmdUtils.log("Executed " + command)
                    }, doc)
                }, doc)
            }, doc)
        }, doc)
  }
})

/** ************************************************************************************************
 * Decode
 * Decode URLs
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["decode"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://meyerweb.com/favicon.ico",
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  description: "Decodes URL-encoded text",
  preview: function(pblock, input) {
        pblock.innerHTML = decodeURIComponent(input.object.text.replace(/\+/g,  " "));
  },
  execute: function(input) {
		CmdUtils.setSelection(decodeURIComponent(input.object.text.replace(/\+/g,  " ")));
  }
})

/** ************************************************************************************************
 * Dict
 * Translate German / English
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
	names: ["dict"],
	arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
	icon: "http://www.dict.cc/favicon.ico",
	homepage: 'https://github.com/g2010a/Ubiquity-Commands',
	author: {name:"g2010a"},
	description: "Searches Dict.cc for a German/English term and loads results in the preview pane.",
	preview: function(pblock, input) {
		var text = $.trim(input.object.text)
		pblock.innerHTML = this.description + (text ? "<p>... searching for '" + text + "'</p>" : "")
		if (text) {
			CmdUtils.previewGet(pblock,
				'http://pocket.dict.cc/?s=' + text,
				null,
				function(data){
					var items = [],
						entries = $('dl dt', data).each(function(i,dt){
							var dds = $(this).nextUntil('dt')
							items.push({ entry: $(this).html(), description: dds.html(), class: i%2 ? 'odd' : 'even' })
						})
					html = CmdUtils.renderTemplate(
						feed.dom.getElementById("dict").innerHTML,
						{ items: items }
					)
					pblock.innerHTML = CmdUtils.absUrl(html,"http://www.dict.cc/")
				}
			)
		}
	},
	execute: function(args) {
		var input = args.object;
		var url = "http://www.dict.cc/?s={QUERY}"
		var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
		Utils.openUrlInBrowser(urlString);
	}
})

/** ************************************************************************************************
 * Dictes
 * Translate German / Spanish
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
	names: ["dictes","dees"],
	arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
	icon: "http://www.dict.cc/favicon.ico",
	homepage: 'https://github.com/g2010a/Ubiquity-Commands',
	author: {name:"g2010a"},
	description: "Searches Dict.cc for a German/Spanish term and loads the results in the preview pane.",
	preview: function(pblock, input) {
		var text = $.trim(input.object.text)
		pblock.innerHTML = this.description + (text ? "<p>... searching for '" + text + "'</p>" : "")
		if (text) {
			CmdUtils.previewGet(pblock,
				'http://dees.pocket.dict.cc/?s=' + text,
				null,
				function(data){
					var items = [],
						entries = $('dl dt', data).each(function(i,dt){
							var dds = $(this).nextUntil('dt')
							items.push({ entry: $(this).html(), description: dds.html(), class: i%2 ? 'odd' : 'even' })
						})
					html = CmdUtils.renderTemplate(
						feed.dom.getElementById("dict").innerHTML,
						{ items: items }
					)
					pblock.innerHTML = CmdUtils.absUrl(html,"http://dees.dict.cc/")
				}
			)
		}
	},
	execute: function(args) {
		var input = args.object;
		var url = "http://dees.dict.cc/?s={QUERY}"
		var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
		Utils.openUrlInBrowser(urlString);
	}
})

/** ************************************************************************************************
 * Encode
 * Encode URLs
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["encode"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://meyerweb.com/favicon.ico",
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  description: "URL-encodes text",

  preview: function(pblock, input) {
        pblock.innerHTML = encodeURIComponent(input.object.text);
  },
  execute: function(input) {
		CmdUtils.setSelection(encodeURIComponent(input.object.text));
  }
})

/** 
 * Fortune
 * Gets a fortune cookie
 */
// TODO: accept optional length (short,long) and source category
//TODO: paste HTML if in a page, TEXT if in a textarea
CmdUtils.CreateCommand({
  names: ["fortune", "fortune-cookie", "quote"],
  arguments: [],
  icon: "http://www.iheartquotes.com//images/favicon.png",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Retrieves a Unix Fortune from the online service ihearquotes.com",
  fortune_text: null,
  preview: function(pblock, {object, source}) {
	//pblock.innerHTML = 'retrieving ...';
	var url = 'http://www.iheartquotes.com/api/v1/random?format=text&show_permalink=false&show_source=false';
	//CmdUtils.log('hi', object, source)
    CmdUtils.previewGet(pblock, url, null,
      function(data){
		this.fortune_text = data;
        pblock.innerHTML = this.fortune_text;
      }
    );
  },
  execute: function(args) {
    CmdUtils.setSelection(this.fortune_text)
  }
})

/** ************************************************************************************************
 * Ubiquity "grab-color" color grabbing command, v1.0
 * by Jacob Seidelin, jseidein@nihilogic.dk, http://blog.nihilogic.dk/
 * Updated and modified by g2010a
 * *********************************************************************************************** */

CmdUtils.CreateCommand({ 
  names: ["get-color", "grab-color", "color-get"],
  icon: "http://www.nihilogic.dk/favicon.ico",
  homepage: "http://blog.nihilogic.dk/",
  author: { name: "Jacob Seidelin", email: "jseidelin@nihilogic.dk"},
  description: "Grab colors from web pages",
  arguments: [{role:"format", label:"mode",nountype: noun_arb_text}],
  preview: function( pblock, input ) {
    var template = "Click anywhere on the page to pick up a color.<br/>Mode is either \"hex\" or \"rgb\" (defaults to \"hex\").";
    pblock.innerHTML = CmdUtils.renderTemplate(template);
  },
  execute: function(input) {
    var mode = jQuery.trim(input.format.text),
        rgb = (mode == "rgb"),
        win = CmdUtils.getWindowInsecure(),
        doc = CmdUtils.getDocumentInsecure()

    if (doc.getElementById("pixastic-color-picker-image")) 
      return;

    var hWin = CmdUtils.getHiddenWindow(),
        shot = hWin.document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
        width = win.innerWidth,
        height = win.innerHeight
    shot.mozOpaque = true;
    shot.width = width;
    shot.height = height;
    shot.getContext("2d").drawWindow(win, win.scrollX, win.scrollY, width, height, "rgb(255,255,255)");

    var img = doc.createElement("img");
    img.style.position = "absolute";
    img.style.zIndex = 0x7fffffff;
    img.style.padding = img.margin = "0px";
    img.style.border = "none";
    img.style.left = win.scrollX + "px";
    img.style.top = win.scrollY + "px";
    img.style.cursor = "crosshair";
    img.id = "pixastic-color-picker-image";

    img.src = shot.toDataURL("image/png");

    var box = doc.createElement("div");
    box.style.width = "150px";
    box.style.height = "15px";
    box.style.border = "1px solid black";
    box.style.color = "black";
    box.style.fontFamily = "helvetica, sans-serif";
    box.style.fontSize = "12px";
    box.style.backgroundColor = "rgba(255,255,255,0.7)";
    box.style.position = "absolute";
    box.style.zIndex = 0x7fffffff;

    var overflow = doc.body.style.overflow;
    doc.body.style.overflow = "hidden";
    doc.body.appendChild(img);
    doc.body.appendChild(box);

    var hex = function(n) {
      var h = n.toString(16);
      if (h.length == 1) h = "0" + h;
      return h;
    }

    img.onmousemove = function(e) {
       var data = shot.getContext("2d").getImageData(e.clientX, e.clientY, 1, 1).data;
       var color = rgb ? "rgb(" + data[0] + "," + data[1] + "," + data[2] + ")"
           : "#" + hex(data[0]) + hex(data[1]) + hex(data[2]);
       box.innerHTML = "Color: " + color;
       box.style.left = (e.clientX + win.scrollX + 10) + "px";
       box.style.top = (e.clientY + win.scrollY + 10) + "px";
    }

    img.onclick = function(e) {
       doc.body.removeChild(img);
       doc.body.removeChild(box);
       doc.body.style.overflow = overflow;
       var data = shot.getContext("2d").getImageData(e.clientX, e.clientY, 1, 1).data;
       var color = rgb ? "rgb(" + data[0] + "," + data[1] + "," + data[2] + ")"
           : "#" + hex(data[0]) + hex(data[1]) + hex(data[2]);
       win.prompt("Your selected color is", color);
    }
    //TODO: abort with ESC
  }
})

/** ************************************************************************************************
 * Lds
 * Search lds.org 
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["lds"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.lds.org/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches LDS.org and loads results into the Preview pane.",

  preview: function(pblock, input) {
    CmdUtils.previewGet(pblock,
      'http://www.lds.org/search?lang=eng&query='+input.object.text,
      null,
      function(data){
        var html = ""
        $(".results-list>li",data).each(function(i,d){ 
          var headings = $('h3',d);
          var newheadings = $('<p></p>').append(headings.html());
		  headings.replaceWith(newheadings);
		  var lists = $('ul.meta>li',d);
          var newlists = $('<span></span>').append(lists.text());
          lists.replaceWith(newlists);
          if ($(d).html().trim() != "") html = html+ "<hr/>" + $(d).html()
        })
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = args.object;
    var url = "http://www.lds.org/search?lang=eng&query={QUERY}"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})

/** ************************************************************************************************
 * Parse URL
 * Parses a URL
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["parse url", "url parser", "prettify url", "url prettifier"],
    arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
    homepage: 'https://github.com/g2010a/Ubiquity-Commands',
    author: {name:"g2010a"},
    description: "Parses and prettifies URLs",
    
    preview: function(pblock, args) {
        var input = args.object.text,
            parser = $("<a/>").attr('href',input)[0]
        
        pblock.innerHTML = parser.protocol 
            + "<br/>+- " + parser.host
            + "<br/>+-- " + parser.pathname
        parser.search.slice(1).split("&").forEach(function(param){
                pblock.innerHTML += ( "<br/>+--- " + param )
            })
        pblock.innerHTML += "<br/>+- " + parser.hash
    },
})


/** ************************************************************************************************
 * qrcode
 * Generates a QR Code with the specified text encoded
 * previously used Google Charts API (to be deprecated by Google)
 * previously used https://github.com/nhorvath/Ubiquity-QRCode
 * currently uses qrserver.com api
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["qrcode", "qr"],
  arguments: [{role:"object",label:"input",nountype:noun_arb_text}],
  author: {name:"g2010a"},
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  icon: "http://api.qrserver.com/v1/create-qr-code/?data=q&size=32x32",
  description: "Generates a QR Code with the specified text encoded.",
  __baseurl: "http://api.qrserver.com/v1/create-qr-code/?data={QUERY}&size=400x400",
  preview: function(pblock, args) {
	var input = args.object
    pblock.innerHTML = "<img src='" + this.__baseurl.replace("{QUERY}", encodeURIComponent(input.text)) +"'/>"
  },
  execute: function(args) {
    var input = args.object;
    var urlString = this.__baseurl.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
});



/** ************************************************************************************************
 * stock-chart
 * Get a stock chart
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
    names: ["stock-chart"],
    homepage: "http://hoffstein.net/ubiquity/stock-chart.html",
    author: { name: "Ben Hoffstein", email: "ben@hoffstein.net" },
    license: "MPL",
    description: "Displays a stock chart for the given ticker (from Yahoo! finance).",
    arguments: [{ role:'object', nountype: noun_arb_text, label: 'input' }],
    preview: function(pblock, args) {
		var input = args.object
        var searchText = jQuery.trim(input.text);
        if (searchText.length < 1) {
            pblock.innerHTML = "Retrieves stock chart for ticker";
            return;
        }
		var url = "http://chart.finance.yahoo.com/z?s={QUERY}";
        var query = jQuery.trim(searchText);
        var urlString = url.replace("{QUERY}", encodeURIComponent(query))
		pblock.innerHTML = "1D <br/><img src='"+urlString+"&t=1d&q=l&l=off&z=s&p=m30,m200'/>"
                        + "<br/>6M <br/><img src='"+urlString+"&t=6m&q=l&l=off&z=s&p=m30,m200'/>"
						+ "<br/>3 YR<br/><img src='"+urlString+"&t=3y&q=l&l=off&z=s&p=m30,m200'/>";
    },
	
  execute: function(args) {
    var input = args.object;
    var url = "http://finance.yahoo.com/q?s={QUERY}&ql=0"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})

/** ************************************************************************************************
 * Text2Html
 * Render plain text as html
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["text2html", "html","render html"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: null,
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Renders plain text as HTML.",
  
  preview: function(pblock, input) {
        pblock.innerHTML = decodeURIComponent(input.object.text);
  },
  execute: function(input) {
		CmdUtils.setSelection(input.object.text);
  }
})

/** ************************************************************************************************
 * wolf
 * wolfram|alpha with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["wolf", "wolfram", "wolframalpha", "wolfram alpha"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.wolframalpha.com/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Searches WolframAlpha and loads results in to Preview pane.",

  preview: function(pblock, input) {
    CmdUtils.previewGet(pblock,
      'http://www.wolframalpha.com/widget/input/?input='+input.object.text+'&id=d1506f31ac81b12a37f93ca40a79515&showAssumptions=0',
      null,
      function(data){
        var html = "<div style='background-color: #fff; color:#000; padding-left: 6px; border-radius: 10px; margin-right: 4px;'>"
        jQuery("div.pod",data).each(function(i,d){ 
          jQuery("a",d).replaceWith("<span style='font-size:smaller; color:#ccc'>[link removed]</span>")
          jQuery("hr",d).remove()
          var headings = jQuery('h2',d);
          var newheadings = jQuery('<p></p>').append(headings.text());
          headings.replaceWith(newheadings);
          if (jQuery(d).html().trim() != "") html = html+ "<hr/>" + jQuery(d).html()
          else html = html + "<hr/> [this section can't be loaded]"
        })
        //html = data;
        html = html + "</div>"
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = args.object;
    var url = "http://www.wolframalpha.com/input/?i={QUERY}"
    var urlString = url.replace("{QUERY}", encodeURIComponent(input.text));
    Utils.openUrlInBrowser(urlString);
  }
})


/** ************************************************************************************************
 * yubnub
 * Yubnub with dynamic preview
 * *********************************************************************************************** */
CmdUtils.CreateCommand({
  names: ["yubnub"],
  arguments: [{role:"object", label:"input",nountype: noun_arb_text}],
  icon: "http://www.yubnub.org/favicon.ico",
  homepage: 'https://github.com/g2010a/Ubiquity-Commands',
  author: {name:"g2010a"},
  description: "Executes <a href='http://yubnub.org/kernel/ls?args='>YubNub commands</a> and loads results in to Preview pane where possible.",

  preview: function(pblock, args) {
    var input = $.trim(args.object.text)
    CmdUtils.previewGet(pblock,
      'http://yubnub.org/parser/parse?command=' + input,
      null,
      function(data){
        var html = data//.match(/<body\s*[^>]*>([\S\s]*?)<\/body>/i)[0]
        html = CmdUtils.absUrl(html, 'http://yubnub.org')
        html = "<style>body{font-size: 0.9rem; text-shadow: none}</style>" + html
        pblock.innerHTML = html;
      }
    );
  },
  execute: function(args) {
    var input = $.trim(args.object.text)
    Utils.openUrlInBrowser("http://yubnub.org/parser/parse?command="+input);
  }
})

]]>
</script>
</body>
</html>